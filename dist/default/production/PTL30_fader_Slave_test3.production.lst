

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 09 22:05:11 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBIGRAM,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	swtext1,local,class=CONST,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x620,48
    32                           	dabs	1,0x5A0,80
    33                           	dabs	1,0x2370,0,I2C1_StatusCallback@EEPROM_Buffer
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.42
    37                           ; Generated 13/04/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F18855 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  001C                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0110                     	;# 
   125  0110                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0198                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  020C                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  020E                     	;# 
   179  020F                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0210                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  0218                     	;# 
   196  0218                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  028C                     	;# 
   208  028C                     	;# 
   209  028D                     	;# 
   210  028D                     	;# 
   211  028E                     	;# 
   212  028F                     	;# 
   213  0290                     	;# 
   214  0290                     	;# 
   215  0291                     	;# 
   216  0292                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0296                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0298                     	;# 
   227  0299                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  030C                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  030F                     	;# 
   239  0310                     	;# 
   240  0310                     	;# 
   241  0311                     	;# 
   242  0312                     	;# 
   243  0313                     	;# 
   244  0314                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0316                     	;# 
   248  0317                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  031B                     	;# 
   254  031C                     	;# 
   255  031C                     	;# 
   256  031D                     	;# 
   257  031E                     	;# 
   258  031F                     	;# 
   259  038C                     	;# 
   260  038D                     	;# 
   261  038E                     	;# 
   262  0390                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  040C                     	;# 
   266  040D                     	;# 
   267  040E                     	;# 
   268  040F                     	;# 
   269  0410                     	;# 
   270  0411                     	;# 
   271  0416                     	;# 
   272  0416                     	;# 
   273  0417                     	;# 
   274  0418                     	;# 
   275  0418                     	;# 
   276  0419                     	;# 
   277  041A                     	;# 
   278  041A                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041C                     	;# 
   282  041D                     	;# 
   283  041E                     	;# 
   284  041F                     	;# 
   285  048C                     	;# 
   286  048C                     	;# 
   287  048D                     	;# 
   288  048E                     	;# 
   289  048F                     	;# 
   290  048F                     	;# 
   291  0490                     	;# 
   292  0491                     	;# 
   293  0492                     	;# 
   294  0492                     	;# 
   295  0493                     	;# 
   296  0494                     	;# 
   297  0495                     	;# 
   298  0495                     	;# 
   299  0496                     	;# 
   300  0497                     	;# 
   301  0498                     	;# 
   302  0499                     	;# 
   303  049A                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049D                     	;# 
   307  050C                     	;# 
   308  050C                     	;# 
   309  050D                     	;# 
   310  050E                     	;# 
   311  050F                     	;# 
   312  050F                     	;# 
   313  0510                     	;# 
   314  0511                     	;# 
   315  0512                     	;# 
   316  0512                     	;# 
   317  0513                     	;# 
   318  0514                     	;# 
   319  0515                     	;# 
   320  0515                     	;# 
   321  0516                     	;# 
   322  0517                     	;# 
   323  0518                     	;# 
   324  0519                     	;# 
   325  051A                     	;# 
   326  051B                     	;# 
   327  051C                     	;# 
   328  051D                     	;# 
   329  058C                     	;# 
   330  058C                     	;# 
   331  058D                     	;# 
   332  058E                     	;# 
   333  058F                     	;# 
   334  058F                     	;# 
   335  0590                     	;# 
   336  0591                     	;# 
   337  0592                     	;# 
   338  0593                     	;# 
   339  060C                     	;# 
   340  060D                     	;# 
   341  060E                     	;# 
   342  060F                     	;# 
   343  0610                     	;# 
   344  0611                     	;# 
   345  0612                     	;# 
   346  0613                     	;# 
   347  0614                     	;# 
   348  0616                     	;# 
   349  0617                     	;# 
   350  0618                     	;# 
   351  0619                     	;# 
   352  061A                     	;# 
   353  061B                     	;# 
   354  061C                     	;# 
   355  061D                     	;# 
   356  061E                     	;# 
   357  068C                     	;# 
   358  068D                     	;# 
   359  068E                     	;# 
   360  068F                     	;# 
   361  0690                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  070C                     	;# 
   367  070D                     	;# 
   368  070E                     	;# 
   369  070F                     	;# 
   370  0710                     	;# 
   371  0711                     	;# 
   372  0712                     	;# 
   373  0713                     	;# 
   374  0714                     	;# 
   375  0716                     	;# 
   376  0717                     	;# 
   377  0718                     	;# 
   378  0719                     	;# 
   379  071A                     	;# 
   380  071B                     	;# 
   381  071C                     	;# 
   382  071D                     	;# 
   383  071E                     	;# 
   384  0796                     	;# 
   385  0797                     	;# 
   386  0798                     	;# 
   387  0799                     	;# 
   388  079A                     	;# 
   389  079B                     	;# 
   390  080C                     	;# 
   391  080D                     	;# 
   392  080E                     	;# 
   393  080F                     	;# 
   394  0810                     	;# 
   395  0811                     	;# 
   396  0812                     	;# 
   397  0813                     	;# 
   398  0814                     	;# 
   399  081A                     	;# 
   400  081B                     	;# 
   401  081C                     	;# 
   402  081D                     	;# 
   403  081E                     	;# 
   404  081F                     	;# 
   405  088C                     	;# 
   406  088D                     	;# 
   407  088E                     	;# 
   408  088F                     	;# 
   409  0890                     	;# 
   410  0891                     	;# 
   411  0892                     	;# 
   412  0893                     	;# 
   413  0895                     	;# 
   414  0896                     	;# 
   415  0897                     	;# 
   416  0898                     	;# 
   417  0899                     	;# 
   418  089A                     	;# 
   419  089B                     	;# 
   420  090C                     	;# 
   421  090E                     	;# 
   422  090F                     	;# 
   423  091F                     	;# 
   424  091F                     	;# 
   425  098F                     	;# 
   426  098F                     	;# 
   427  0990                     	;# 
   428  0991                     	;# 
   429  0992                     	;# 
   430  0993                     	;# 
   431  0994                     	;# 
   432  0995                     	;# 
   433  0996                     	;# 
   434  0997                     	;# 
   435  0E0F                     	;# 
   436  0E10                     	;# 
   437  0E11                     	;# 
   438  0E12                     	;# 
   439  0E13                     	;# 
   440  0E14                     	;# 
   441  0E15                     	;# 
   442  0E16                     	;# 
   443  0E17                     	;# 
   444  0E18                     	;# 
   445  0E19                     	;# 
   446  0E1A                     	;# 
   447  0E1B                     	;# 
   448  0E1C                     	;# 
   449  0E1D                     	;# 
   450  0E1E                     	;# 
   451  0E1F                     	;# 
   452  0E20                     	;# 
   453  0E21                     	;# 
   454  0E22                     	;# 
   455  0E23                     	;# 
   456  0E24                     	;# 
   457  0E25                     	;# 
   458  0E26                     	;# 
   459  0E27                     	;# 
   460  0E28                     	;# 
   461  0E29                     	;# 
   462  0E2A                     	;# 
   463  0E2B                     	;# 
   464  0E2C                     	;# 
   465  0E2D                     	;# 
   466  0E2E                     	;# 
   467  0E2F                     	;# 
   468  0E30                     	;# 
   469  0E31                     	;# 
   470  0E32                     	;# 
   471  0E33                     	;# 
   472  0E34                     	;# 
   473  0E35                     	;# 
   474  0E36                     	;# 
   475  0E37                     	;# 
   476  0E8F                     	;# 
   477  0E90                     	;# 
   478  0E91                     	;# 
   479  0E92                     	;# 
   480  0E93                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E96                     	;# 
   484  0E97                     	;# 
   485  0E9C                     	;# 
   486  0E9D                     	;# 
   487  0E9E                     	;# 
   488  0EA1                     	;# 
   489  0EA2                     	;# 
   490  0EA3                     	;# 
   491  0EA4                     	;# 
   492  0EA5                     	;# 
   493  0EA9                     	;# 
   494  0EAA                     	;# 
   495  0EAB                     	;# 
   496  0EAC                     	;# 
   497  0EB1                     	;# 
   498  0EB2                     	;# 
   499  0EB3                     	;# 
   500  0EB8                     	;# 
   501  0EB9                     	;# 
   502  0EBA                     	;# 
   503  0EBB                     	;# 
   504  0EBC                     	;# 
   505  0EBD                     	;# 
   506  0EBE                     	;# 
   507  0EC3                     	;# 
   508  0EC5                     	;# 
   509  0EC6                     	;# 
   510  0EC7                     	;# 
   511  0EC8                     	;# 
   512  0EC9                     	;# 
   513  0ECA                     	;# 
   514  0ECB                     	;# 
   515  0ECC                     	;# 
   516  0F10                     	;# 
   517  0F11                     	;# 
   518  0F12                     	;# 
   519  0F13                     	;# 
   520  0F14                     	;# 
   521  0F15                     	;# 
   522  0F16                     	;# 
   523  0F17                     	;# 
   524  0F18                     	;# 
   525  0F19                     	;# 
   526  0F1A                     	;# 
   527  0F1B                     	;# 
   528  0F1C                     	;# 
   529  0F1D                     	;# 
   530  0F1E                     	;# 
   531  0F1F                     	;# 
   532  0F20                     	;# 
   533  0F21                     	;# 
   534  0F22                     	;# 
   535  0F23                     	;# 
   536  0F24                     	;# 
   537  0F25                     	;# 
   538  0F26                     	;# 
   539  0F27                     	;# 
   540  0F38                     	;# 
   541  0F39                     	;# 
   542  0F3A                     	;# 
   543  0F3B                     	;# 
   544  0F3C                     	;# 
   545  0F3D                     	;# 
   546  0F3E                     	;# 
   547  0F3F                     	;# 
   548  0F40                     	;# 
   549  0F41                     	;# 
   550  0F43                     	;# 
   551  0F44                     	;# 
   552  0F45                     	;# 
   553  0F46                     	;# 
   554  0F47                     	;# 
   555  0F48                     	;# 
   556  0F49                     	;# 
   557  0F4A                     	;# 
   558  0F4B                     	;# 
   559  0F4C                     	;# 
   560  0F4E                     	;# 
   561  0F4F                     	;# 
   562  0F50                     	;# 
   563  0F51                     	;# 
   564  0F52                     	;# 
   565  0F53                     	;# 
   566  0F54                     	;# 
   567  0F55                     	;# 
   568  0F56                     	;# 
   569  0F57                     	;# 
   570  0F65                     	;# 
   571  0F68                     	;# 
   572  0F69                     	;# 
   573  0F6A                     	;# 
   574  0F6B                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0000                     	;# 
   587  0001                     	;# 
   588  0002                     	;# 
   589  0003                     	;# 
   590  0004                     	;# 
   591  0005                     	;# 
   592  0006                     	;# 
   593  0007                     	;# 
   594  0008                     	;# 
   595  0009                     	;# 
   596  000A                     	;# 
   597  000B                     	;# 
   598  000C                     	;# 
   599  000D                     	;# 
   600  000E                     	;# 
   601  0010                     	;# 
   602  0011                     	;# 
   603  0012                     	;# 
   604  0013                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  001C                     	;# 
   609  001C                     	;# 
   610  001D                     	;# 
   611  001D                     	;# 
   612  001E                     	;# 
   613  001F                     	;# 
   614  008C                     	;# 
   615  008C                     	;# 
   616  008D                     	;# 
   617  008E                     	;# 
   618  008E                     	;# 
   619  008F                     	;# 
   620  0090                     	;# 
   621  0090                     	;# 
   622  0091                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  0110                     	;# 
   641  0110                     	;# 
   642  0111                     	;# 
   643  0112                     	;# 
   644  0112                     	;# 
   645  0113                     	;# 
   646  0114                     	;# 
   647  0114                     	;# 
   648  0115                     	;# 
   649  0116                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0119                     	;# 
   653  0119                     	;# 
   654  0119                     	;# 
   655  011A                     	;# 
   656  011A                     	;# 
   657  011A                     	;# 
   658  011B                     	;# 
   659  011B                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011C                     	;# 
   664  011C                     	;# 
   665  011C                     	;# 
   666  011D                     	;# 
   667  011D                     	;# 
   668  011D                     	;# 
   669  011E                     	;# 
   670  011E                     	;# 
   671  011E                     	;# 
   672  011F                     	;# 
   673  011F                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  018C                     	;# 
   678  018D                     	;# 
   679  018E                     	;# 
   680  018F                     	;# 
   681  0190                     	;# 
   682  0191                     	;# 
   683  0192                     	;# 
   684  0196                     	;# 
   685  0197                     	;# 
   686  0198                     	;# 
   687  0199                     	;# 
   688  019A                     	;# 
   689  019B                     	;# 
   690  019C                     	;# 
   691  020C                     	;# 
   692  020C                     	;# 
   693  020D                     	;# 
   694  020E                     	;# 
   695  020F                     	;# 
   696  020F                     	;# 
   697  0210                     	;# 
   698  0210                     	;# 
   699  0211                     	;# 
   700  0211                     	;# 
   701  0212                     	;# 
   702  0212                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0216                     	;# 
   709  0217                     	;# 
   710  0217                     	;# 
   711  0218                     	;# 
   712  0218                     	;# 
   713  0219                     	;# 
   714  021A                     	;# 
   715  021B                     	;# 
   716  021B                     	;# 
   717  021C                     	;# 
   718  021C                     	;# 
   719  021D                     	;# 
   720  021D                     	;# 
   721  021E                     	;# 
   722  021F                     	;# 
   723  028C                     	;# 
   724  028C                     	;# 
   725  028D                     	;# 
   726  028D                     	;# 
   727  028E                     	;# 
   728  028F                     	;# 
   729  0290                     	;# 
   730  0290                     	;# 
   731  0291                     	;# 
   732  0292                     	;# 
   733  0292                     	;# 
   734  0293                     	;# 
   735  0293                     	;# 
   736  0294                     	;# 
   737  0295                     	;# 
   738  0296                     	;# 
   739  0296                     	;# 
   740  0297                     	;# 
   741  0298                     	;# 
   742  0298                     	;# 
   743  0299                     	;# 
   744  0299                     	;# 
   745  029A                     	;# 
   746  029B                     	;# 
   747  029C                     	;# 
   748  029C                     	;# 
   749  029D                     	;# 
   750  030C                     	;# 
   751  030C                     	;# 
   752  030D                     	;# 
   753  030E                     	;# 
   754  030F                     	;# 
   755  0310                     	;# 
   756  0310                     	;# 
   757  0311                     	;# 
   758  0312                     	;# 
   759  0313                     	;# 
   760  0314                     	;# 
   761  0314                     	;# 
   762  0315                     	;# 
   763  0316                     	;# 
   764  0317                     	;# 
   765  0318                     	;# 
   766  0318                     	;# 
   767  0319                     	;# 
   768  031A                     	;# 
   769  031B                     	;# 
   770  031C                     	;# 
   771  031C                     	;# 
   772  031D                     	;# 
   773  031E                     	;# 
   774  031F                     	;# 
   775  038C                     	;# 
   776  038D                     	;# 
   777  038E                     	;# 
   778  0390                     	;# 
   779  0391                     	;# 
   780  0392                     	;# 
   781  040C                     	;# 
   782  040D                     	;# 
   783  040E                     	;# 
   784  040F                     	;# 
   785  0410                     	;# 
   786  0411                     	;# 
   787  0416                     	;# 
   788  0416                     	;# 
   789  0417                     	;# 
   790  0418                     	;# 
   791  0418                     	;# 
   792  0419                     	;# 
   793  041A                     	;# 
   794  041A                     	;# 
   795  041B                     	;# 
   796  041C                     	;# 
   797  041C                     	;# 
   798  041D                     	;# 
   799  041E                     	;# 
   800  041F                     	;# 
   801  048C                     	;# 
   802  048C                     	;# 
   803  048D                     	;# 
   804  048E                     	;# 
   805  048F                     	;# 
   806  048F                     	;# 
   807  0490                     	;# 
   808  0491                     	;# 
   809  0492                     	;# 
   810  0492                     	;# 
   811  0493                     	;# 
   812  0494                     	;# 
   813  0495                     	;# 
   814  0495                     	;# 
   815  0496                     	;# 
   816  0497                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  050C                     	;# 
   824  050C                     	;# 
   825  050D                     	;# 
   826  050E                     	;# 
   827  050F                     	;# 
   828  050F                     	;# 
   829  0510                     	;# 
   830  0511                     	;# 
   831  0512                     	;# 
   832  0512                     	;# 
   833  0513                     	;# 
   834  0514                     	;# 
   835  0515                     	;# 
   836  0515                     	;# 
   837  0516                     	;# 
   838  0517                     	;# 
   839  0518                     	;# 
   840  0519                     	;# 
   841  051A                     	;# 
   842  051B                     	;# 
   843  051C                     	;# 
   844  051D                     	;# 
   845  058C                     	;# 
   846  058C                     	;# 
   847  058D                     	;# 
   848  058E                     	;# 
   849  058F                     	;# 
   850  058F                     	;# 
   851  0590                     	;# 
   852  0591                     	;# 
   853  0592                     	;# 
   854  0593                     	;# 
   855  060C                     	;# 
   856  060D                     	;# 
   857  060E                     	;# 
   858  060F                     	;# 
   859  0610                     	;# 
   860  0611                     	;# 
   861  0612                     	;# 
   862  0613                     	;# 
   863  0614                     	;# 
   864  0616                     	;# 
   865  0617                     	;# 
   866  0618                     	;# 
   867  0619                     	;# 
   868  061A                     	;# 
   869  061B                     	;# 
   870  061C                     	;# 
   871  061D                     	;# 
   872  061E                     	;# 
   873  068C                     	;# 
   874  068D                     	;# 
   875  068E                     	;# 
   876  068F                     	;# 
   877  0690                     	;# 
   878  0691                     	;# 
   879  0692                     	;# 
   880  0693                     	;# 
   881  0694                     	;# 
   882  070C                     	;# 
   883  070D                     	;# 
   884  070E                     	;# 
   885  070F                     	;# 
   886  0710                     	;# 
   887  0711                     	;# 
   888  0712                     	;# 
   889  0713                     	;# 
   890  0714                     	;# 
   891  0716                     	;# 
   892  0717                     	;# 
   893  0718                     	;# 
   894  0719                     	;# 
   895  071A                     	;# 
   896  071B                     	;# 
   897  071C                     	;# 
   898  071D                     	;# 
   899  071E                     	;# 
   900  0796                     	;# 
   901  0797                     	;# 
   902  0798                     	;# 
   903  0799                     	;# 
   904  079A                     	;# 
   905  079B                     	;# 
   906  080C                     	;# 
   907  080D                     	;# 
   908  080E                     	;# 
   909  080F                     	;# 
   910  0810                     	;# 
   911  0811                     	;# 
   912  0812                     	;# 
   913  0813                     	;# 
   914  0814                     	;# 
   915  081A                     	;# 
   916  081B                     	;# 
   917  081C                     	;# 
   918  081D                     	;# 
   919  081E                     	;# 
   920  081F                     	;# 
   921  088C                     	;# 
   922  088D                     	;# 
   923  088E                     	;# 
   924  088F                     	;# 
   925  0890                     	;# 
   926  0891                     	;# 
   927  0892                     	;# 
   928  0893                     	;# 
   929  0895                     	;# 
   930  0896                     	;# 
   931  0897                     	;# 
   932  0898                     	;# 
   933  0899                     	;# 
   934  089A                     	;# 
   935  089B                     	;# 
   936  090C                     	;# 
   937  090E                     	;# 
   938  090F                     	;# 
   939  091F                     	;# 
   940  091F                     	;# 
   941  098F                     	;# 
   942  098F                     	;# 
   943  0990                     	;# 
   944  0991                     	;# 
   945  0992                     	;# 
   946  0993                     	;# 
   947  0994                     	;# 
   948  0995                     	;# 
   949  0996                     	;# 
   950  0997                     	;# 
   951  0E0F                     	;# 
   952  0E10                     	;# 
   953  0E11                     	;# 
   954  0E12                     	;# 
   955  0E13                     	;# 
   956  0E14                     	;# 
   957  0E15                     	;# 
   958  0E16                     	;# 
   959  0E17                     	;# 
   960  0E18                     	;# 
   961  0E19                     	;# 
   962  0E1A                     	;# 
   963  0E1B                     	;# 
   964  0E1C                     	;# 
   965  0E1D                     	;# 
   966  0E1E                     	;# 
   967  0E1F                     	;# 
   968  0E20                     	;# 
   969  0E21                     	;# 
   970  0E22                     	;# 
   971  0E23                     	;# 
   972  0E24                     	;# 
   973  0E25                     	;# 
   974  0E26                     	;# 
   975  0E27                     	;# 
   976  0E28                     	;# 
   977  0E29                     	;# 
   978  0E2A                     	;# 
   979  0E2B                     	;# 
   980  0E2C                     	;# 
   981  0E2D                     	;# 
   982  0E2E                     	;# 
   983  0E2F                     	;# 
   984  0E30                     	;# 
   985  0E31                     	;# 
   986  0E32                     	;# 
   987  0E33                     	;# 
   988  0E34                     	;# 
   989  0E35                     	;# 
   990  0E36                     	;# 
   991  0E37                     	;# 
   992  0E8F                     	;# 
   993  0E90                     	;# 
   994  0E91                     	;# 
   995  0E92                     	;# 
   996  0E93                     	;# 
   997  0E94                     	;# 
   998  0E95                     	;# 
   999  0E96                     	;# 
  1000  0E97                     	;# 
  1001  0E9C                     	;# 
  1002  0E9D                     	;# 
  1003  0E9E                     	;# 
  1004  0EA1                     	;# 
  1005  0EA2                     	;# 
  1006  0EA3                     	;# 
  1007  0EA4                     	;# 
  1008  0EA5                     	;# 
  1009  0EA9                     	;# 
  1010  0EAA                     	;# 
  1011  0EAB                     	;# 
  1012  0EAC                     	;# 
  1013  0EB1                     	;# 
  1014  0EB2                     	;# 
  1015  0EB3                     	;# 
  1016  0EB8                     	;# 
  1017  0EB9                     	;# 
  1018  0EBA                     	;# 
  1019  0EBB                     	;# 
  1020  0EBC                     	;# 
  1021  0EBD                     	;# 
  1022  0EBE                     	;# 
  1023  0EC3                     	;# 
  1024  0EC5                     	;# 
  1025  0EC6                     	;# 
  1026  0EC7                     	;# 
  1027  0EC8                     	;# 
  1028  0EC9                     	;# 
  1029  0ECA                     	;# 
  1030  0ECB                     	;# 
  1031  0ECC                     	;# 
  1032  0F10                     	;# 
  1033  0F11                     	;# 
  1034  0F12                     	;# 
  1035  0F13                     	;# 
  1036  0F14                     	;# 
  1037  0F15                     	;# 
  1038  0F16                     	;# 
  1039  0F17                     	;# 
  1040  0F18                     	;# 
  1041  0F19                     	;# 
  1042  0F1A                     	;# 
  1043  0F1B                     	;# 
  1044  0F1C                     	;# 
  1045  0F1D                     	;# 
  1046  0F1E                     	;# 
  1047  0F1F                     	;# 
  1048  0F20                     	;# 
  1049  0F21                     	;# 
  1050  0F22                     	;# 
  1051  0F23                     	;# 
  1052  0F24                     	;# 
  1053  0F25                     	;# 
  1054  0F26                     	;# 
  1055  0F27                     	;# 
  1056  0F38                     	;# 
  1057  0F39                     	;# 
  1058  0F3A                     	;# 
  1059  0F3B                     	;# 
  1060  0F3C                     	;# 
  1061  0F3D                     	;# 
  1062  0F3E                     	;# 
  1063  0F3F                     	;# 
  1064  0F40                     	;# 
  1065  0F41                     	;# 
  1066  0F43                     	;# 
  1067  0F44                     	;# 
  1068  0F45                     	;# 
  1069  0F46                     	;# 
  1070  0F47                     	;# 
  1071  0F48                     	;# 
  1072  0F49                     	;# 
  1073  0F4A                     	;# 
  1074  0F4B                     	;# 
  1075  0F4C                     	;# 
  1076  0F4E                     	;# 
  1077  0F4F                     	;# 
  1078  0F50                     	;# 
  1079  0F51                     	;# 
  1080  0F52                     	;# 
  1081  0F53                     	;# 
  1082  0F54                     	;# 
  1083  0F55                     	;# 
  1084  0F56                     	;# 
  1085  0F57                     	;# 
  1086  0F65                     	;# 
  1087  0F68                     	;# 
  1088  0F69                     	;# 
  1089  0F6A                     	;# 
  1090  0F6B                     	;# 
  1091  0FE4                     	;# 
  1092  0FE5                     	;# 
  1093  0FE6                     	;# 
  1094  0FE7                     	;# 
  1095  0FE8                     	;# 
  1096  0FE9                     	;# 
  1097  0FEA                     	;# 
  1098  0FEB                     	;# 
  1099  0FED                     	;# 
  1100  0FEE                     	;# 
  1101  0FEF                     	;# 
  1102  0000                     	;# 
  1103  0001                     	;# 
  1104  0002                     	;# 
  1105  0003                     	;# 
  1106  0004                     	;# 
  1107  0005                     	;# 
  1108  0006                     	;# 
  1109  0007                     	;# 
  1110  0008                     	;# 
  1111  0009                     	;# 
  1112  000A                     	;# 
  1113  000B                     	;# 
  1114  000C                     	;# 
  1115  000D                     	;# 
  1116  000E                     	;# 
  1117  0010                     	;# 
  1118  0011                     	;# 
  1119  0012                     	;# 
  1120  0013                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  001C                     	;# 
  1125  001C                     	;# 
  1126  001D                     	;# 
  1127  001D                     	;# 
  1128  001E                     	;# 
  1129  001F                     	;# 
  1130  008C                     	;# 
  1131  008C                     	;# 
  1132  008D                     	;# 
  1133  008E                     	;# 
  1134  008E                     	;# 
  1135  008F                     	;# 
  1136  0090                     	;# 
  1137  0090                     	;# 
  1138  0091                     	;# 
  1139  0093                     	;# 
  1140  0094                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0097                     	;# 
  1144  0098                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009C                     	;# 
  1149  009D                     	;# 
  1150  009E                     	;# 
  1151  010C                     	;# 
  1152  010D                     	;# 
  1153  010E                     	;# 
  1154  010E                     	;# 
  1155  010F                     	;# 
  1156  0110                     	;# 
  1157  0110                     	;# 
  1158  0111                     	;# 
  1159  0112                     	;# 
  1160  0112                     	;# 
  1161  0113                     	;# 
  1162  0114                     	;# 
  1163  0114                     	;# 
  1164  0115                     	;# 
  1165  0116                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  0119                     	;# 
  1169  0119                     	;# 
  1170  0119                     	;# 
  1171  011A                     	;# 
  1172  011A                     	;# 
  1173  011A                     	;# 
  1174  011B                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011C                     	;# 
  1180  011C                     	;# 
  1181  011C                     	;# 
  1182  011D                     	;# 
  1183  011D                     	;# 
  1184  011D                     	;# 
  1185  011E                     	;# 
  1186  011E                     	;# 
  1187  011E                     	;# 
  1188  011F                     	;# 
  1189  011F                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  018C                     	;# 
  1194  018D                     	;# 
  1195  018E                     	;# 
  1196  018F                     	;# 
  1197  0190                     	;# 
  1198  0191                     	;# 
  1199  0192                     	;# 
  1200  0196                     	;# 
  1201  0197                     	;# 
  1202  0198                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  020C                     	;# 
  1208  020C                     	;# 
  1209  020D                     	;# 
  1210  020E                     	;# 
  1211  020F                     	;# 
  1212  020F                     	;# 
  1213  0210                     	;# 
  1214  0210                     	;# 
  1215  0211                     	;# 
  1216  0211                     	;# 
  1217  0212                     	;# 
  1218  0212                     	;# 
  1219  0213                     	;# 
  1220  0214                     	;# 
  1221  0215                     	;# 
  1222  0215                     	;# 
  1223  0216                     	;# 
  1224  0216                     	;# 
  1225  0217                     	;# 
  1226  0217                     	;# 
  1227  0218                     	;# 
  1228  0218                     	;# 
  1229  0219                     	;# 
  1230  021A                     	;# 
  1231  021B                     	;# 
  1232  021B                     	;# 
  1233  021C                     	;# 
  1234  021C                     	;# 
  1235  021D                     	;# 
  1236  021D                     	;# 
  1237  021E                     	;# 
  1238  021F                     	;# 
  1239  028C                     	;# 
  1240  028C                     	;# 
  1241  028D                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0290                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0292                     	;# 
  1250  0293                     	;# 
  1251  0293                     	;# 
  1252  0294                     	;# 
  1253  0295                     	;# 
  1254  0296                     	;# 
  1255  0296                     	;# 
  1256  0297                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  029B                     	;# 
  1263  029C                     	;# 
  1264  029C                     	;# 
  1265  029D                     	;# 
  1266  030C                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  030F                     	;# 
  1271  0310                     	;# 
  1272  0310                     	;# 
  1273  0311                     	;# 
  1274  0312                     	;# 
  1275  0313                     	;# 
  1276  0314                     	;# 
  1277  0314                     	;# 
  1278  0315                     	;# 
  1279  0316                     	;# 
  1280  0317                     	;# 
  1281  0318                     	;# 
  1282  0318                     	;# 
  1283  0319                     	;# 
  1284  031A                     	;# 
  1285  031B                     	;# 
  1286  031C                     	;# 
  1287  031C                     	;# 
  1288  031D                     	;# 
  1289  031E                     	;# 
  1290  031F                     	;# 
  1291  038C                     	;# 
  1292  038D                     	;# 
  1293  038E                     	;# 
  1294  0390                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  040C                     	;# 
  1298  040D                     	;# 
  1299  040E                     	;# 
  1300  040F                     	;# 
  1301  0410                     	;# 
  1302  0411                     	;# 
  1303  0416                     	;# 
  1304  0416                     	;# 
  1305  0417                     	;# 
  1306  0418                     	;# 
  1307  0418                     	;# 
  1308  0419                     	;# 
  1309  041A                     	;# 
  1310  041A                     	;# 
  1311  041B                     	;# 
  1312  041C                     	;# 
  1313  041C                     	;# 
  1314  041D                     	;# 
  1315  041E                     	;# 
  1316  041F                     	;# 
  1317  048C                     	;# 
  1318  048C                     	;# 
  1319  048D                     	;# 
  1320  048E                     	;# 
  1321  048F                     	;# 
  1322  048F                     	;# 
  1323  0490                     	;# 
  1324  0491                     	;# 
  1325  0492                     	;# 
  1326  0492                     	;# 
  1327  0493                     	;# 
  1328  0494                     	;# 
  1329  0495                     	;# 
  1330  0495                     	;# 
  1331  0496                     	;# 
  1332  0497                     	;# 
  1333  0498                     	;# 
  1334  0499                     	;# 
  1335  049A                     	;# 
  1336  049B                     	;# 
  1337  049C                     	;# 
  1338  049D                     	;# 
  1339  050C                     	;# 
  1340  050C                     	;# 
  1341  050D                     	;# 
  1342  050E                     	;# 
  1343  050F                     	;# 
  1344  050F                     	;# 
  1345  0510                     	;# 
  1346  0511                     	;# 
  1347  0512                     	;# 
  1348  0512                     	;# 
  1349  0513                     	;# 
  1350  0514                     	;# 
  1351  0515                     	;# 
  1352  0515                     	;# 
  1353  0516                     	;# 
  1354  0517                     	;# 
  1355  0518                     	;# 
  1356  0519                     	;# 
  1357  051A                     	;# 
  1358  051B                     	;# 
  1359  051C                     	;# 
  1360  051D                     	;# 
  1361  058C                     	;# 
  1362  058C                     	;# 
  1363  058D                     	;# 
  1364  058E                     	;# 
  1365  058F                     	;# 
  1366  058F                     	;# 
  1367  0590                     	;# 
  1368  0591                     	;# 
  1369  0592                     	;# 
  1370  0593                     	;# 
  1371  060C                     	;# 
  1372  060D                     	;# 
  1373  060E                     	;# 
  1374  060F                     	;# 
  1375  0610                     	;# 
  1376  0611                     	;# 
  1377  0612                     	;# 
  1378  0613                     	;# 
  1379  0614                     	;# 
  1380  0616                     	;# 
  1381  0617                     	;# 
  1382  0618                     	;# 
  1383  0619                     	;# 
  1384  061A                     	;# 
  1385  061B                     	;# 
  1386  061C                     	;# 
  1387  061D                     	;# 
  1388  061E                     	;# 
  1389  068C                     	;# 
  1390  068D                     	;# 
  1391  068E                     	;# 
  1392  068F                     	;# 
  1393  0690                     	;# 
  1394  0691                     	;# 
  1395  0692                     	;# 
  1396  0693                     	;# 
  1397  0694                     	;# 
  1398  070C                     	;# 
  1399  070D                     	;# 
  1400  070E                     	;# 
  1401  070F                     	;# 
  1402  0710                     	;# 
  1403  0711                     	;# 
  1404  0712                     	;# 
  1405  0713                     	;# 
  1406  0714                     	;# 
  1407  0716                     	;# 
  1408  0717                     	;# 
  1409  0718                     	;# 
  1410  0719                     	;# 
  1411  071A                     	;# 
  1412  071B                     	;# 
  1413  071C                     	;# 
  1414  071D                     	;# 
  1415  071E                     	;# 
  1416  0796                     	;# 
  1417  0797                     	;# 
  1418  0798                     	;# 
  1419  0799                     	;# 
  1420  079A                     	;# 
  1421  079B                     	;# 
  1422  080C                     	;# 
  1423  080D                     	;# 
  1424  080E                     	;# 
  1425  080F                     	;# 
  1426  0810                     	;# 
  1427  0811                     	;# 
  1428  0812                     	;# 
  1429  0813                     	;# 
  1430  0814                     	;# 
  1431  081A                     	;# 
  1432  081B                     	;# 
  1433  081C                     	;# 
  1434  081D                     	;# 
  1435  081E                     	;# 
  1436  081F                     	;# 
  1437  088C                     	;# 
  1438  088D                     	;# 
  1439  088E                     	;# 
  1440  088F                     	;# 
  1441  0890                     	;# 
  1442  0891                     	;# 
  1443  0892                     	;# 
  1444  0893                     	;# 
  1445  0895                     	;# 
  1446  0896                     	;# 
  1447  0897                     	;# 
  1448  0898                     	;# 
  1449  0899                     	;# 
  1450  089A                     	;# 
  1451  089B                     	;# 
  1452  090C                     	;# 
  1453  090E                     	;# 
  1454  090F                     	;# 
  1455  091F                     	;# 
  1456  091F                     	;# 
  1457  098F                     	;# 
  1458  098F                     	;# 
  1459  0990                     	;# 
  1460  0991                     	;# 
  1461  0992                     	;# 
  1462  0993                     	;# 
  1463  0994                     	;# 
  1464  0995                     	;# 
  1465  0996                     	;# 
  1466  0997                     	;# 
  1467  0E0F                     	;# 
  1468  0E10                     	;# 
  1469  0E11                     	;# 
  1470  0E12                     	;# 
  1471  0E13                     	;# 
  1472  0E14                     	;# 
  1473  0E15                     	;# 
  1474  0E16                     	;# 
  1475  0E17                     	;# 
  1476  0E18                     	;# 
  1477  0E19                     	;# 
  1478  0E1A                     	;# 
  1479  0E1B                     	;# 
  1480  0E1C                     	;# 
  1481  0E1D                     	;# 
  1482  0E1E                     	;# 
  1483  0E1F                     	;# 
  1484  0E20                     	;# 
  1485  0E21                     	;# 
  1486  0E22                     	;# 
  1487  0E23                     	;# 
  1488  0E24                     	;# 
  1489  0E25                     	;# 
  1490  0E26                     	;# 
  1491  0E27                     	;# 
  1492  0E28                     	;# 
  1493  0E29                     	;# 
  1494  0E2A                     	;# 
  1495  0E2B                     	;# 
  1496  0E2C                     	;# 
  1497  0E2D                     	;# 
  1498  0E2E                     	;# 
  1499  0E2F                     	;# 
  1500  0E30                     	;# 
  1501  0E31                     	;# 
  1502  0E32                     	;# 
  1503  0E33                     	;# 
  1504  0E34                     	;# 
  1505  0E35                     	;# 
  1506  0E36                     	;# 
  1507  0E37                     	;# 
  1508  0E8F                     	;# 
  1509  0E90                     	;# 
  1510  0E91                     	;# 
  1511  0E92                     	;# 
  1512  0E93                     	;# 
  1513  0E94                     	;# 
  1514  0E95                     	;# 
  1515  0E96                     	;# 
  1516  0E97                     	;# 
  1517  0E9C                     	;# 
  1518  0E9D                     	;# 
  1519  0E9E                     	;# 
  1520  0EA1                     	;# 
  1521  0EA2                     	;# 
  1522  0EA3                     	;# 
  1523  0EA4                     	;# 
  1524  0EA5                     	;# 
  1525  0EA9                     	;# 
  1526  0EAA                     	;# 
  1527  0EAB                     	;# 
  1528  0EAC                     	;# 
  1529  0EB1                     	;# 
  1530  0EB2                     	;# 
  1531  0EB3                     	;# 
  1532  0EB8                     	;# 
  1533  0EB9                     	;# 
  1534  0EBA                     	;# 
  1535  0EBB                     	;# 
  1536  0EBC                     	;# 
  1537  0EBD                     	;# 
  1538  0EBE                     	;# 
  1539  0EC3                     	;# 
  1540  0EC5                     	;# 
  1541  0EC6                     	;# 
  1542  0EC7                     	;# 
  1543  0EC8                     	;# 
  1544  0EC9                     	;# 
  1545  0ECA                     	;# 
  1546  0ECB                     	;# 
  1547  0ECC                     	;# 
  1548  0F10                     	;# 
  1549  0F11                     	;# 
  1550  0F12                     	;# 
  1551  0F13                     	;# 
  1552  0F14                     	;# 
  1553  0F15                     	;# 
  1554  0F16                     	;# 
  1555  0F17                     	;# 
  1556  0F18                     	;# 
  1557  0F19                     	;# 
  1558  0F1A                     	;# 
  1559  0F1B                     	;# 
  1560  0F1C                     	;# 
  1561  0F1D                     	;# 
  1562  0F1E                     	;# 
  1563  0F1F                     	;# 
  1564  0F20                     	;# 
  1565  0F21                     	;# 
  1566  0F22                     	;# 
  1567  0F23                     	;# 
  1568  0F24                     	;# 
  1569  0F25                     	;# 
  1570  0F26                     	;# 
  1571  0F27                     	;# 
  1572  0F38                     	;# 
  1573  0F39                     	;# 
  1574  0F3A                     	;# 
  1575  0F3B                     	;# 
  1576  0F3C                     	;# 
  1577  0F3D                     	;# 
  1578  0F3E                     	;# 
  1579  0F3F                     	;# 
  1580  0F40                     	;# 
  1581  0F41                     	;# 
  1582  0F43                     	;# 
  1583  0F44                     	;# 
  1584  0F45                     	;# 
  1585  0F46                     	;# 
  1586  0F47                     	;# 
  1587  0F48                     	;# 
  1588  0F49                     	;# 
  1589  0F4A                     	;# 
  1590  0F4B                     	;# 
  1591  0F4C                     	;# 
  1592  0F4E                     	;# 
  1593  0F4F                     	;# 
  1594  0F50                     	;# 
  1595  0F51                     	;# 
  1596  0F52                     	;# 
  1597  0F53                     	;# 
  1598  0F54                     	;# 
  1599  0F55                     	;# 
  1600  0F56                     	;# 
  1601  0F57                     	;# 
  1602  0F65                     	;# 
  1603  0F68                     	;# 
  1604  0F69                     	;# 
  1605  0F6A                     	;# 
  1606  0F6B                     	;# 
  1607  0FE4                     	;# 
  1608  0FE5                     	;# 
  1609  0FE6                     	;# 
  1610  0FE7                     	;# 
  1611  0FE8                     	;# 
  1612  0FE9                     	;# 
  1613  0FEA                     	;# 
  1614  0FEB                     	;# 
  1615  0FED                     	;# 
  1616  0FEE                     	;# 
  1617  0FEF                     	;# 
  1618  0000                     	;# 
  1619  0001                     	;# 
  1620  0002                     	;# 
  1621  0003                     	;# 
  1622  0004                     	;# 
  1623  0005                     	;# 
  1624  0006                     	;# 
  1625  0007                     	;# 
  1626  0008                     	;# 
  1627  0009                     	;# 
  1628  000A                     	;# 
  1629  000B                     	;# 
  1630  000C                     	;# 
  1631  000D                     	;# 
  1632  000E                     	;# 
  1633  0010                     	;# 
  1634  0011                     	;# 
  1635  0012                     	;# 
  1636  0013                     	;# 
  1637  0016                     	;# 
  1638  0017                     	;# 
  1639  0018                     	;# 
  1640  001C                     	;# 
  1641  001C                     	;# 
  1642  001D                     	;# 
  1643  001D                     	;# 
  1644  001E                     	;# 
  1645  001F                     	;# 
  1646  008C                     	;# 
  1647  008C                     	;# 
  1648  008D                     	;# 
  1649  008E                     	;# 
  1650  008E                     	;# 
  1651  008F                     	;# 
  1652  0090                     	;# 
  1653  0090                     	;# 
  1654  0091                     	;# 
  1655  0093                     	;# 
  1656  0094                     	;# 
  1657  0095                     	;# 
  1658  0096                     	;# 
  1659  0097                     	;# 
  1660  0098                     	;# 
  1661  0099                     	;# 
  1662  009A                     	;# 
  1663  009B                     	;# 
  1664  009C                     	;# 
  1665  009D                     	;# 
  1666  009E                     	;# 
  1667  010C                     	;# 
  1668  010D                     	;# 
  1669  010E                     	;# 
  1670  010E                     	;# 
  1671  010F                     	;# 
  1672  0110                     	;# 
  1673  0110                     	;# 
  1674  0111                     	;# 
  1675  0112                     	;# 
  1676  0112                     	;# 
  1677  0113                     	;# 
  1678  0114                     	;# 
  1679  0114                     	;# 
  1680  0115                     	;# 
  1681  0116                     	;# 
  1682  0116                     	;# 
  1683  0117                     	;# 
  1684  0119                     	;# 
  1685  0119                     	;# 
  1686  0119                     	;# 
  1687  011A                     	;# 
  1688  011A                     	;# 
  1689  011A                     	;# 
  1690  011B                     	;# 
  1691  011B                     	;# 
  1692  011B                     	;# 
  1693  011B                     	;# 
  1694  011B                     	;# 
  1695  011C                     	;# 
  1696  011C                     	;# 
  1697  011C                     	;# 
  1698  011D                     	;# 
  1699  011D                     	;# 
  1700  011D                     	;# 
  1701  011E                     	;# 
  1702  011E                     	;# 
  1703  011E                     	;# 
  1704  011F                     	;# 
  1705  011F                     	;# 
  1706  011F                     	;# 
  1707  011F                     	;# 
  1708  011F                     	;# 
  1709  018C                     	;# 
  1710  018D                     	;# 
  1711  018E                     	;# 
  1712  018F                     	;# 
  1713  0190                     	;# 
  1714  0191                     	;# 
  1715  0192                     	;# 
  1716  0196                     	;# 
  1717  0197                     	;# 
  1718  0198                     	;# 
  1719  0199                     	;# 
  1720  019A                     	;# 
  1721  019B                     	;# 
  1722  019C                     	;# 
  1723  020C                     	;# 
  1724  020C                     	;# 
  1725  020D                     	;# 
  1726  020E                     	;# 
  1727  020F                     	;# 
  1728  020F                     	;# 
  1729  0210                     	;# 
  1730  0210                     	;# 
  1731  0211                     	;# 
  1732  0211                     	;# 
  1733  0212                     	;# 
  1734  0212                     	;# 
  1735  0213                     	;# 
  1736  0214                     	;# 
  1737  0215                     	;# 
  1738  0215                     	;# 
  1739  0216                     	;# 
  1740  0216                     	;# 
  1741  0217                     	;# 
  1742  0217                     	;# 
  1743  0218                     	;# 
  1744  0218                     	;# 
  1745  0219                     	;# 
  1746  021A                     	;# 
  1747  021B                     	;# 
  1748  021B                     	;# 
  1749  021C                     	;# 
  1750  021C                     	;# 
  1751  021D                     	;# 
  1752  021D                     	;# 
  1753  021E                     	;# 
  1754  021F                     	;# 
  1755  028C                     	;# 
  1756  028C                     	;# 
  1757  028D                     	;# 
  1758  028D                     	;# 
  1759  028E                     	;# 
  1760  028F                     	;# 
  1761  0290                     	;# 
  1762  0290                     	;# 
  1763  0291                     	;# 
  1764  0292                     	;# 
  1765  0292                     	;# 
  1766  0293                     	;# 
  1767  0293                     	;# 
  1768  0294                     	;# 
  1769  0295                     	;# 
  1770  0296                     	;# 
  1771  0296                     	;# 
  1772  0297                     	;# 
  1773  0298                     	;# 
  1774  0298                     	;# 
  1775  0299                     	;# 
  1776  0299                     	;# 
  1777  029A                     	;# 
  1778  029B                     	;# 
  1779  029C                     	;# 
  1780  029C                     	;# 
  1781  029D                     	;# 
  1782  030C                     	;# 
  1783  030C                     	;# 
  1784  030D                     	;# 
  1785  030E                     	;# 
  1786  030F                     	;# 
  1787  0310                     	;# 
  1788  0310                     	;# 
  1789  0311                     	;# 
  1790  0312                     	;# 
  1791  0313                     	;# 
  1792  0314                     	;# 
  1793  0314                     	;# 
  1794  0315                     	;# 
  1795  0316                     	;# 
  1796  0317                     	;# 
  1797  0318                     	;# 
  1798  0318                     	;# 
  1799  0319                     	;# 
  1800  031A                     	;# 
  1801  031B                     	;# 
  1802  031C                     	;# 
  1803  031C                     	;# 
  1804  031D                     	;# 
  1805  031E                     	;# 
  1806  031F                     	;# 
  1807  038C                     	;# 
  1808  038D                     	;# 
  1809  038E                     	;# 
  1810  0390                     	;# 
  1811  0391                     	;# 
  1812  0392                     	;# 
  1813  040C                     	;# 
  1814  040D                     	;# 
  1815  040E                     	;# 
  1816  040F                     	;# 
  1817  0410                     	;# 
  1818  0411                     	;# 
  1819  0416                     	;# 
  1820  0416                     	;# 
  1821  0417                     	;# 
  1822  0418                     	;# 
  1823  0418                     	;# 
  1824  0419                     	;# 
  1825  041A                     	;# 
  1826  041A                     	;# 
  1827  041B                     	;# 
  1828  041C                     	;# 
  1829  041C                     	;# 
  1830  041D                     	;# 
  1831  041E                     	;# 
  1832  041F                     	;# 
  1833  048C                     	;# 
  1834  048C                     	;# 
  1835  048D                     	;# 
  1836  048E                     	;# 
  1837  048F                     	;# 
  1838  048F                     	;# 
  1839  0490                     	;# 
  1840  0491                     	;# 
  1841  0492                     	;# 
  1842  0492                     	;# 
  1843  0493                     	;# 
  1844  0494                     	;# 
  1845  0495                     	;# 
  1846  0495                     	;# 
  1847  0496                     	;# 
  1848  0497                     	;# 
  1849  0498                     	;# 
  1850  0499                     	;# 
  1851  049A                     	;# 
  1852  049B                     	;# 
  1853  049C                     	;# 
  1854  049D                     	;# 
  1855  050C                     	;# 
  1856  050C                     	;# 
  1857  050D                     	;# 
  1858  050E                     	;# 
  1859  050F                     	;# 
  1860  050F                     	;# 
  1861  0510                     	;# 
  1862  0511                     	;# 
  1863  0512                     	;# 
  1864  0512                     	;# 
  1865  0513                     	;# 
  1866  0514                     	;# 
  1867  0515                     	;# 
  1868  0515                     	;# 
  1869  0516                     	;# 
  1870  0517                     	;# 
  1871  0518                     	;# 
  1872  0519                     	;# 
  1873  051A                     	;# 
  1874  051B                     	;# 
  1875  051C                     	;# 
  1876  051D                     	;# 
  1877  058C                     	;# 
  1878  058C                     	;# 
  1879  058D                     	;# 
  1880  058E                     	;# 
  1881  058F                     	;# 
  1882  058F                     	;# 
  1883  0590                     	;# 
  1884  0591                     	;# 
  1885  0592                     	;# 
  1886  0593                     	;# 
  1887  060C                     	;# 
  1888  060D                     	;# 
  1889  060E                     	;# 
  1890  060F                     	;# 
  1891  0610                     	;# 
  1892  0611                     	;# 
  1893  0612                     	;# 
  1894  0613                     	;# 
  1895  0614                     	;# 
  1896  0616                     	;# 
  1897  0617                     	;# 
  1898  0618                     	;# 
  1899  0619                     	;# 
  1900  061A                     	;# 
  1901  061B                     	;# 
  1902  061C                     	;# 
  1903  061D                     	;# 
  1904  061E                     	;# 
  1905  068C                     	;# 
  1906  068D                     	;# 
  1907  068E                     	;# 
  1908  068F                     	;# 
  1909  0690                     	;# 
  1910  0691                     	;# 
  1911  0692                     	;# 
  1912  0693                     	;# 
  1913  0694                     	;# 
  1914  070C                     	;# 
  1915  070D                     	;# 
  1916  070E                     	;# 
  1917  070F                     	;# 
  1918  0710                     	;# 
  1919  0711                     	;# 
  1920  0712                     	;# 
  1921  0713                     	;# 
  1922  0714                     	;# 
  1923  0716                     	;# 
  1924  0717                     	;# 
  1925  0718                     	;# 
  1926  0719                     	;# 
  1927  071A                     	;# 
  1928  071B                     	;# 
  1929  071C                     	;# 
  1930  071D                     	;# 
  1931  071E                     	;# 
  1932  0796                     	;# 
  1933  0797                     	;# 
  1934  0798                     	;# 
  1935  0799                     	;# 
  1936  079A                     	;# 
  1937  079B                     	;# 
  1938  080C                     	;# 
  1939  080D                     	;# 
  1940  080E                     	;# 
  1941  080F                     	;# 
  1942  0810                     	;# 
  1943  0811                     	;# 
  1944  0812                     	;# 
  1945  0813                     	;# 
  1946  0814                     	;# 
  1947  081A                     	;# 
  1948  081B                     	;# 
  1949  081C                     	;# 
  1950  081D                     	;# 
  1951  081E                     	;# 
  1952  081F                     	;# 
  1953  088C                     	;# 
  1954  088D                     	;# 
  1955  088E                     	;# 
  1956  088F                     	;# 
  1957  0890                     	;# 
  1958  0891                     	;# 
  1959  0892                     	;# 
  1960  0893                     	;# 
  1961  0895                     	;# 
  1962  0896                     	;# 
  1963  0897                     	;# 
  1964  0898                     	;# 
  1965  0899                     	;# 
  1966  089A                     	;# 
  1967  089B                     	;# 
  1968  090C                     	;# 
  1969  090E                     	;# 
  1970  090F                     	;# 
  1971  091F                     	;# 
  1972  091F                     	;# 
  1973  098F                     	;# 
  1974  098F                     	;# 
  1975  0990                     	;# 
  1976  0991                     	;# 
  1977  0992                     	;# 
  1978  0993                     	;# 
  1979  0994                     	;# 
  1980  0995                     	;# 
  1981  0996                     	;# 
  1982  0997                     	;# 
  1983  0E0F                     	;# 
  1984  0E10                     	;# 
  1985  0E11                     	;# 
  1986  0E12                     	;# 
  1987  0E13                     	;# 
  1988  0E14                     	;# 
  1989  0E15                     	;# 
  1990  0E16                     	;# 
  1991  0E17                     	;# 
  1992  0E18                     	;# 
  1993  0E19                     	;# 
  1994  0E1A                     	;# 
  1995  0E1B                     	;# 
  1996  0E1C                     	;# 
  1997  0E1D                     	;# 
  1998  0E1E                     	;# 
  1999  0E1F                     	;# 
  2000  0E20                     	;# 
  2001  0E21                     	;# 
  2002  0E22                     	;# 
  2003  0E23                     	;# 
  2004  0E24                     	;# 
  2005  0E25                     	;# 
  2006  0E26                     	;# 
  2007  0E27                     	;# 
  2008  0E28                     	;# 
  2009  0E29                     	;# 
  2010  0E2A                     	;# 
  2011  0E2B                     	;# 
  2012  0E2C                     	;# 
  2013  0E2D                     	;# 
  2014  0E2E                     	;# 
  2015  0E2F                     	;# 
  2016  0E30                     	;# 
  2017  0E31                     	;# 
  2018  0E32                     	;# 
  2019  0E33                     	;# 
  2020  0E34                     	;# 
  2021  0E35                     	;# 
  2022  0E36                     	;# 
  2023  0E37                     	;# 
  2024  0E8F                     	;# 
  2025  0E90                     	;# 
  2026  0E91                     	;# 
  2027  0E92                     	;# 
  2028  0E93                     	;# 
  2029  0E94                     	;# 
  2030  0E95                     	;# 
  2031  0E96                     	;# 
  2032  0E97                     	;# 
  2033  0E9C                     	;# 
  2034  0E9D                     	;# 
  2035  0E9E                     	;# 
  2036  0EA1                     	;# 
  2037  0EA2                     	;# 
  2038  0EA3                     	;# 
  2039  0EA4                     	;# 
  2040  0EA5                     	;# 
  2041  0EA9                     	;# 
  2042  0EAA                     	;# 
  2043  0EAB                     	;# 
  2044  0EAC                     	;# 
  2045  0EB1                     	;# 
  2046  0EB2                     	;# 
  2047  0EB3                     	;# 
  2048  0EB8                     	;# 
  2049  0EB9                     	;# 
  2050  0EBA                     	;# 
  2051  0EBB                     	;# 
  2052  0EBC                     	;# 
  2053  0EBD                     	;# 
  2054  0EBE                     	;# 
  2055  0EC3                     	;# 
  2056  0EC5                     	;# 
  2057  0EC6                     	;# 
  2058  0EC7                     	;# 
  2059  0EC8                     	;# 
  2060  0EC9                     	;# 
  2061  0ECA                     	;# 
  2062  0ECB                     	;# 
  2063  0ECC                     	;# 
  2064  0F10                     	;# 
  2065  0F11                     	;# 
  2066  0F12                     	;# 
  2067  0F13                     	;# 
  2068  0F14                     	;# 
  2069  0F15                     	;# 
  2070  0F16                     	;# 
  2071  0F17                     	;# 
  2072  0F18                     	;# 
  2073  0F19                     	;# 
  2074  0F1A                     	;# 
  2075  0F1B                     	;# 
  2076  0F1C                     	;# 
  2077  0F1D                     	;# 
  2078  0F1E                     	;# 
  2079  0F1F                     	;# 
  2080  0F20                     	;# 
  2081  0F21                     	;# 
  2082  0F22                     	;# 
  2083  0F23                     	;# 
  2084  0F24                     	;# 
  2085  0F25                     	;# 
  2086  0F26                     	;# 
  2087  0F27                     	;# 
  2088  0F38                     	;# 
  2089  0F39                     	;# 
  2090  0F3A                     	;# 
  2091  0F3B                     	;# 
  2092  0F3C                     	;# 
  2093  0F3D                     	;# 
  2094  0F3E                     	;# 
  2095  0F3F                     	;# 
  2096  0F40                     	;# 
  2097  0F41                     	;# 
  2098  0F43                     	;# 
  2099  0F44                     	;# 
  2100  0F45                     	;# 
  2101  0F46                     	;# 
  2102  0F47                     	;# 
  2103  0F48                     	;# 
  2104  0F49                     	;# 
  2105  0F4A                     	;# 
  2106  0F4B                     	;# 
  2107  0F4C                     	;# 
  2108  0F4E                     	;# 
  2109  0F4F                     	;# 
  2110  0F50                     	;# 
  2111  0F51                     	;# 
  2112  0F52                     	;# 
  2113  0F53                     	;# 
  2114  0F54                     	;# 
  2115  0F55                     	;# 
  2116  0F56                     	;# 
  2117  0F57                     	;# 
  2118  0F65                     	;# 
  2119  0F68                     	;# 
  2120  0F69                     	;# 
  2121  0F6A                     	;# 
  2122  0F6B                     	;# 
  2123  0FE4                     	;# 
  2124  0FE5                     	;# 
  2125  0FE6                     	;# 
  2126  0FE7                     	;# 
  2127  0FE8                     	;# 
  2128  0FE9                     	;# 
  2129  0FEA                     	;# 
  2130  0FEB                     	;# 
  2131  0FED                     	;# 
  2132  0FEE                     	;# 
  2133  0FEF                     	;# 
  2134  0000                     	;# 
  2135  0001                     	;# 
  2136  0002                     	;# 
  2137  0003                     	;# 
  2138  0004                     	;# 
  2139  0005                     	;# 
  2140  0006                     	;# 
  2141  0007                     	;# 
  2142  0008                     	;# 
  2143  0009                     	;# 
  2144  000A                     	;# 
  2145  000B                     	;# 
  2146  000C                     	;# 
  2147  000D                     	;# 
  2148  000E                     	;# 
  2149  0010                     	;# 
  2150  0011                     	;# 
  2151  0012                     	;# 
  2152  0013                     	;# 
  2153  0016                     	;# 
  2154  0017                     	;# 
  2155  0018                     	;# 
  2156  001C                     	;# 
  2157  001C                     	;# 
  2158  001D                     	;# 
  2159  001D                     	;# 
  2160  001E                     	;# 
  2161  001F                     	;# 
  2162  008C                     	;# 
  2163  008C                     	;# 
  2164  008D                     	;# 
  2165  008E                     	;# 
  2166  008E                     	;# 
  2167  008F                     	;# 
  2168  0090                     	;# 
  2169  0090                     	;# 
  2170  0091                     	;# 
  2171  0093                     	;# 
  2172  0094                     	;# 
  2173  0095                     	;# 
  2174  0096                     	;# 
  2175  0097                     	;# 
  2176  0098                     	;# 
  2177  0099                     	;# 
  2178  009A                     	;# 
  2179  009B                     	;# 
  2180  009C                     	;# 
  2181  009D                     	;# 
  2182  009E                     	;# 
  2183  010C                     	;# 
  2184  010D                     	;# 
  2185  010E                     	;# 
  2186  010E                     	;# 
  2187  010F                     	;# 
  2188  0110                     	;# 
  2189  0110                     	;# 
  2190  0111                     	;# 
  2191  0112                     	;# 
  2192  0112                     	;# 
  2193  0113                     	;# 
  2194  0114                     	;# 
  2195  0114                     	;# 
  2196  0115                     	;# 
  2197  0116                     	;# 
  2198  0116                     	;# 
  2199  0117                     	;# 
  2200  0119                     	;# 
  2201  0119                     	;# 
  2202  0119                     	;# 
  2203  011A                     	;# 
  2204  011A                     	;# 
  2205  011A                     	;# 
  2206  011B                     	;# 
  2207  011B                     	;# 
  2208  011B                     	;# 
  2209  011B                     	;# 
  2210  011B                     	;# 
  2211  011C                     	;# 
  2212  011C                     	;# 
  2213  011C                     	;# 
  2214  011D                     	;# 
  2215  011D                     	;# 
  2216  011D                     	;# 
  2217  011E                     	;# 
  2218  011E                     	;# 
  2219  011E                     	;# 
  2220  011F                     	;# 
  2221  011F                     	;# 
  2222  011F                     	;# 
  2223  011F                     	;# 
  2224  011F                     	;# 
  2225  018C                     	;# 
  2226  018D                     	;# 
  2227  018E                     	;# 
  2228  018F                     	;# 
  2229  0190                     	;# 
  2230  0191                     	;# 
  2231  0192                     	;# 
  2232  0196                     	;# 
  2233  0197                     	;# 
  2234  0198                     	;# 
  2235  0199                     	;# 
  2236  019A                     	;# 
  2237  019B                     	;# 
  2238  019C                     	;# 
  2239  020C                     	;# 
  2240  020C                     	;# 
  2241  020D                     	;# 
  2242  020E                     	;# 
  2243  020F                     	;# 
  2244  020F                     	;# 
  2245  0210                     	;# 
  2246  0210                     	;# 
  2247  0211                     	;# 
  2248  0211                     	;# 
  2249  0212                     	;# 
  2250  0212                     	;# 
  2251  0213                     	;# 
  2252  0214                     	;# 
  2253  0215                     	;# 
  2254  0215                     	;# 
  2255  0216                     	;# 
  2256  0216                     	;# 
  2257  0217                     	;# 
  2258  0217                     	;# 
  2259  0218                     	;# 
  2260  0218                     	;# 
  2261  0219                     	;# 
  2262  021A                     	;# 
  2263  021B                     	;# 
  2264  021B                     	;# 
  2265  021C                     	;# 
  2266  021C                     	;# 
  2267  021D                     	;# 
  2268  021D                     	;# 
  2269  021E                     	;# 
  2270  021F                     	;# 
  2271  028C                     	;# 
  2272  028C                     	;# 
  2273  028D                     	;# 
  2274  028D                     	;# 
  2275  028E                     	;# 
  2276  028F                     	;# 
  2277  0290                     	;# 
  2278  0290                     	;# 
  2279  0291                     	;# 
  2280  0292                     	;# 
  2281  0292                     	;# 
  2282  0293                     	;# 
  2283  0293                     	;# 
  2284  0294                     	;# 
  2285  0295                     	;# 
  2286  0296                     	;# 
  2287  0296                     	;# 
  2288  0297                     	;# 
  2289  0298                     	;# 
  2290  0298                     	;# 
  2291  0299                     	;# 
  2292  0299                     	;# 
  2293  029A                     	;# 
  2294  029B                     	;# 
  2295  029C                     	;# 
  2296  029C                     	;# 
  2297  029D                     	;# 
  2298  030C                     	;# 
  2299  030C                     	;# 
  2300  030D                     	;# 
  2301  030E                     	;# 
  2302  030F                     	;# 
  2303  0310                     	;# 
  2304  0310                     	;# 
  2305  0311                     	;# 
  2306  0312                     	;# 
  2307  0313                     	;# 
  2308  0314                     	;# 
  2309  0314                     	;# 
  2310  0315                     	;# 
  2311  0316                     	;# 
  2312  0317                     	;# 
  2313  0318                     	;# 
  2314  0318                     	;# 
  2315  0319                     	;# 
  2316  031A                     	;# 
  2317  031B                     	;# 
  2318  031C                     	;# 
  2319  031C                     	;# 
  2320  031D                     	;# 
  2321  031E                     	;# 
  2322  031F                     	;# 
  2323  038C                     	;# 
  2324  038D                     	;# 
  2325  038E                     	;# 
  2326  0390                     	;# 
  2327  0391                     	;# 
  2328  0392                     	;# 
  2329  040C                     	;# 
  2330  040D                     	;# 
  2331  040E                     	;# 
  2332  040F                     	;# 
  2333  0410                     	;# 
  2334  0411                     	;# 
  2335  0416                     	;# 
  2336  0416                     	;# 
  2337  0417                     	;# 
  2338  0418                     	;# 
  2339  0418                     	;# 
  2340  0419                     	;# 
  2341  041A                     	;# 
  2342  041A                     	;# 
  2343  041B                     	;# 
  2344  041C                     	;# 
  2345  041C                     	;# 
  2346  041D                     	;# 
  2347  041E                     	;# 
  2348  041F                     	;# 
  2349  048C                     	;# 
  2350  048C                     	;# 
  2351  048D                     	;# 
  2352  048E                     	;# 
  2353  048F                     	;# 
  2354  048F                     	;# 
  2355  0490                     	;# 
  2356  0491                     	;# 
  2357  0492                     	;# 
  2358  0492                     	;# 
  2359  0493                     	;# 
  2360  0494                     	;# 
  2361  0495                     	;# 
  2362  0495                     	;# 
  2363  0496                     	;# 
  2364  0497                     	;# 
  2365  0498                     	;# 
  2366  0499                     	;# 
  2367  049A                     	;# 
  2368  049B                     	;# 
  2369  049C                     	;# 
  2370  049D                     	;# 
  2371  050C                     	;# 
  2372  050C                     	;# 
  2373  050D                     	;# 
  2374  050E                     	;# 
  2375  050F                     	;# 
  2376  050F                     	;# 
  2377  0510                     	;# 
  2378  0511                     	;# 
  2379  0512                     	;# 
  2380  0512                     	;# 
  2381  0513                     	;# 
  2382  0514                     	;# 
  2383  0515                     	;# 
  2384  0515                     	;# 
  2385  0516                     	;# 
  2386  0517                     	;# 
  2387  0518                     	;# 
  2388  0519                     	;# 
  2389  051A                     	;# 
  2390  051B                     	;# 
  2391  051C                     	;# 
  2392  051D                     	;# 
  2393  058C                     	;# 
  2394  058C                     	;# 
  2395  058D                     	;# 
  2396  058E                     	;# 
  2397  058F                     	;# 
  2398  058F                     	;# 
  2399  0590                     	;# 
  2400  0591                     	;# 
  2401  0592                     	;# 
  2402  0593                     	;# 
  2403  060C                     	;# 
  2404  060D                     	;# 
  2405  060E                     	;# 
  2406  060F                     	;# 
  2407  0610                     	;# 
  2408  0611                     	;# 
  2409  0612                     	;# 
  2410  0613                     	;# 
  2411  0614                     	;# 
  2412  0616                     	;# 
  2413  0617                     	;# 
  2414  0618                     	;# 
  2415  0619                     	;# 
  2416  061A                     	;# 
  2417  061B                     	;# 
  2418  061C                     	;# 
  2419  061D                     	;# 
  2420  061E                     	;# 
  2421  068C                     	;# 
  2422  068D                     	;# 
  2423  068E                     	;# 
  2424  068F                     	;# 
  2425  0690                     	;# 
  2426  0691                     	;# 
  2427  0692                     	;# 
  2428  0693                     	;# 
  2429  0694                     	;# 
  2430  070C                     	;# 
  2431  070D                     	;# 
  2432  070E                     	;# 
  2433  070F                     	;# 
  2434  0710                     	;# 
  2435  0711                     	;# 
  2436  0712                     	;# 
  2437  0713                     	;# 
  2438  0714                     	;# 
  2439  0716                     	;# 
  2440  0717                     	;# 
  2441  0718                     	;# 
  2442  0719                     	;# 
  2443  071A                     	;# 
  2444  071B                     	;# 
  2445  071C                     	;# 
  2446  071D                     	;# 
  2447  071E                     	;# 
  2448  0796                     	;# 
  2449  0797                     	;# 
  2450  0798                     	;# 
  2451  0799                     	;# 
  2452  079A                     	;# 
  2453  079B                     	;# 
  2454  080C                     	;# 
  2455  080D                     	;# 
  2456  080E                     	;# 
  2457  080F                     	;# 
  2458  0810                     	;# 
  2459  0811                     	;# 
  2460  0812                     	;# 
  2461  0813                     	;# 
  2462  0814                     	;# 
  2463  081A                     	;# 
  2464  081B                     	;# 
  2465  081C                     	;# 
  2466  081D                     	;# 
  2467  081E                     	;# 
  2468  081F                     	;# 
  2469  088C                     	;# 
  2470  088D                     	;# 
  2471  088E                     	;# 
  2472  088F                     	;# 
  2473  0890                     	;# 
  2474  0891                     	;# 
  2475  0892                     	;# 
  2476  0893                     	;# 
  2477  0895                     	;# 
  2478  0896                     	;# 
  2479  0897                     	;# 
  2480  0898                     	;# 
  2481  0899                     	;# 
  2482  089A                     	;# 
  2483  089B                     	;# 
  2484  090C                     	;# 
  2485  090E                     	;# 
  2486  090F                     	;# 
  2487  091F                     	;# 
  2488  091F                     	;# 
  2489  098F                     	;# 
  2490  098F                     	;# 
  2491  0990                     	;# 
  2492  0991                     	;# 
  2493  0992                     	;# 
  2494  0993                     	;# 
  2495  0994                     	;# 
  2496  0995                     	;# 
  2497  0996                     	;# 
  2498  0997                     	;# 
  2499  0E0F                     	;# 
  2500  0E10                     	;# 
  2501  0E11                     	;# 
  2502  0E12                     	;# 
  2503  0E13                     	;# 
  2504  0E14                     	;# 
  2505  0E15                     	;# 
  2506  0E16                     	;# 
  2507  0E17                     	;# 
  2508  0E18                     	;# 
  2509  0E19                     	;# 
  2510  0E1A                     	;# 
  2511  0E1B                     	;# 
  2512  0E1C                     	;# 
  2513  0E1D                     	;# 
  2514  0E1E                     	;# 
  2515  0E1F                     	;# 
  2516  0E20                     	;# 
  2517  0E21                     	;# 
  2518  0E22                     	;# 
  2519  0E23                     	;# 
  2520  0E24                     	;# 
  2521  0E25                     	;# 
  2522  0E26                     	;# 
  2523  0E27                     	;# 
  2524  0E28                     	;# 
  2525  0E29                     	;# 
  2526  0E2A                     	;# 
  2527  0E2B                     	;# 
  2528  0E2C                     	;# 
  2529  0E2D                     	;# 
  2530  0E2E                     	;# 
  2531  0E2F                     	;# 
  2532  0E30                     	;# 
  2533  0E31                     	;# 
  2534  0E32                     	;# 
  2535  0E33                     	;# 
  2536  0E34                     	;# 
  2537  0E35                     	;# 
  2538  0E36                     	;# 
  2539  0E37                     	;# 
  2540  0E8F                     	;# 
  2541  0E90                     	;# 
  2542  0E91                     	;# 
  2543  0E92                     	;# 
  2544  0E93                     	;# 
  2545  0E94                     	;# 
  2546  0E95                     	;# 
  2547  0E96                     	;# 
  2548  0E97                     	;# 
  2549  0E9C                     	;# 
  2550  0E9D                     	;# 
  2551  0E9E                     	;# 
  2552  0EA1                     	;# 
  2553  0EA2                     	;# 
  2554  0EA3                     	;# 
  2555  0EA4                     	;# 
  2556  0EA5                     	;# 
  2557  0EA9                     	;# 
  2558  0EAA                     	;# 
  2559  0EAB                     	;# 
  2560  0EAC                     	;# 
  2561  0EB1                     	;# 
  2562  0EB2                     	;# 
  2563  0EB3                     	;# 
  2564  0EB8                     	;# 
  2565  0EB9                     	;# 
  2566  0EBA                     	;# 
  2567  0EBB                     	;# 
  2568  0EBC                     	;# 
  2569  0EBD                     	;# 
  2570  0EBE                     	;# 
  2571  0EC3                     	;# 
  2572  0EC5                     	;# 
  2573  0EC6                     	;# 
  2574  0EC7                     	;# 
  2575  0EC8                     	;# 
  2576  0EC9                     	;# 
  2577  0ECA                     	;# 
  2578  0ECB                     	;# 
  2579  0ECC                     	;# 
  2580  0F10                     	;# 
  2581  0F11                     	;# 
  2582  0F12                     	;# 
  2583  0F13                     	;# 
  2584  0F14                     	;# 
  2585  0F15                     	;# 
  2586  0F16                     	;# 
  2587  0F17                     	;# 
  2588  0F18                     	;# 
  2589  0F19                     	;# 
  2590  0F1A                     	;# 
  2591  0F1B                     	;# 
  2592  0F1C                     	;# 
  2593  0F1D                     	;# 
  2594  0F1E                     	;# 
  2595  0F1F                     	;# 
  2596  0F20                     	;# 
  2597  0F21                     	;# 
  2598  0F22                     	;# 
  2599  0F23                     	;# 
  2600  0F24                     	;# 
  2601  0F25                     	;# 
  2602  0F26                     	;# 
  2603  0F27                     	;# 
  2604  0F38                     	;# 
  2605  0F39                     	;# 
  2606  0F3A                     	;# 
  2607  0F3B                     	;# 
  2608  0F3C                     	;# 
  2609  0F3D                     	;# 
  2610  0F3E                     	;# 
  2611  0F3F                     	;# 
  2612  0F40                     	;# 
  2613  0F41                     	;# 
  2614  0F43                     	;# 
  2615  0F44                     	;# 
  2616  0F45                     	;# 
  2617  0F46                     	;# 
  2618  0F47                     	;# 
  2619  0F48                     	;# 
  2620  0F49                     	;# 
  2621  0F4A                     	;# 
  2622  0F4B                     	;# 
  2623  0F4C                     	;# 
  2624  0F4E                     	;# 
  2625  0F4F                     	;# 
  2626  0F50                     	;# 
  2627  0F51                     	;# 
  2628  0F52                     	;# 
  2629  0F53                     	;# 
  2630  0F54                     	;# 
  2631  0F55                     	;# 
  2632  0F56                     	;# 
  2633  0F57                     	;# 
  2634  0F65                     	;# 
  2635  0F68                     	;# 
  2636  0F69                     	;# 
  2637  0F6A                     	;# 
  2638  0F6B                     	;# 
  2639  0FE4                     	;# 
  2640  0FE5                     	;# 
  2641  0FE6                     	;# 
  2642  0FE7                     	;# 
  2643  0FE8                     	;# 
  2644  0FE9                     	;# 
  2645  0FEA                     	;# 
  2646  0FEB                     	;# 
  2647  0FED                     	;# 
  2648  0FEE                     	;# 
  2649  0FEF                     	;# 
  2650  0000                     	;# 
  2651  0001                     	;# 
  2652  0002                     	;# 
  2653  0003                     	;# 
  2654  0004                     	;# 
  2655  0005                     	;# 
  2656  0006                     	;# 
  2657  0007                     	;# 
  2658  0008                     	;# 
  2659  0009                     	;# 
  2660  000A                     	;# 
  2661  000B                     	;# 
  2662  000C                     	;# 
  2663  000D                     	;# 
  2664  000E                     	;# 
  2665  0010                     	;# 
  2666  0011                     	;# 
  2667  0012                     	;# 
  2668  0013                     	;# 
  2669  0016                     	;# 
  2670  0017                     	;# 
  2671  0018                     	;# 
  2672  001C                     	;# 
  2673  001C                     	;# 
  2674  001D                     	;# 
  2675  001D                     	;# 
  2676  001E                     	;# 
  2677  001F                     	;# 
  2678  008C                     	;# 
  2679  008C                     	;# 
  2680  008D                     	;# 
  2681  008E                     	;# 
  2682  008E                     	;# 
  2683  008F                     	;# 
  2684  0090                     	;# 
  2685  0090                     	;# 
  2686  0091                     	;# 
  2687  0093                     	;# 
  2688  0094                     	;# 
  2689  0095                     	;# 
  2690  0096                     	;# 
  2691  0097                     	;# 
  2692  0098                     	;# 
  2693  0099                     	;# 
  2694  009A                     	;# 
  2695  009B                     	;# 
  2696  009C                     	;# 
  2697  009D                     	;# 
  2698  009E                     	;# 
  2699  010C                     	;# 
  2700  010D                     	;# 
  2701  010E                     	;# 
  2702  010E                     	;# 
  2703  010F                     	;# 
  2704  0110                     	;# 
  2705  0110                     	;# 
  2706  0111                     	;# 
  2707  0112                     	;# 
  2708  0112                     	;# 
  2709  0113                     	;# 
  2710  0114                     	;# 
  2711  0114                     	;# 
  2712  0115                     	;# 
  2713  0116                     	;# 
  2714  0116                     	;# 
  2715  0117                     	;# 
  2716  0119                     	;# 
  2717  0119                     	;# 
  2718  0119                     	;# 
  2719  011A                     	;# 
  2720  011A                     	;# 
  2721  011A                     	;# 
  2722  011B                     	;# 
  2723  011B                     	;# 
  2724  011B                     	;# 
  2725  011B                     	;# 
  2726  011B                     	;# 
  2727  011C                     	;# 
  2728  011C                     	;# 
  2729  011C                     	;# 
  2730  011D                     	;# 
  2731  011D                     	;# 
  2732  011D                     	;# 
  2733  011E                     	;# 
  2734  011E                     	;# 
  2735  011E                     	;# 
  2736  011F                     	;# 
  2737  011F                     	;# 
  2738  011F                     	;# 
  2739  011F                     	;# 
  2740  011F                     	;# 
  2741  018C                     	;# 
  2742  018D                     	;# 
  2743  018E                     	;# 
  2744  018F                     	;# 
  2745  0190                     	;# 
  2746  0191                     	;# 
  2747  0192                     	;# 
  2748  0196                     	;# 
  2749  0197                     	;# 
  2750  0198                     	;# 
  2751  0199                     	;# 
  2752  019A                     	;# 
  2753  019B                     	;# 
  2754  019C                     	;# 
  2755  020C                     	;# 
  2756  020C                     	;# 
  2757  020D                     	;# 
  2758  020E                     	;# 
  2759  020F                     	;# 
  2760  020F                     	;# 
  2761  0210                     	;# 
  2762  0210                     	;# 
  2763  0211                     	;# 
  2764  0211                     	;# 
  2765  0212                     	;# 
  2766  0212                     	;# 
  2767  0213                     	;# 
  2768  0214                     	;# 
  2769  0215                     	;# 
  2770  0215                     	;# 
  2771  0216                     	;# 
  2772  0216                     	;# 
  2773  0217                     	;# 
  2774  0217                     	;# 
  2775  0218                     	;# 
  2776  0218                     	;# 
  2777  0219                     	;# 
  2778  021A                     	;# 
  2779  021B                     	;# 
  2780  021B                     	;# 
  2781  021C                     	;# 
  2782  021C                     	;# 
  2783  021D                     	;# 
  2784  021D                     	;# 
  2785  021E                     	;# 
  2786  021F                     	;# 
  2787  028C                     	;# 
  2788  028C                     	;# 
  2789  028D                     	;# 
  2790  028D                     	;# 
  2791  028E                     	;# 
  2792  028F                     	;# 
  2793  0290                     	;# 
  2794  0290                     	;# 
  2795  0291                     	;# 
  2796  0292                     	;# 
  2797  0292                     	;# 
  2798  0293                     	;# 
  2799  0293                     	;# 
  2800  0294                     	;# 
  2801  0295                     	;# 
  2802  0296                     	;# 
  2803  0296                     	;# 
  2804  0297                     	;# 
  2805  0298                     	;# 
  2806  0298                     	;# 
  2807  0299                     	;# 
  2808  0299                     	;# 
  2809  029A                     	;# 
  2810  029B                     	;# 
  2811  029C                     	;# 
  2812  029C                     	;# 
  2813  029D                     	;# 
  2814  030C                     	;# 
  2815  030C                     	;# 
  2816  030D                     	;# 
  2817  030E                     	;# 
  2818  030F                     	;# 
  2819  0310                     	;# 
  2820  0310                     	;# 
  2821  0311                     	;# 
  2822  0312                     	;# 
  2823  0313                     	;# 
  2824  0314                     	;# 
  2825  0314                     	;# 
  2826  0315                     	;# 
  2827  0316                     	;# 
  2828  0317                     	;# 
  2829  0318                     	;# 
  2830  0318                     	;# 
  2831  0319                     	;# 
  2832  031A                     	;# 
  2833  031B                     	;# 
  2834  031C                     	;# 
  2835  031C                     	;# 
  2836  031D                     	;# 
  2837  031E                     	;# 
  2838  031F                     	;# 
  2839  038C                     	;# 
  2840  038D                     	;# 
  2841  038E                     	;# 
  2842  0390                     	;# 
  2843  0391                     	;# 
  2844  0392                     	;# 
  2845  040C                     	;# 
  2846  040D                     	;# 
  2847  040E                     	;# 
  2848  040F                     	;# 
  2849  0410                     	;# 
  2850  0411                     	;# 
  2851  0416                     	;# 
  2852  0416                     	;# 
  2853  0417                     	;# 
  2854  0418                     	;# 
  2855  0418                     	;# 
  2856  0419                     	;# 
  2857  041A                     	;# 
  2858  041A                     	;# 
  2859  041B                     	;# 
  2860  041C                     	;# 
  2861  041C                     	;# 
  2862  041D                     	;# 
  2863  041E                     	;# 
  2864  041F                     	;# 
  2865  048C                     	;# 
  2866  048C                     	;# 
  2867  048D                     	;# 
  2868  048E                     	;# 
  2869  048F                     	;# 
  2870  048F                     	;# 
  2871  0490                     	;# 
  2872  0491                     	;# 
  2873  0492                     	;# 
  2874  0492                     	;# 
  2875  0493                     	;# 
  2876  0494                     	;# 
  2877  0495                     	;# 
  2878  0495                     	;# 
  2879  0496                     	;# 
  2880  0497                     	;# 
  2881  0498                     	;# 
  2882  0499                     	;# 
  2883  049A                     	;# 
  2884  049B                     	;# 
  2885  049C                     	;# 
  2886  049D                     	;# 
  2887  050C                     	;# 
  2888  050C                     	;# 
  2889  050D                     	;# 
  2890  050E                     	;# 
  2891  050F                     	;# 
  2892  050F                     	;# 
  2893  0510                     	;# 
  2894  0511                     	;# 
  2895  0512                     	;# 
  2896  0512                     	;# 
  2897  0513                     	;# 
  2898  0514                     	;# 
  2899  0515                     	;# 
  2900  0515                     	;# 
  2901  0516                     	;# 
  2902  0517                     	;# 
  2903  0518                     	;# 
  2904  0519                     	;# 
  2905  051A                     	;# 
  2906  051B                     	;# 
  2907  051C                     	;# 
  2908  051D                     	;# 
  2909  058C                     	;# 
  2910  058C                     	;# 
  2911  058D                     	;# 
  2912  058E                     	;# 
  2913  058F                     	;# 
  2914  058F                     	;# 
  2915  0590                     	;# 
  2916  0591                     	;# 
  2917  0592                     	;# 
  2918  0593                     	;# 
  2919  060C                     	;# 
  2920  060D                     	;# 
  2921  060E                     	;# 
  2922  060F                     	;# 
  2923  0610                     	;# 
  2924  0611                     	;# 
  2925  0612                     	;# 
  2926  0613                     	;# 
  2927  0614                     	;# 
  2928  0616                     	;# 
  2929  0617                     	;# 
  2930  0618                     	;# 
  2931  0619                     	;# 
  2932  061A                     	;# 
  2933  061B                     	;# 
  2934  061C                     	;# 
  2935  061D                     	;# 
  2936  061E                     	;# 
  2937  068C                     	;# 
  2938  068D                     	;# 
  2939  068E                     	;# 
  2940  068F                     	;# 
  2941  0690                     	;# 
  2942  0691                     	;# 
  2943  0692                     	;# 
  2944  0693                     	;# 
  2945  0694                     	;# 
  2946  070C                     	;# 
  2947  070D                     	;# 
  2948  070E                     	;# 
  2949  070F                     	;# 
  2950  0710                     	;# 
  2951  0711                     	;# 
  2952  0712                     	;# 
  2953  0713                     	;# 
  2954  0714                     	;# 
  2955  0716                     	;# 
  2956  0717                     	;# 
  2957  0718                     	;# 
  2958  0719                     	;# 
  2959  071A                     	;# 
  2960  071B                     	;# 
  2961  071C                     	;# 
  2962  071D                     	;# 
  2963  071E                     	;# 
  2964  0796                     	;# 
  2965  0797                     	;# 
  2966  0798                     	;# 
  2967  0799                     	;# 
  2968  079A                     	;# 
  2969  079B                     	;# 
  2970  080C                     	;# 
  2971  080D                     	;# 
  2972  080E                     	;# 
  2973  080F                     	;# 
  2974  0810                     	;# 
  2975  0811                     	;# 
  2976  0812                     	;# 
  2977  0813                     	;# 
  2978  0814                     	;# 
  2979  081A                     	;# 
  2980  081B                     	;# 
  2981  081C                     	;# 
  2982  081D                     	;# 
  2983  081E                     	;# 
  2984  081F                     	;# 
  2985  088C                     	;# 
  2986  088D                     	;# 
  2987  088E                     	;# 
  2988  088F                     	;# 
  2989  0890                     	;# 
  2990  0891                     	;# 
  2991  0892                     	;# 
  2992  0893                     	;# 
  2993  0895                     	;# 
  2994  0896                     	;# 
  2995  0897                     	;# 
  2996  0898                     	;# 
  2997  0899                     	;# 
  2998  089A                     	;# 
  2999  089B                     	;# 
  3000  090C                     	;# 
  3001  090E                     	;# 
  3002  090F                     	;# 
  3003  091F                     	;# 
  3004  091F                     	;# 
  3005  098F                     	;# 
  3006  098F                     	;# 
  3007  0990                     	;# 
  3008  0991                     	;# 
  3009  0992                     	;# 
  3010  0993                     	;# 
  3011  0994                     	;# 
  3012  0995                     	;# 
  3013  0996                     	;# 
  3014  0997                     	;# 
  3015  0E0F                     	;# 
  3016  0E10                     	;# 
  3017  0E11                     	;# 
  3018  0E12                     	;# 
  3019  0E13                     	;# 
  3020  0E14                     	;# 
  3021  0E15                     	;# 
  3022  0E16                     	;# 
  3023  0E17                     	;# 
  3024  0E18                     	;# 
  3025  0E19                     	;# 
  3026  0E1A                     	;# 
  3027  0E1B                     	;# 
  3028  0E1C                     	;# 
  3029  0E1D                     	;# 
  3030  0E1E                     	;# 
  3031  0E1F                     	;# 
  3032  0E20                     	;# 
  3033  0E21                     	;# 
  3034  0E22                     	;# 
  3035  0E23                     	;# 
  3036  0E24                     	;# 
  3037  0E25                     	;# 
  3038  0E26                     	;# 
  3039  0E27                     	;# 
  3040  0E28                     	;# 
  3041  0E29                     	;# 
  3042  0E2A                     	;# 
  3043  0E2B                     	;# 
  3044  0E2C                     	;# 
  3045  0E2D                     	;# 
  3046  0E2E                     	;# 
  3047  0E2F                     	;# 
  3048  0E30                     	;# 
  3049  0E31                     	;# 
  3050  0E32                     	;# 
  3051  0E33                     	;# 
  3052  0E34                     	;# 
  3053  0E35                     	;# 
  3054  0E36                     	;# 
  3055  0E37                     	;# 
  3056  0E8F                     	;# 
  3057  0E90                     	;# 
  3058  0E91                     	;# 
  3059  0E92                     	;# 
  3060  0E93                     	;# 
  3061  0E94                     	;# 
  3062  0E95                     	;# 
  3063  0E96                     	;# 
  3064  0E97                     	;# 
  3065  0E9C                     	;# 
  3066  0E9D                     	;# 
  3067  0E9E                     	;# 
  3068  0EA1                     	;# 
  3069  0EA2                     	;# 
  3070  0EA3                     	;# 
  3071  0EA4                     	;# 
  3072  0EA5                     	;# 
  3073  0EA9                     	;# 
  3074  0EAA                     	;# 
  3075  0EAB                     	;# 
  3076  0EAC                     	;# 
  3077  0EB1                     	;# 
  3078  0EB2                     	;# 
  3079  0EB3                     	;# 
  3080  0EB8                     	;# 
  3081  0EB9                     	;# 
  3082  0EBA                     	;# 
  3083  0EBB                     	;# 
  3084  0EBC                     	;# 
  3085  0EBD                     	;# 
  3086  0EBE                     	;# 
  3087  0EC3                     	;# 
  3088  0EC5                     	;# 
  3089  0EC6                     	;# 
  3090  0EC7                     	;# 
  3091  0EC8                     	;# 
  3092  0EC9                     	;# 
  3093  0ECA                     	;# 
  3094  0ECB                     	;# 
  3095  0ECC                     	;# 
  3096  0F10                     	;# 
  3097  0F11                     	;# 
  3098  0F12                     	;# 
  3099  0F13                     	;# 
  3100  0F14                     	;# 
  3101  0F15                     	;# 
  3102  0F16                     	;# 
  3103  0F17                     	;# 
  3104  0F18                     	;# 
  3105  0F19                     	;# 
  3106  0F1A                     	;# 
  3107  0F1B                     	;# 
  3108  0F1C                     	;# 
  3109  0F1D                     	;# 
  3110  0F1E                     	;# 
  3111  0F1F                     	;# 
  3112  0F20                     	;# 
  3113  0F21                     	;# 
  3114  0F22                     	;# 
  3115  0F23                     	;# 
  3116  0F24                     	;# 
  3117  0F25                     	;# 
  3118  0F26                     	;# 
  3119  0F27                     	;# 
  3120  0F38                     	;# 
  3121  0F39                     	;# 
  3122  0F3A                     	;# 
  3123  0F3B                     	;# 
  3124  0F3C                     	;# 
  3125  0F3D                     	;# 
  3126  0F3E                     	;# 
  3127  0F3F                     	;# 
  3128  0F40                     	;# 
  3129  0F41                     	;# 
  3130  0F43                     	;# 
  3131  0F44                     	;# 
  3132  0F45                     	;# 
  3133  0F46                     	;# 
  3134  0F47                     	;# 
  3135  0F48                     	;# 
  3136  0F49                     	;# 
  3137  0F4A                     	;# 
  3138  0F4B                     	;# 
  3139  0F4C                     	;# 
  3140  0F4E                     	;# 
  3141  0F4F                     	;# 
  3142  0F50                     	;# 
  3143  0F51                     	;# 
  3144  0F52                     	;# 
  3145  0F53                     	;# 
  3146  0F54                     	;# 
  3147  0F55                     	;# 
  3148  0F56                     	;# 
  3149  0F57                     	;# 
  3150  0F65                     	;# 
  3151  0F68                     	;# 
  3152  0F69                     	;# 
  3153  0F6A                     	;# 
  3154  0F6B                     	;# 
  3155  0FE4                     	;# 
  3156  0FE5                     	;# 
  3157  0FE6                     	;# 
  3158  0FE7                     	;# 
  3159  0FE8                     	;# 
  3160  0FE9                     	;# 
  3161  0FEA                     	;# 
  3162  0FEB                     	;# 
  3163  0FED                     	;# 
  3164  0FEE                     	;# 
  3165  0FEF                     	;I2C1_StatusCallback@EEPROM_Buffer
  3166                           
  3167                           	psect	idataCOMMON
  3168  05AD                     __pidataCOMMON:	
  3169                           
  3170                           ;initializer for _I2C1_slaveWriteData
  3171  05AD  3455               	retlw	85
  3172                           
  3173                           	psect	idataBIGRAM
  3174  0340                     __pidataBIGRAM:	
  3175                           
  3176                           ;initializer for I2C1_StatusCallback@EEPROM_Buffer
  3177  0340  3400               	retlw	0
  3178  0341  3401               	retlw	1
  3179  0342  3402               	retlw	2
  3180  0343  3403               	retlw	3
  3181  0344  3404               	retlw	4
  3182  0345  3405               	retlw	5
  3183  0346  3406               	retlw	6
  3184  0347  3407               	retlw	7
  3185  0348  3408               	retlw	8
  3186  0349  3409               	retlw	9
  3187  034A  340A               	retlw	10
  3188  034B  340B               	retlw	11
  3189  034C  340C               	retlw	12
  3190  034D  340D               	retlw	13
  3191  034E  340E               	retlw	14
  3192  034F  340F               	retlw	15
  3193  0350  3410               	retlw	16
  3194  0351  3411               	retlw	17
  3195  0352  3412               	retlw	18
  3196  0353  3413               	retlw	19
  3197  0354  3414               	retlw	20
  3198  0355  3415               	retlw	21
  3199  0356  3416               	retlw	22
  3200  0357  3417               	retlw	23
  3201  0358  3418               	retlw	24
  3202  0359  3419               	retlw	25
  3203  035A  341A               	retlw	26
  3204  035B  341B               	retlw	27
  3205  035C  341C               	retlw	28
  3206  035D  341D               	retlw	29
  3207  035E  341E               	retlw	30
  3208  035F  341F               	retlw	31
  3209  0360  3420               	retlw	32
  3210  0361  3421               	retlw	33
  3211  0362  3422               	retlw	34
  3212  0363  3423               	retlw	35
  3213  0364  3424               	retlw	36
  3214  0365  3425               	retlw	37
  3215  0366  3426               	retlw	38
  3216  0367  3427               	retlw	39
  3217  0368  3428               	retlw	40
  3218  0369  3429               	retlw	41
  3219  036A  342A               	retlw	42
  3220  036B  342B               	retlw	43
  3221  036C  342C               	retlw	44
  3222  036D  342D               	retlw	45
  3223  036E  342E               	retlw	46
  3224  036F  342F               	retlw	47
  3225  0370  3430               	retlw	48
  3226  0371  3431               	retlw	49
  3227  0372  3432               	retlw	50
  3228  0373  3433               	retlw	51
  3229  0374  3434               	retlw	52
  3230  0375  3435               	retlw	53
  3231  0376  3436               	retlw	54
  3232  0377  3437               	retlw	55
  3233  0378  3438               	retlw	56
  3234  0379  3439               	retlw	57
  3235  037A  343A               	retlw	58
  3236  037B  343B               	retlw	59
  3237  037C  343C               	retlw	60
  3238  037D  343D               	retlw	61
  3239  037E  343E               	retlw	62
  3240  037F  343F               	retlw	63
  3241  0380  3440               	retlw	64
  3242  0381  3441               	retlw	65
  3243  0382  3442               	retlw	66
  3244  0383  3443               	retlw	67
  3245  0384  3444               	retlw	68
  3246  0385  3445               	retlw	69
  3247  0386  3446               	retlw	70
  3248  0387  3447               	retlw	71
  3249  0388  3448               	retlw	72
  3250  0389  3449               	retlw	73
  3251  038A  344A               	retlw	74
  3252  038B  344B               	retlw	75
  3253  038C  344C               	retlw	76
  3254  038D  344D               	retlw	77
  3255  038E  344E               	retlw	78
  3256  038F  344F               	retlw	79
  3257  0390  3450               	retlw	80
  3258  0391  3451               	retlw	81
  3259  0392  3452               	retlw	82
  3260  0393  3453               	retlw	83
  3261  0394  3454               	retlw	84
  3262  0395  3455               	retlw	85
  3263  0396  3456               	retlw	86
  3264  0397  3457               	retlw	87
  3265  0398  3458               	retlw	88
  3266  0399  3459               	retlw	89
  3267  039A  345A               	retlw	90
  3268  039B  345B               	retlw	91
  3269  039C  345C               	retlw	92
  3270  039D  345D               	retlw	93
  3271  039E  345E               	retlw	94
  3272  039F  345F               	retlw	95
  3273  03A0  3460               	retlw	96
  3274  03A1  3461               	retlw	97
  3275  03A2  3462               	retlw	98
  3276  03A3  3463               	retlw	99
  3277  03A4  3464               	retlw	100
  3278  03A5  3465               	retlw	101
  3279  03A6  3466               	retlw	102
  3280  03A7  3467               	retlw	103
  3281  03A8  3468               	retlw	104
  3282  03A9  3469               	retlw	105
  3283  03AA  346A               	retlw	106
  3284  03AB  346B               	retlw	107
  3285  03AC  346C               	retlw	108
  3286  03AD  346D               	retlw	109
  3287  03AE  346E               	retlw	110
  3288  03AF  346F               	retlw	111
  3289  03B0  3470               	retlw	112
  3290  03B1  3471               	retlw	113
  3291  03B2  3472               	retlw	114
  3292  03B3  3473               	retlw	115
  3293  03B4  3474               	retlw	116
  3294  03B5  3475               	retlw	117
  3295  03B6  3476               	retlw	118
  3296  03B7  3477               	retlw	119
  3297  03B8  3478               	retlw	120
  3298  03B9  3479               	retlw	121
  3299  03BA  347A               	retlw	122
  3300  03BB  347B               	retlw	123
  3301  03BC  347C               	retlw	124
  3302  03BD  347D               	retlw	125
  3303  03BE  347E               	retlw	126
  3304  03BF  347F               	retlw	127
  3305                           
  3306                           	psect	stringtext1
  3307  05A9                     __pstringtext1:	
  3308  05A9                     _cMaxFaderCnt:	
  3309  05A9  3408               	retlw	8
  3310  05AA  3400               	retlw	0
  3311  05AB                     __end_of_cMaxFaderCnt:	
  3312                           
  3313                           	psect	stringtext2
  3314  05AB                     __pstringtext2:	
  3315  05AB                     _cMstrClkAdjust:	
  3316  05AB  3420               	retlw	32
  3317  05AC  3400               	retlw	0
  3318  05AD                     __end_of_cMstrClkAdjust:	
  3319  000B                     _INTCONbits	set	11
  3320  0013                     _TRISC	set	19
  3321  0012                     _TRISB	set	18
  3322  0011                     _TRISA	set	17
  3323  0018                     _LATC	set	24
  3324  0017                     _LATB	set	23
  3325  0016                     _LATA	set	22
  3326  005F                     _GIE	set	95
  3327  0094                     _ADCON1bits	set	148
  3328  008E                     _ADPREVL	set	142
  3329  008F                     _ADPREVH	set	143
  3330  0097                     _ADSTATbits	set	151
  3331  0090                     _ADACCL	set	144
  3332  0091                     _ADACCH	set	145
  3333  0095                     _ADCON2bits	set	149
  3334  0096                     _ADCON3bits	set	150
  3335  008C                     _ADRESL	set	140
  3336  008D                     _ADRESH	set	141
  3337  0093                     _ADCON0bits	set	147
  3338  0093                     _ADCON0	set	147
  3339  009E                     _ADPCH	set	158
  3340  009D                     _ADACQ	set	157
  3341  009C                     _ADPRE	set	156
  3342  009B                     _ADCAP	set	155
  3343  009A                     _ADREF	set	154
  3344  0098                     _ADCLK	set	152
  3345  0097                     _ADSTAT	set	151
  3346  0099                     _ADACT	set	153
  3347  0096                     _ADCON3	set	150
  3348  0095                     _ADCON2	set	149
  3349  0094                     _ADCON1	set	148
  3350  0116                     _ADERRL	set	278
  3351  0117                     _ADERRH	set	279
  3352  0114                     _ADFLTRL	set	276
  3353  0115                     _ADFLTRH	set	277
  3354  010C                     _ADCNT	set	268
  3355  0113                     _ADSTPTH	set	275
  3356  0112                     _ADSTPTL	set	274
  3357  0111                     _ADUTHH	set	273
  3358  0110                     _ADUTHL	set	272
  3359  010F                     _ADLTHH	set	271
  3360  010E                     _ADLTHL	set	270
  3361  010D                     _ADRPT	set	269
  3362  0190                     _SSP1CON1bits	set	400
  3363  0191                     _SSP1CON2bits	set	401
  3364  018F                     _SSP1STATbits	set	399
  3365  018C                     _SSP1BUF	set	396
  3366  018D                     _SSP1ADD	set	397
  3367  018E                     _SSP1MSK	set	398
  3368  0192                     _SSP1CON3	set	402
  3369  0191                     _SSP1CON2	set	401
  3370  0190                     _SSP1CON1	set	400
  3371  018F                     _SSP1STAT	set	399
  3372  0719                     _PIE3bits	set	1817
  3373  070F                     _PIR3bits	set	1807
  3374  0892                     _OSCTUNE	set	2194
  3375  0893                     _OSCFRQ	set	2195
  3376  0891                     _OSCEN	set	2193
  3377  088F                     _OSCCON3	set	2191
  3378  088D                     _OSCCON1	set	2189
  3379  0EC5                     _SSP1CLKPPSbits	set	3781
  3380  0EC6                     _SSP1DATPPSbits	set	3782
  3381  0E8F                     _PPSLOCKbits	set	3727
  3382  0E8F                     _PPSLOCK	set	3727
  3383  0F24                     _RC4PPS	set	3876
  3384  0F23                     _RC3PPS	set	3875
  3385  0F50                     _ODCONC	set	3920
  3386  0F45                     _ODCONB	set	3909
  3387  0F3A                     _ODCONA	set	3898
  3388  0F4F                     _WPUC	set	3919
  3389  0F39                     _WPUA	set	3897
  3390  0F44                     _WPUB	set	3908
  3391  0F65                     _WPUE	set	3941
  3392  0F38                     _ANSELA	set	3896
  3393  0F43                     _ANSELB	set	3907
  3394  0F4E                     _ANSELC	set	3918
  3395                           
  3396                           ; #config settings
  3397  0000                     
  3398                           	psect	cinit
  3399  0018                     start_initialization:	
  3400  0018                     __initialization:		;BIGRAM
  3401                           
  3402                           ; Initialize objects allocated to BIGRAM
  3403  0018  3040               	movlw	low __pidataBIGRAM
  3404  0019  0084               	movwf	4
  3405  001A  3083               	movlw	(high __pidataBIGRAM)| (0+128)
  3406  001B  0085               	movwf	5
  3407  001C  3070               	movlw	low (0+9072)
  3408  001D  0086               	movwf	6
  3409  001E  3023               	movlw	high (0+9072)
  3410  001F  0087               	movwf	7
  3411  0020  3000               	movlw	0
  3412  0021  00FF               	movwf	btemp+1
  3413  0022  3080               	movlw	128
  3414  0023  3185  2588  3180   	fcall	init_ram
  3415                           
  3416                           ; Initialize objects allocated to COMMON
  3417  0026  3185  25AD         	fcall	__pidataCOMMON	;fetch initializer
  3418  0028  00F8               	movwf	__pdataCOMMON& (0+127)
  3419                           
  3420                           ; Clear objects allocated to COMMON
  3421  0029  01F6               	clrf	__pbssCOMMON& (0+127)
  3422  002A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3423                           
  3424                           ; Clear objects allocated to BANK0
  3425  002B  01DD               	clrf	__pbssBANK0& (0+127)
  3426  002C  01DE               	clrf	(__pbssBANK0+1)& (0+127)
  3427  002D  01DF               	clrf	(__pbssBANK0+2)& (0+127)
  3428  002E  01E0               	clrf	(__pbssBANK0+3)& (0+127)
  3429  002F                     end_of_initialization:	
  3430                           ;End of C runtime variable initialization code
  3431                           
  3432  002F                     __end_of__initialization:	
  3433  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3434  0030  0020               	movlb	0
  3435  0031  3182  2A59         	ljmp	_main	;jump to C main() function
  3436                           
  3437                           	psect	bssCOMMON
  3438  0076                     __pbssCOMMON:	
  3439  0076                     I2C1_StatusCallback@slaveWriteType:	
  3440  0076                     	ds	1
  3441  0077                     I2C1_StatusCallback@eepromAddress:	
  3442  0077                     	ds	1
  3443                           
  3444                           	psect	dataCOMMON
  3445  0078                     __pdataCOMMON:	
  3446  0078                     _I2C1_slaveWriteData:	
  3447  0078                     	ds	1
  3448                           
  3449                           	psect	bssBANK0
  3450  005D                     __pbssBANK0:	
  3451  005D                     _iLEDBytesChangedCount:	
  3452  005D                     	ds	2
  3453  005F                     _LSByteLED:	
  3454  005F                     	ds	1
  3455  0060                     _MSByteLED:	
  3456  0060                     	ds	1
  3457                           
  3458                           	psect	inittext
  3459  0588                     init_ram:	
  3460  0588  00FE               	movwf	126
  3461  0589                     initloop:	
  3462  0589  0012               	moviw fsr0++
  3463  058A  001E               	movwi fsr1++
  3464  058B  3001               	movlw	1
  3465  058C  02FE               	subwf	126,f
  3466  058D  3000               	movlw	0
  3467  058E  3BFF               	subwfb	127,f
  3468  058F  087F               	movf	127,w
  3469  0590  047E               	iorwf	126,w
  3470  0591  1903               	btfsc	3,2
  3471  0592  3400               	retlw	0
  3472  0593  2D89               	goto	initloop
  3473                           
  3474                           	psect	cstackCOMMON
  3475  0070                     __pcstackCOMMON:	
  3476  0070                     ?_OSCILLATOR_Initialize:	
  3477  0070                     ?_I2C1_Initialize:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ?_ADCC_Initialize:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?_I2C1_StatusCallback:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ??_I2C1_StatusCallback:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?_PIN_MANAGER_Initialize:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ?_SYSTEM_Initialize:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?_I2C1_ISR:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ?_INTERRUPT_InterruptManager:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_main:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504                           
  3505                           ; 1 bytes @ 0x0
  3506  0070                     	ds	1
  3507  0071                     I2C1_StatusCallback@i2c_bus_state:	
  3508                           
  3509                           ; 1 bytes @ 0x1
  3510  0071                     	ds	1
  3511  0072                     ??_I2C1_ISR:	
  3512                           
  3513                           ; 1 bytes @ 0x2
  3514  0072                     	ds	1
  3515  0073                     I2C1_ISR@i2c_data:	
  3516                           
  3517                           ; 1 bytes @ 0x3
  3518  0073                     	ds	1
  3519  0074                     ??_INTERRUPT_InterruptManager:	
  3520                           
  3521                           ; 1 bytes @ 0x4
  3522  0074                     	ds	1
  3523  0075                     ??_OSCILLATOR_Initialize:	
  3524  0075                     ??_I2C1_Initialize:	
  3525                           ; 1 bytes @ 0x5
  3526                           
  3527  0075                     ??_ADCC_Initialize:	
  3528                           ; 1 bytes @ 0x5
  3529                           
  3530  0075                     ?_UpdateLEDsFromValue:	
  3531                           ; 1 bytes @ 0x5
  3532                           
  3533  0075                     ?_UpdateLEDs:	
  3534                           ; 1 bytes @ 0x5
  3535                           
  3536  0075                     ??_PIN_MANAGER_Initialize:	
  3537                           ; 1 bytes @ 0x5
  3538                           
  3539  0075                     ??_ADCC_GetSingleConversion:	
  3540                           ; 1 bytes @ 0x5
  3541                           
  3542  0075                     ??_delay:	
  3543                           ; 1 bytes @ 0x5
  3544                           
  3545  0075                     ??___wmul:	
  3546                           ; 1 bytes @ 0x5
  3547                           
  3548  0075                     PIN_MANAGER_Initialize@state:	
  3549                           ; 1 bytes @ 0x5
  3550                           
  3551  0075                     ADCC_GetSingleConversion@channel:	
  3552                           ; 1 bytes @ 0x5
  3553                           
  3554  0075                     UpdateLEDsFromValue@inValue:	
  3555                           ; 1 bytes @ 0x5
  3556                           
  3557  0075                     UpdateLEDs@inLSByteLED:	
  3558                           ; 1 bytes @ 0x5
  3559                           
  3560                           
  3561                           ; 1 bytes @ 0x5
  3562  0075                     	ds	1
  3563  0076                     ??_SYSTEM_Initialize:	
  3564                           
  3565                           	psect	cstackBANK0
  3566  0020                     __pcstackBANK0:	
  3567                           ; 1 bytes @ 0x6
  3568                           
  3569  0020                     ??_UpdateLEDsFromValue:	
  3570  0020                     ??_UpdateLEDs:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0020                     ?_ADCC_GetSingleConversion:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0020                     ?___wmul:	
  3577                           ; 2 bytes @ 0x0
  3578                           
  3579  0020                     ___wmul@multiplier:	
  3580                           ; 2 bytes @ 0x0
  3581                           
  3582                           
  3583                           ; 2 bytes @ 0x0
  3584  0020                     	ds	1
  3585  0021                     UpdateLEDsFromValue@inFaderNum:	
  3586  0021                     UpdateLEDs@inMSByteLED:	
  3587                           ; 1 bytes @ 0x1
  3588                           
  3589                           
  3590                           ; 1 bytes @ 0x1
  3591  0021                     	ds	1
  3592  0022                     UpdateLEDsFromValue@wkOnFlag:	
  3593  0022                     UpdateLEDs@wkByte:	
  3594                           ; 1 bytes @ 0x2
  3595                           
  3596  0022                     ___wmul@multiplicand:	
  3597                           ; 1 bytes @ 0x2
  3598                           
  3599                           
  3600                           ; 2 bytes @ 0x2
  3601  0022                     	ds	1
  3602  0023                     UpdateLEDsFromValue@wkBrightFlag:	
  3603                           
  3604                           ; 1 bytes @ 0x3
  3605  0023                     	ds	1
  3606  0024                     ___wmul@product:	
  3607                           
  3608                           ; 2 bytes @ 0x4
  3609  0024                     	ds	2
  3610  0026                     ?_delay:	
  3611  0026                     delay@delaytime:	
  3612                           ; 1 bytes @ 0x6
  3613                           
  3614                           
  3615                           ; 2 bytes @ 0x6
  3616  0026                     	ds	2
  3617  0028                     delay@adjustedDelaytime:	
  3618                           
  3619                           ; 4 bytes @ 0x8
  3620  0028                     	ds	4
  3621  002C                     delay@counter:	
  3622                           
  3623                           ; 4 bytes @ 0xC
  3624  002C                     	ds	4
  3625  0030                     ?_blinkyLoop:	
  3626  0030                     blinkyLoop@maxLoops:	
  3627                           ; 1 bytes @ 0x10
  3628                           
  3629                           
  3630                           ; 2 bytes @ 0x10
  3631  0030                     	ds	2
  3632  0032                     ??_blinkyLoop:	
  3633                           
  3634                           ; 1 bytes @ 0x12
  3635  0032                     	ds	1
  3636  0033                     blinkyLoop@delayTime:	
  3637                           
  3638                           ; 2 bytes @ 0x13
  3639  0033                     	ds	2
  3640  0035                     blinkyLoop@loopCount:	
  3641                           
  3642                           ; 2 bytes @ 0x15
  3643  0035                     	ds	2
  3644  0037                     ??_main:	
  3645                           
  3646                           ; 1 bytes @ 0x17
  3647  0037                     	ds	3
  3648  003A                     main@prevbyteFaderValue:	
  3649                           
  3650                           ; 8 bytes @ 0x1A
  3651  003A                     	ds	8
  3652  0042                     main@rawFaderValue:	
  3653                           
  3654                           ; 16 bytes @ 0x22
  3655  0042                     	ds	16
  3656  0052                     main@I2C_ADDRESS_FADELED0:	
  3657                           
  3658                           ; 1 bytes @ 0x32
  3659  0052                     	ds	1
  3660  0053                     main@wkFaderValue:	
  3661                           
  3662                           ; 1 bytes @ 0x33
  3663  0053                     	ds	1
  3664  0054                     main@byteFaderValue:	
  3665                           
  3666                           ; 8 bytes @ 0x34
  3667  0054                     	ds	8
  3668  005C                     main@iFaderNum:	
  3669                           
  3670                           ; 1 bytes @ 0x3C
  3671  005C                     	ds	1
  3672                           
  3673                           	psect	maintext
  3674  0259                     __pmaintext:	
  3675 ;;
  3676 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3677 ;;
  3678 ;; *************** function _main *****************
  3679 ;; Defined at:
  3680 ;;		line 129 in file "main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  rawFaderValu   16   34[BANK0 ] unsigned int [8]
  3685 ;;  byteFaderVal    8   52[BANK0 ] unsigned char [8]
  3686 ;;  prevbyteFade    8   26[BANK0 ] unsigned char [8]
  3687 ;;  wkInt           2    0        int 
  3688 ;;  iFaderNum       1   60[BANK0 ] unsigned char 
  3689 ;;  wkFaderValue    1   51[BANK0 ] unsigned char 
  3690 ;;  I2C_ADDRESS_    1   50[BANK0 ] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : B1F/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;Total ram usage:       38 bytes
  3705 ;; Hardware stack levels required when called:    6
  3706 ;; This function calls:
  3707 ;;		_ADCC_GetSingleConversion
  3708 ;;		_SYSTEM_Initialize
  3709 ;;		_UpdateLEDs
  3710 ;;		_UpdateLEDsFromValue
  3711 ;;		_blinkyLoop
  3712 ;; This function is called by:
  3713 ;;		Startup code after reset
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           
  3718                           ;psect for function _main
  3719  0259                     _main:	
  3720                           
  3721                           ;main.c: 131: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  3722                           
  3723                           ;incstack = 0
  3724                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3725  0259  3010               	movlw	16
  3726  025A  0020               	movlb	0	; select bank0
  3727  025B  00B7               	movwf	??_main
  3728  025C  0837               	movf	??_main,w
  3729  025D  00D2               	movwf	main@I2C_ADDRESS_FADELED0
  3730                           
  3731                           ;main.c: 132: adc_result_t rawFaderValue[8];
  3732                           ;main.c: 133: int wkInt;
  3733                           ;main.c: 134: uint8_t wkFaderValue=0;
  3734  025E  01D3               	clrf	main@wkFaderValue
  3735                           
  3736                           ;main.c: 135: uint8_t byteFaderValue[8];
  3737                           ;main.c: 136: uint8_t prevbyteFaderValue[8];
  3738                           ;main.c: 137: uint8_t iFaderNum=0;
  3739  025F  01DC               	clrf	main@iFaderNum
  3740                           
  3741                           ;main.c: 139: iLEDBytesChangedCount=0;
  3742  0260  01DD               	clrf	_iLEDBytesChangedCount	;volatile
  3743  0261  01DE               	clrf	_iLEDBytesChangedCount+1	;volatile
  3744                           
  3745                           ;main.c: 141: SYSTEM_Initialize();
  3746  0262  3185  2594  3182   	fcall	_SYSTEM_Initialize
  3747                           
  3748                           ;main.c: 143: blinkyLoop(5);
  3749  0265  3005               	movlw	5
  3750  0266  0020               	movlb	0	; select bank0
  3751  0267  00B0               	movwf	blinkyLoop@maxLoops
  3752  0268  3000               	movlw	0
  3753  0269  00B1               	movwf	blinkyLoop@maxLoops+1
  3754  026A  3183  23C0  3182   	fcall	_blinkyLoop
  3755                           
  3756                           ;main.c: 149: (INTCONbits.GIE = 1);
  3757  026D  178B               	bsf	11,7	;volatile
  3758                           
  3759                           ;main.c: 152: (INTCONbits.PEIE = 1);
  3760  026E  170B               	bsf	11,6	;volatile
  3761                           
  3762                           ;main.c: 163: for (iFaderNum=0;iFaderNum<cMaxFaderCnt;iFaderNum++){
  3763  026F  0020               	movlb	0	; select bank0
  3764  0270  01DC               	clrf	main@iFaderNum
  3765  0271  30A9               	movlw	low (_cMaxFaderCnt| (0+32768))
  3766  0272  0084               	movwf	4
  3767  0273  3085               	movlw	high (_cMaxFaderCnt| (0+32768))
  3768  0274  0085               	movwf	5
  3769  0275  3F00               	moviw [0]fsr0
  3770  0276  00B7               	movwf	??_main
  3771  0277  3F01               	moviw [1]fsr0
  3772  0278  00B8               	movwf	??_main+1
  3773  0279  0838               	movf	??_main+1,w
  3774  027A  3A80               	xorlw	128
  3775  027B  3C80               	sublw	128
  3776  027C  1D03               	skipz
  3777  027D  2A80               	goto	u1615
  3778  027E  0837               	movf	??_main,w
  3779  027F  025C               	subwf	main@iFaderNum,w
  3780  0280                     u1615:	
  3781  0280  1803               	btfsc	3,0
  3782  0281  2AB9               	goto	l2352
  3783  0282                     l2344:	
  3784                           
  3785                           ;main.c: 164: rawFaderValue[iFaderNum]=ADCC_GetSingleConversion(iFaderNum);
  3786  0282  0020               	movlb	0	; select bank0
  3787  0283  085C               	movf	main@iFaderNum,w
  3788  0284  3185  2556  3182   	fcall	_ADCC_GetSingleConversion
  3789  0287  0020               	movlb	0	; select bank0
  3790  0288  355C               	lslf	main@iFaderNum,w
  3791  0289  3E42               	addlw	(low (main@rawFaderValue| 0))& (0+255)
  3792  028A  0086               	movwf	6
  3793  028B  0187               	clrf	7
  3794  028C  0820               	movf	?_ADCC_GetSingleConversion,w
  3795  028D  3FC0               	movwi [0]fsr1
  3796  028E  0821               	movf	?_ADCC_GetSingleConversion+1,w
  3797  028F  3FC1               	movwi [1]fsr1
  3798                           
  3799                           ;main.c: 166: byteFaderValue[iFaderNum]=(rawFaderValue[iFaderNum]>>2)&0xFF;
  3800  0290  355C               	lslf	main@iFaderNum,w
  3801  0291  3E42               	addlw	(low (main@rawFaderValue| 0))& (0+255)
  3802  0292  0086               	movwf	6
  3803  0293  0187               	clrf	7
  3804  0294  3F40               	moviw [0]fsr1
  3805  0295  00B7               	movwf	??_main
  3806  0296  3F41               	moviw [1]fsr1
  3807  0297  00B8               	movwf	??_main+1
  3808  0298  36B8               	lsrf	??_main+1,f
  3809  0299  0CB7               	rrf	??_main,f
  3810  029A  36B8               	lsrf	??_main+1,f
  3811  029B  0CB7               	rrf	??_main,f
  3812  029C  0837               	movf	??_main,w
  3813  029D  00B9               	movwf	??_main+2
  3814  029E  085C               	movf	main@iFaderNum,w
  3815  029F  3E54               	addlw	(low (main@byteFaderValue| 0))& (0+255)
  3816  02A0  0086               	movwf	6
  3817  02A1  0187               	clrf	7
  3818  02A2  0839               	movf	??_main+2,w
  3819  02A3  0081               	movwf	1
  3820  02A4  3001               	movlw	1
  3821  02A5  00B7               	movwf	??_main
  3822  02A6  0837               	movf	??_main,w
  3823  02A7  07DC               	addwf	main@iFaderNum,f
  3824  02A8  30A9               	movlw	low (_cMaxFaderCnt| (0+32768))
  3825  02A9  0084               	movwf	4
  3826  02AA  3085               	movlw	high (_cMaxFaderCnt| (0+32768))
  3827  02AB  0085               	movwf	5
  3828  02AC  3F00               	moviw [0]fsr0
  3829  02AD  00B7               	movwf	??_main
  3830  02AE  3F01               	moviw [1]fsr0
  3831  02AF  00B8               	movwf	??_main+1
  3832  02B0  0838               	movf	??_main+1,w
  3833  02B1  3A80               	xorlw	128
  3834  02B2  3C80               	sublw	128
  3835  02B3  1D03               	skipz
  3836  02B4  2AB7               	goto	u1625
  3837  02B5  0837               	movf	??_main,w
  3838  02B6  025C               	subwf	main@iFaderNum,w
  3839  02B7                     u1625:	
  3840  02B7  1C03               	skipc
  3841  02B8  2A82               	goto	l2344
  3842  02B9                     l2352:	
  3843                           ;main.c: 167: }
  3844                           ;main.c: 171: while (1) {
  3845                           
  3846                           
  3847                           ;main.c: 174: for (iFaderNum=0;iFaderNum<cMaxFaderCnt;iFaderNum++){
  3848  02B9  0020               	movlb	0	; select bank0
  3849  02BA  01DC               	clrf	main@iFaderNum
  3850  02BB  30A9               	movlw	low (_cMaxFaderCnt| (0+32768))
  3851  02BC  0084               	movwf	4
  3852  02BD  3085               	movlw	high (_cMaxFaderCnt| (0+32768))
  3853  02BE  0085               	movwf	5
  3854  02BF  3F00               	moviw [0]fsr0
  3855  02C0  00B7               	movwf	??_main
  3856  02C1  3F01               	moviw [1]fsr0
  3857  02C2  00B8               	movwf	??_main+1
  3858  02C3  0838               	movf	??_main+1,w
  3859  02C4  3A80               	xorlw	128
  3860  02C5  3C80               	sublw	128
  3861  02C6  1D03               	skipz
  3862  02C7  2ACA               	goto	u1635
  3863  02C8  0837               	movf	??_main,w
  3864  02C9  025C               	subwf	main@iFaderNum,w
  3865  02CA                     u1635:	
  3866  02CA  1803               	btfsc	3,0
  3867  02CB  2B28               	goto	l2372
  3868  02CC                     l2358:	
  3869                           
  3870                           ;main.c: 176: rawFaderValue[iFaderNum]=ADCC_GetSingleConversion(iFaderNum);
  3871  02CC  0020               	movlb	0	; select bank0
  3872  02CD  085C               	movf	main@iFaderNum,w
  3873  02CE  3185  2556  3182   	fcall	_ADCC_GetSingleConversion
  3874  02D1  0020               	movlb	0	; select bank0
  3875  02D2  355C               	lslf	main@iFaderNum,w
  3876  02D3  3E42               	addlw	(low (main@rawFaderValue| 0))& (0+255)
  3877  02D4  0086               	movwf	6
  3878  02D5  0187               	clrf	7
  3879  02D6  0820               	movf	?_ADCC_GetSingleConversion,w
  3880  02D7  3FC0               	movwi [0]fsr1
  3881  02D8  0821               	movf	?_ADCC_GetSingleConversion+1,w
  3882  02D9  3FC1               	movwi [1]fsr1
  3883                           
  3884                           ;main.c: 177: prevbyteFaderValue[iFaderNum]=byteFaderValue[iFaderNum];
  3885  02DA  085C               	movf	main@iFaderNum,w
  3886  02DB  3E54               	addlw	(low (main@byteFaderValue| 0))& (0+255)
  3887  02DC  0086               	movwf	6
  3888  02DD  0187               	clrf	7
  3889  02DE  0801               	movf	1,w
  3890  02DF  00B7               	movwf	??_main
  3891  02E0  085C               	movf	main@iFaderNum,w
  3892  02E1  3E3A               	addlw	(low (main@prevbyteFaderValue| 0))& (0+255)
  3893  02E2  0086               	movwf	6
  3894  02E3  0187               	clrf	7
  3895  02E4  0837               	movf	??_main,w
  3896  02E5  0081               	movwf	1
  3897                           
  3898                           ;main.c: 178: byteFaderValue[iFaderNum]=(rawFaderValue[iFaderNum])>>2;
  3899  02E6  355C               	lslf	main@iFaderNum,w
  3900  02E7  3E42               	addlw	(low (main@rawFaderValue| 0))& (0+255)
  3901  02E8  0086               	movwf	6
  3902  02E9  0187               	clrf	7
  3903  02EA  3F40               	moviw [0]fsr1
  3904  02EB  00B7               	movwf	??_main
  3905  02EC  3F41               	moviw [1]fsr1
  3906  02ED  00B8               	movwf	??_main+1
  3907  02EE  36B8               	lsrf	??_main+1,f
  3908  02EF  0CB7               	rrf	??_main,f
  3909  02F0  36B8               	lsrf	??_main+1,f
  3910  02F1  0CB7               	rrf	??_main,f
  3911  02F2  0837               	movf	??_main,w
  3912  02F3  00B9               	movwf	??_main+2
  3913  02F4  085C               	movf	main@iFaderNum,w
  3914  02F5  3E54               	addlw	(low (main@byteFaderValue| 0))& (0+255)
  3915  02F6  0086               	movwf	6
  3916  02F7  0187               	clrf	7
  3917  02F8  0839               	movf	??_main+2,w
  3918  02F9  0081               	movwf	1
  3919                           
  3920                           ;main.c: 179: if(prevbyteFaderValue[iFaderNum]!=byteFaderValue[iFaderNum]) {
  3921  02FA  085C               	movf	main@iFaderNum,w
  3922  02FB  3E54               	addlw	(low (main@byteFaderValue| 0))& (0+255)
  3923  02FC  0086               	movwf	6
  3924  02FD  0187               	clrf	7
  3925  02FE  085C               	movf	main@iFaderNum,w
  3926  02FF  3E3A               	addlw	(low (main@prevbyteFaderValue| 0))& (0+255)
  3927  0300  0084               	movwf	4
  3928  0301  0185               	clrf	5
  3929  0302  0800               	movf	0,w
  3930  0303  0601               	xorwf	1,w
  3931  0304  1903               	skipnz
  3932  0305  2B12               	goto	l2368
  3933                           
  3934                           ;main.c: 180: UpdateLEDsFromValue(iFaderNum,byteFaderValue[iFaderNum]);
  3935  0306  085C               	movf	main@iFaderNum,w
  3936  0307  3E54               	addlw	(low (main@byteFaderValue| 0))& (0+255)
  3937  0308  0086               	movwf	6
  3938  0309  0187               	clrf	7
  3939  030A  0801               	movf	1,w
  3940  030B  00B7               	movwf	??_main
  3941  030C  0837               	movf	??_main,w
  3942  030D  00F5               	movwf	UpdateLEDsFromValue@inValue
  3943  030E  085C               	movf	main@iFaderNum,w
  3944  030F  3181  215D  3182   	fcall	_UpdateLEDsFromValue
  3945  0312                     l2368:	
  3946  0312  3001               	movlw	1
  3947  0313  0020               	movlb	0	; select bank0
  3948  0314  00B7               	movwf	??_main
  3949  0315  0837               	movf	??_main,w
  3950  0316  07DC               	addwf	main@iFaderNum,f
  3951  0317  30A9               	movlw	low (_cMaxFaderCnt| (0+32768))
  3952  0318  0084               	movwf	4
  3953  0319  3085               	movlw	high (_cMaxFaderCnt| (0+32768))
  3954  031A  0085               	movwf	5
  3955  031B  3F00               	moviw [0]fsr0
  3956  031C  00B7               	movwf	??_main
  3957  031D  3F01               	moviw [1]fsr0
  3958  031E  00B8               	movwf	??_main+1
  3959  031F  0838               	movf	??_main+1,w
  3960  0320  3A80               	xorlw	128
  3961  0321  3C80               	sublw	128
  3962  0322  1D03               	skipz
  3963  0323  2B26               	goto	u1655
  3964  0324  0837               	movf	??_main,w
  3965  0325  025C               	subwf	main@iFaderNum,w
  3966  0326                     u1655:	
  3967  0326  1C03               	skipc
  3968  0327  2ACC               	goto	l2358
  3969  0328                     l2372:	
  3970                           
  3971                           ;main.c: 182: }
  3972                           ;main.c: 183: }
  3973                           ;main.c: 190: if (1 < iLEDBytesChangedCount)
  3974  0328  0020               	movlb	0	; select bank0
  3975  0329  085E               	movf	_iLEDBytesChangedCount+1,w	;volatile
  3976  032A  3A80               	xorlw	128
  3977  032B  00B7               	movwf	??_main
  3978  032C  3080               	movlw	128
  3979  032D  0237               	subwf	??_main,w
  3980  032E  1D03               	skipz
  3981  032F  2B32               	goto	u1665
  3982  0330  3002               	movlw	2
  3983  0331  025D               	subwf	_iLEDBytesChangedCount,w	;volatile
  3984  0332                     u1665:	
  3985  0332  1C03               	skipc
  3986  0333  2AB9               	goto	l2352
  3987                           
  3988                           ;main.c: 191: {
  3989                           ;main.c: 192: iLEDBytesChangedCount=0;
  3990  0334  0020               	movlb	0	; select bank0
  3991  0335  01DD               	clrf	_iLEDBytesChangedCount	;volatile
  3992  0336  01DE               	clrf	_iLEDBytesChangedCount+1	;volatile
  3993                           
  3994                           ;main.c: 193: UpdateLEDs(MSByteLED,LSByteLED);
  3995  0337  085F               	movf	_LSByteLED,w	;volatile
  3996  0338  00B7               	movwf	??_main
  3997  0339  0837               	movf	??_main,w
  3998  033A  00F5               	movwf	UpdateLEDs@inLSByteLED
  3999  033B  0860               	movf	_MSByteLED,w	;volatile
  4000  033C  3180  2033  3182   	fcall	_UpdateLEDs
  4001  033F  2AB9               	goto	l2352
  4002  0340                     __end_of_main:	
  4003                           
  4004                           	psect	text1
  4005  03C0                     __ptext1:	
  4006 ;; *************** function _blinkyLoop *****************
  4007 ;; Defined at:
  4008 ;;		line 91 in file "main.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  maxLoops        2   16[BANK0 ] int 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  loopCount       2   21[BANK0 ] int 
  4013 ;;  delayTime       2   19[BANK0 ] int 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        7 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    5
  4030 ;; This function calls:
  4031 ;;		___wmul
  4032 ;;		_delay
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _blinkyLoop
  4040  03C0                     _blinkyLoop:	
  4041                           
  4042                           ;main.c: 92: int loopCount=maxLoops;
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4046  03C0  0020               	movlb	0	; select bank0
  4047  03C1  0831               	movf	blinkyLoop@maxLoops+1,w
  4048  03C2  00B6               	movwf	blinkyLoop@loopCount+1
  4049  03C3  0830               	movf	blinkyLoop@maxLoops,w
  4050  03C4  00B5               	movwf	blinkyLoop@loopCount
  4051                           
  4052                           ;main.c: 93: int delayTime;
  4053                           ;main.c: 95: ODCONB &= 0xE0;
  4054  03C5  30E0               	movlw	224
  4055  03C6  00B2               	movwf	??_blinkyLoop
  4056  03C7  0832               	movf	??_blinkyLoop,w
  4057  03C8  003E               	movlb	30	; select bank30
  4058  03C9  05C5               	andwf	69,f	;volatile
  4059                           
  4060                           ;main.c: 96: ODCONC &= 0x1F;
  4061  03CA  301F               	movlw	31
  4062  03CB  0020               	movlb	0	; select bank0
  4063  03CC  00B2               	movwf	??_blinkyLoop
  4064  03CD  0832               	movf	??_blinkyLoop,w
  4065  03CE  003E               	movlb	30	; select bank30
  4066  03CF  05D0               	andwf	80,f	;volatile
  4067  03D0                     l2074:	
  4068                           ;main.c: 97: while(loopCount>0){
  4069                           
  4070  03D0  0020               	movlb	0	; select bank0
  4071  03D1  0836               	movf	blinkyLoop@loopCount+1,w
  4072  03D2  3A80               	xorlw	128
  4073  03D3  00B2               	movwf	??_blinkyLoop
  4074  03D4  3080               	movlw	128
  4075  03D5  0232               	subwf	??_blinkyLoop,w
  4076  03D6  1D03               	skipz
  4077  03D7  2BDA               	goto	u1265
  4078  03D8  3001               	movlw	1
  4079  03D9  0235               	subwf	blinkyLoop@loopCount,w
  4080  03DA                     u1265:	
  4081  03DA  1C03               	btfss	3,0
  4082  03DB  2C12               	goto	l2076
  4083                           
  4084                           ;main.c: 98: delayTime=loopCount*400;
  4085  03DC  0020               	movlb	0	; select bank0
  4086  03DD  0836               	movf	blinkyLoop@loopCount+1,w
  4087  03DE  00A1               	movwf	___wmul@multiplier+1
  4088  03DF  0835               	movf	blinkyLoop@loopCount,w
  4089  03E0  00A0               	movwf	___wmul@multiplier
  4090  03E1  3090               	movlw	144
  4091  03E2  00A2               	movwf	___wmul@multiplicand
  4092  03E3  3001               	movlw	1
  4093  03E4  00A3               	movwf	___wmul@multiplicand+1
  4094  03E5  3185  251F  3183   	fcall	___wmul
  4095  03E8  0020               	movlb	0	; select bank0
  4096  03E9  0821               	movf	?___wmul+1,w
  4097  03EA  00B4               	movwf	blinkyLoop@delayTime+1
  4098  03EB  0820               	movf	?___wmul,w
  4099  03EC  00B3               	movwf	blinkyLoop@delayTime
  4100                           
  4101                           ;main.c: 101: LATB |= 0b00011111;
  4102  03ED  301F               	movlw	31
  4103  03EE  00B2               	movwf	??_blinkyLoop
  4104  03EF  0832               	movf	??_blinkyLoop,w
  4105  03F0  0497               	iorwf	23,f	;volatile
  4106                           
  4107                           ;main.c: 102: LATC |= 0b11100000;
  4108  03F1  30E0               	movlw	224
  4109  03F2  00B2               	movwf	??_blinkyLoop
  4110  03F3  0832               	movf	??_blinkyLoop,w
  4111  03F4  0498               	iorwf	24,f	;volatile
  4112                           
  4113                           ;main.c: 104: delay(delayTime);
  4114  03F5  0834               	movf	blinkyLoop@delayTime+1,w
  4115  03F6  00A7               	movwf	delay@delaytime+1
  4116  03F7  0833               	movf	blinkyLoop@delayTime,w
  4117  03F8  00A6               	movwf	delay@delaytime
  4118  03F9  3184  2422  3183   	fcall	_delay
  4119                           
  4120                           ;main.c: 106: LATB &= 0b11100000;
  4121  03FC  30E0               	movlw	224
  4122  03FD  0020               	movlb	0	; select bank0
  4123  03FE  00B2               	movwf	??_blinkyLoop
  4124  03FF  0832               	movf	??_blinkyLoop,w
  4125  0400  0597               	andwf	23,f	;volatile
  4126                           
  4127                           ;main.c: 107: LATC &= 0b00011111;
  4128  0401  301F               	movlw	31
  4129  0402  00B2               	movwf	??_blinkyLoop
  4130  0403  0832               	movf	??_blinkyLoop,w
  4131  0404  0598               	andwf	24,f	;volatile
  4132                           
  4133                           ;main.c: 109: delay(delayTime);
  4134  0405  0834               	movf	blinkyLoop@delayTime+1,w
  4135  0406  00A7               	movwf	delay@delaytime+1
  4136  0407  0833               	movf	blinkyLoop@delayTime,w
  4137  0408  00A6               	movwf	delay@delaytime
  4138  0409  3184  2422  3183   	fcall	_delay
  4139                           
  4140                           ;main.c: 111: loopCount--;
  4141  040C  30FF               	movlw	255
  4142  040D  0020               	movlb	0	; select bank0
  4143  040E  07B5               	addwf	blinkyLoop@loopCount,f
  4144  040F  30FF               	movlw	255
  4145  0410  3DB6               	addwfc	blinkyLoop@loopCount+1,f
  4146  0411  2BD0               	goto	l2074
  4147  0412                     l2076:	
  4148                           
  4149                           ;main.c: 112: }
  4150                           ;main.c: 113: LATB |= 0b00011111;
  4151  0412  301F               	movlw	31
  4152  0413  0020               	movlb	0	; select bank0
  4153  0414  00B2               	movwf	??_blinkyLoop
  4154  0415  0832               	movf	??_blinkyLoop,w
  4155  0416  0497               	iorwf	23,f	;volatile
  4156                           
  4157                           ;main.c: 114: LATC |= 0b11100000;
  4158  0417  30E0               	movlw	224
  4159  0418  00B2               	movwf	??_blinkyLoop
  4160  0419  0832               	movf	??_blinkyLoop,w
  4161  041A  0498               	iorwf	24,f	;volatile
  4162                           
  4163                           ;main.c: 115: delay(100);
  4164  041B  3064               	movlw	100
  4165  041C  00A6               	movwf	delay@delaytime
  4166  041D  3000               	movlw	0
  4167  041E  00A7               	movwf	delay@delaytime+1
  4168  041F  3184  2422         	fcall	_delay
  4169  0421  0008               	return
  4170  0422                     __end_of_blinkyLoop:	
  4171                           ;main.c: 116: return;
  4172                           
  4173                           
  4174                           	psect	text2
  4175  0422                     __ptext2:	
  4176 ;; *************** function _delay *****************
  4177 ;; Defined at:
  4178 ;;		line 83 in file "main.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  delaytime       2    6[BANK0 ] int 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  counter         4   12[BANK0 ] long 
  4183 ;;  adjustedDela    4    8[BANK0 ] long 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;Total ram usage:       11 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    4
  4200 ;; This function calls:
  4201 ;;		___wmul
  4202 ;; This function is called by:
  4203 ;;		_blinkyLoop
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _delay
  4209  0422                     _delay:	
  4210                           
  4211                           ;main.c: 84: long counter = 0;
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4215  0422  3000               	movlw	0
  4216  0423  0020               	movlb	0	; select bank0
  4217  0424  00AF               	movwf	delay@counter+3
  4218  0425  3000               	movlw	0
  4219  0426  00AE               	movwf	delay@counter+2
  4220  0427  3000               	movlw	0
  4221  0428  00AD               	movwf	delay@counter+1
  4222  0429  3000               	movlw	0
  4223  042A  00AC               	movwf	delay@counter
  4224                           
  4225                           ;main.c: 85: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  4226  042B  0827               	movf	delay@delaytime+1,w
  4227  042C  00A1               	movwf	___wmul@multiplier+1
  4228  042D  0826               	movf	delay@delaytime,w
  4229  042E  00A0               	movwf	___wmul@multiplier
  4230  042F  30AB               	movlw	low (_cMstrClkAdjust| (0+32768))
  4231  0430  0084               	movwf	4
  4232  0431  3085               	movlw	high (_cMstrClkAdjust| (0+32768))
  4233  0432  0085               	movwf	5
  4234  0433  3F00               	moviw [0]fsr0
  4235  0434  00A2               	movwf	___wmul@multiplicand
  4236  0435  3F01               	moviw [1]fsr0
  4237  0436  00A3               	movwf	___wmul@multiplicand+1
  4238  0437  3185  251F  3184   	fcall	___wmul
  4239  043A  0020               	movlb	0	; select bank0
  4240  043B  0820               	movf	?___wmul,w
  4241  043C  00A8               	movwf	delay@adjustedDelaytime
  4242  043D  0821               	movf	?___wmul+1,w
  4243  043E  00A9               	movwf	delay@adjustedDelaytime+1
  4244  043F  0D89               	rlf	9,f
  4245  0440  3B89               	subwfb	9,f
  4246  0441  0989               	comf	9,f
  4247  0442  00AA               	movwf	delay@adjustedDelaytime+2
  4248  0443  00AB               	movwf	delay@adjustedDelaytime+3
  4249                           
  4250                           ;main.c: 86: if (0<delaytime)
  4251  0444  0827               	movf	delay@delaytime+1,w
  4252  0445  3A80               	xorlw	128
  4253  0446  00F5               	movwf	??_delay
  4254  0447  3080               	movlw	128
  4255  0448  0275               	subwf	??_delay,w
  4256  0449  1D03               	skipz
  4257  044A  2C4D               	goto	u1235
  4258  044B  3001               	movlw	1
  4259  044C  0226               	subwf	delay@delaytime,w
  4260  044D                     u1235:	
  4261  044D  1C03               	skipc
  4262  044E  0008               	return
  4263                           
  4264                           ;main.c: 87: for (counter = 0; counter<adjustedDelaytime; counter++);
  4265  044F  3000               	movlw	0
  4266  0450  0020               	movlb	0	; select bank0
  4267  0451  00AF               	movwf	delay@counter+3
  4268  0452  3000               	movlw	0
  4269  0453  00AE               	movwf	delay@counter+2
  4270  0454  3000               	movlw	0
  4271  0455  00AD               	movwf	delay@counter+1
  4272  0456  3000               	movlw	0
  4273  0457  00AC               	movwf	delay@counter
  4274  0458                     l347:	
  4275  0458  082F               	movf	delay@counter+3,w
  4276  0459  3A80               	xorlw	128
  4277  045A  00F5               	movwf	??_delay
  4278  045B  082B               	movf	delay@adjustedDelaytime+3,w
  4279  045C  3A80               	xorlw	128
  4280  045D  0275               	subwf	??_delay,w
  4281  045E  1D03               	skipz
  4282  045F  2C6A               	goto	u1243
  4283  0460  082A               	movf	delay@adjustedDelaytime+2,w
  4284  0461  022E               	subwf	delay@counter+2,w
  4285  0462  1D03               	skipz
  4286  0463  2C6A               	goto	u1243
  4287  0464  0829               	movf	delay@adjustedDelaytime+1,w
  4288  0465  022D               	subwf	delay@counter+1,w
  4289  0466  1D03               	skipz
  4290  0467  2C6A               	goto	u1243
  4291  0468  0828               	movf	delay@adjustedDelaytime,w
  4292  0469  022C               	subwf	delay@counter,w
  4293  046A                     u1243:	
  4294  046A  1803               	btfsc	3,0
  4295  046B  0008               	return
  4296  046C  3001               	movlw	1
  4297  046D  07AC               	addwf	delay@counter,f
  4298  046E  3000               	movlw	0
  4299  046F  3DAD               	addwfc	delay@counter+1,f
  4300  0470  3000               	movlw	0
  4301  0471  3DAE               	addwfc	delay@counter+2,f
  4302  0472  3000               	movlw	0
  4303  0473  3DAF               	addwfc	delay@counter+3,f
  4304  0474  2C58               	goto	l347
  4305  0475                     __end_of_delay:	
  4306                           
  4307                           	psect	text3
  4308  051F                     __ptext3:	
  4309 ;; *************** function ___wmul *****************
  4310 ;; Defined at:
  4311 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4314 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  product         2    4[BANK0 ] unsigned int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  2    0[BANK0 ] unsigned int 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;Total ram usage:        6 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    3
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_delay
  4337 ;;		_blinkyLoop
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function ___wmul
  4343  051F                     ___wmul:	
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4347  051F  0020               	movlb	0	; select bank0
  4348  0520  01A4               	clrf	___wmul@product
  4349  0521  01A5               	clrf	___wmul@product+1
  4350  0522                     l2016:	
  4351  0522  1C20               	btfss	___wmul@multiplier,0
  4352  0523  2D28               	goto	l536
  4353  0524  0822               	movf	___wmul@multiplicand,w
  4354  0525  07A4               	addwf	___wmul@product,f
  4355  0526  0823               	movf	___wmul@multiplicand+1,w
  4356  0527  3DA5               	addwfc	___wmul@product+1,f
  4357  0528                     l536:	
  4358  0528  3001               	movlw	1
  4359  0529                     u1205:	
  4360  0529  35A2               	lslf	___wmul@multiplicand,f
  4361  052A  0DA3               	rlf	___wmul@multiplicand+1,f
  4362  052B  0B89               	decfsz	9,f
  4363  052C  2D29               	goto	u1205
  4364  052D  3001               	movlw	1
  4365  052E                     u1215:	
  4366  052E  36A1               	lsrf	___wmul@multiplier+1,f
  4367  052F  0CA0               	rrf	___wmul@multiplier,f
  4368  0530  0B89               	decfsz	9,f
  4369  0531  2D2E               	goto	u1215
  4370  0532  0820               	movf	___wmul@multiplier,w
  4371  0533  0421               	iorwf	___wmul@multiplier+1,w
  4372  0534  1D03               	btfss	3,2
  4373  0535  2D22               	goto	l2016
  4374  0536  0825               	movf	___wmul@product+1,w
  4375  0537  00A1               	movwf	?___wmul+1
  4376  0538  0824               	movf	___wmul@product,w
  4377  0539  00A0               	movwf	?___wmul
  4378  053A  0008               	return
  4379  053B                     __end_of___wmul:	
  4380                           
  4381                           	psect	text4
  4382  015D                     __ptext4:	
  4383 ;; *************** function _UpdateLEDsFromValue *****************
  4384 ;; Defined at:
  4385 ;;		line 199 in file "main.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  inFaderNum      1    wreg     unsigned char 
  4388 ;;  inValue         1    5[COMMON] unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  inFaderNum      1    1[BANK0 ] unsigned char 
  4391 ;;  wkBrightFlag    1    3[BANK0 ] unsigned char 
  4392 ;;  wkOnFlag        1    2[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        5 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    3
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_main
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _UpdateLEDsFromValue
  4418  015D                     _UpdateLEDsFromValue:	
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _UpdateLEDsFromValue: [wreg-fsr0h+status,2+status,0]
  4422                           ;UpdateLEDsFromValue@inFaderNum stored from wreg
  4423  015D  0020               	movlb	0	; select bank0
  4424  015E  00A1               	movwf	UpdateLEDsFromValue@inFaderNum
  4425                           
  4426                           ;main.c: 201: bool wkOnFlag = 0;
  4427  015F  01A2               	clrf	UpdateLEDsFromValue@wkOnFlag
  4428                           
  4429                           ;main.c: 202: bool wkBrightFlag = 0;
  4430  0160  01A3               	clrf	UpdateLEDsFromValue@wkBrightFlag
  4431                           
  4432                           ;main.c: 205: if (inValue > 80) wkOnFlag=1;
  4433  0161  3051               	movlw	81
  4434  0162  0275               	subwf	UpdateLEDsFromValue@inValue,w
  4435  0163  1C03               	skipc
  4436  0164  2967               	goto	l2088
  4437  0165  01A2               	clrf	UpdateLEDsFromValue@wkOnFlag
  4438  0166  0AA2               	incf	UpdateLEDsFromValue@wkOnFlag,f
  4439  0167                     l2088:	
  4440                           
  4441                           ;main.c: 206: if (inValue > 170) wkBrightFlag=1;
  4442  0167  30AB               	movlw	171
  4443  0168  0275               	subwf	UpdateLEDsFromValue@inValue,w
  4444  0169  1C03               	skipc
  4445  016A  2A4D               	goto	l2172
  4446  016B  01A3               	clrf	UpdateLEDsFromValue@wkBrightFlag
  4447  016C  0AA3               	incf	UpdateLEDsFromValue@wkBrightFlag,f
  4448                           
  4449                           ;main.c: 208: switch(inFaderNum)
  4450  016D  2A4D               	goto	l2172
  4451  016E                     l2092:	
  4452                           ;main.c: 209: {
  4453                           ;main.c: 210: case 0 : {
  4454                           
  4455                           
  4456                           ;main.c: 211: if(wkOnFlag) { LATB |= 0b00000001;
  4457  016E  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4458  016F  1903               	btfsc	3,2
  4459  0170  297E               	goto	l2100
  4460  0171  1417               	bsf	23,0	;volatile
  4461                           
  4462                           ;main.c: 212: if(wkBrightFlag) {ODCONB &= 0b11111110;}else{ODCONB |= 0b00000001;};
  4463  0172  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4464  0173  1903               	btfsc	3,2
  4465  0174  297B               	goto	l380
  4466  0175  30FE               	movlw	254
  4467  0176  00A0               	movwf	??_UpdateLEDsFromValue
  4468  0177  0820               	movf	??_UpdateLEDsFromValue,w
  4469  0178  003E               	movlb	30	; select bank30
  4470  0179  05C5               	andwf	69,f	;volatile
  4471  017A  0008               	return
  4472  017B                     l380:	
  4473  017B  003E               	movlb	30	; select bank30
  4474  017C  1445               	bsf	69,0	;volatile
  4475                           
  4476                           ;main.c: 213: }else{ LATB &= 0b11111110; ODCONB &= 0b11111110; }
  4477  017D  0008               	return
  4478  017E                     l2100:	
  4479  017E  30FE               	movlw	254
  4480  017F  0020               	movlb	0	; select bank0
  4481  0180  00A0               	movwf	??_UpdateLEDsFromValue
  4482  0181  0820               	movf	??_UpdateLEDsFromValue,w
  4483  0182  0597               	andwf	23,f	;volatile
  4484  0183  30FE               	movlw	254
  4485  0184  00A0               	movwf	??_UpdateLEDsFromValue
  4486  0185  0820               	movf	??_UpdateLEDsFromValue,w
  4487  0186  003E               	movlb	30	; select bank30
  4488  0187  05C5               	andwf	69,f	;volatile
  4489                           
  4490                           ;main.c: 214: break;
  4491  0188  0008               	return
  4492  0189                     l2102:	
  4493                           ;main.c: 215: }
  4494                           ;main.c: 216: case 1 : {
  4495                           
  4496                           
  4497                           ;main.c: 217: if(wkOnFlag) { LATB |= 0b00000010;
  4498  0189  0020               	movlb	0	; select bank0
  4499  018A  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4500  018B  1903               	btfsc	3,2
  4501  018C  299A               	goto	l2110
  4502  018D  1497               	bsf	23,1	;volatile
  4503                           
  4504                           ;main.c: 218: if(wkBrightFlag) {ODCONB &= 0b11111101;}else{ODCONB |= 0b00000010;};
  4505  018E  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4506  018F  1903               	btfsc	3,2
  4507  0190  2997               	goto	l386
  4508  0191  30FD               	movlw	253
  4509  0192  00A0               	movwf	??_UpdateLEDsFromValue
  4510  0193  0820               	movf	??_UpdateLEDsFromValue,w
  4511  0194  003E               	movlb	30	; select bank30
  4512  0195  05C5               	andwf	69,f	;volatile
  4513  0196  0008               	return
  4514  0197                     l386:	
  4515  0197  003E               	movlb	30	; select bank30
  4516  0198  14C5               	bsf	69,1	;volatile
  4517                           
  4518                           ;main.c: 219: }else{ LATB &= 0b11111101; ODCONB &= 0b11111101; }
  4519  0199  0008               	return
  4520  019A                     l2110:	
  4521  019A  30FD               	movlw	253
  4522  019B  0020               	movlb	0	; select bank0
  4523  019C  00A0               	movwf	??_UpdateLEDsFromValue
  4524  019D  0820               	movf	??_UpdateLEDsFromValue,w
  4525  019E  0597               	andwf	23,f	;volatile
  4526  019F  30FD               	movlw	253
  4527  01A0  00A0               	movwf	??_UpdateLEDsFromValue
  4528  01A1  0820               	movf	??_UpdateLEDsFromValue,w
  4529  01A2  003E               	movlb	30	; select bank30
  4530  01A3  05C5               	andwf	69,f	;volatile
  4531                           
  4532                           ;main.c: 220: break;
  4533  01A4  0008               	return
  4534  01A5                     l2112:	
  4535                           ;main.c: 221: }
  4536                           ;main.c: 222: case 2 : {
  4537                           
  4538                           
  4539                           ;main.c: 223: if(wkOnFlag) { LATB |= 0b00000100;
  4540  01A5  0020               	movlb	0	; select bank0
  4541  01A6  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4542  01A7  1903               	btfsc	3,2
  4543  01A8  29B6               	goto	l2120
  4544  01A9  1517               	bsf	23,2	;volatile
  4545                           
  4546                           ;main.c: 224: if(wkBrightFlag) {ODCONB &= 0b11111011;}else{ODCONB |= 0b00000100;}
  4547  01AA  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4548  01AB  1903               	btfsc	3,2
  4549  01AC  29B3               	goto	l391
  4550  01AD  30FB               	movlw	251
  4551  01AE  00A0               	movwf	??_UpdateLEDsFromValue
  4552  01AF  0820               	movf	??_UpdateLEDsFromValue,w
  4553  01B0  003E               	movlb	30	; select bank30
  4554  01B1  05C5               	andwf	69,f	;volatile
  4555  01B2  0008               	return
  4556  01B3                     l391:	
  4557  01B3  003E               	movlb	30	; select bank30
  4558  01B4  1545               	bsf	69,2	;volatile
  4559                           
  4560                           ;main.c: 225: }else{ LATB &= 0b11111011; ODCONB &= 0b11111011; }
  4561  01B5  0008               	return
  4562  01B6                     l2120:	
  4563  01B6  30FB               	movlw	251
  4564  01B7  0020               	movlb	0	; select bank0
  4565  01B8  00A0               	movwf	??_UpdateLEDsFromValue
  4566  01B9  0820               	movf	??_UpdateLEDsFromValue,w
  4567  01BA  0597               	andwf	23,f	;volatile
  4568  01BB  30FB               	movlw	251
  4569  01BC  00A0               	movwf	??_UpdateLEDsFromValue
  4570  01BD  0820               	movf	??_UpdateLEDsFromValue,w
  4571  01BE  003E               	movlb	30	; select bank30
  4572  01BF  05C5               	andwf	69,f	;volatile
  4573                           
  4574                           ;main.c: 226: break;
  4575  01C0  0008               	return
  4576  01C1                     l2122:	
  4577                           ;main.c: 227: }
  4578                           ;main.c: 228: case 3 : {
  4579                           
  4580                           
  4581                           ;main.c: 229: if(wkOnFlag) { LATB |= 0b00001000;
  4582  01C1  0020               	movlb	0	; select bank0
  4583  01C2  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4584  01C3  1903               	btfsc	3,2
  4585  01C4  29D2               	goto	l2130
  4586  01C5  1597               	bsf	23,3	;volatile
  4587                           
  4588                           ;main.c: 230: if(wkBrightFlag) {ODCONB &= 0b11110111;}else{ODCONB |= 0b00001000;}
  4589  01C6  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4590  01C7  1903               	btfsc	3,2
  4591  01C8  29CF               	goto	l396
  4592  01C9  30F7               	movlw	247
  4593  01CA  00A0               	movwf	??_UpdateLEDsFromValue
  4594  01CB  0820               	movf	??_UpdateLEDsFromValue,w
  4595  01CC  003E               	movlb	30	; select bank30
  4596  01CD  05C5               	andwf	69,f	;volatile
  4597  01CE  0008               	return
  4598  01CF                     l396:	
  4599  01CF  003E               	movlb	30	; select bank30
  4600  01D0  15C5               	bsf	69,3	;volatile
  4601                           
  4602                           ;main.c: 231: }else{ LATB &= 0b11110111; ODCONB &= 0b11110111; }
  4603  01D1  0008               	return
  4604  01D2                     l2130:	
  4605  01D2  30F7               	movlw	247
  4606  01D3  0020               	movlb	0	; select bank0
  4607  01D4  00A0               	movwf	??_UpdateLEDsFromValue
  4608  01D5  0820               	movf	??_UpdateLEDsFromValue,w
  4609  01D6  0597               	andwf	23,f	;volatile
  4610  01D7  30F7               	movlw	247
  4611  01D8  00A0               	movwf	??_UpdateLEDsFromValue
  4612  01D9  0820               	movf	??_UpdateLEDsFromValue,w
  4613  01DA  003E               	movlb	30	; select bank30
  4614  01DB  05C5               	andwf	69,f	;volatile
  4615                           
  4616                           ;main.c: 232: break;
  4617  01DC  0008               	return
  4618  01DD                     l2132:	
  4619                           ;main.c: 233: }
  4620                           ;main.c: 234: case 4 : {
  4621                           
  4622                           
  4623                           ;main.c: 235: if(wkOnFlag) { LATB |= 0b00010000;
  4624  01DD  0020               	movlb	0	; select bank0
  4625  01DE  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4626  01DF  1903               	btfsc	3,2
  4627  01E0  29EE               	goto	l2140
  4628  01E1  1617               	bsf	23,4	;volatile
  4629                           
  4630                           ;main.c: 236: if(wkBrightFlag) {ODCONB &= 0b11101111;}else{ODCONB |= 0b00010000;}
  4631  01E2  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4632  01E3  1903               	btfsc	3,2
  4633  01E4  29EB               	goto	l401
  4634  01E5  30EF               	movlw	239
  4635  01E6  00A0               	movwf	??_UpdateLEDsFromValue
  4636  01E7  0820               	movf	??_UpdateLEDsFromValue,w
  4637  01E8  003E               	movlb	30	; select bank30
  4638  01E9  05C5               	andwf	69,f	;volatile
  4639  01EA  0008               	return
  4640  01EB                     l401:	
  4641  01EB  003E               	movlb	30	; select bank30
  4642  01EC  1645               	bsf	69,4	;volatile
  4643                           
  4644                           ;main.c: 237: }else{ LATB &= 0b11101111; ODCONB &= 0b11101111; }
  4645  01ED  0008               	return
  4646  01EE                     l2140:	
  4647  01EE  30EF               	movlw	239
  4648  01EF  0020               	movlb	0	; select bank0
  4649  01F0  00A0               	movwf	??_UpdateLEDsFromValue
  4650  01F1  0820               	movf	??_UpdateLEDsFromValue,w
  4651  01F2  0597               	andwf	23,f	;volatile
  4652  01F3  30EF               	movlw	239
  4653  01F4  00A0               	movwf	??_UpdateLEDsFromValue
  4654  01F5  0820               	movf	??_UpdateLEDsFromValue,w
  4655  01F6  003E               	movlb	30	; select bank30
  4656  01F7  05C5               	andwf	69,f	;volatile
  4657                           
  4658                           ;main.c: 238: break;
  4659  01F8  0008               	return
  4660  01F9                     l2142:	
  4661                           ;main.c: 239: }
  4662                           ;main.c: 240: case 5 : {
  4663                           
  4664                           
  4665                           ;main.c: 241: if(wkOnFlag) { LATC |= 0b00100000;
  4666  01F9  0020               	movlb	0	; select bank0
  4667  01FA  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4668  01FB  1903               	btfsc	3,2
  4669  01FC  2A0A               	goto	l2150
  4670  01FD  1698               	bsf	24,5	;volatile
  4671                           
  4672                           ;main.c: 242: if(wkBrightFlag) {ODCONC &= 0b11011111;}else{ODCONC |= 0b00100000;}
  4673  01FE  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4674  01FF  1903               	btfsc	3,2
  4675  0200  2A07               	goto	l406
  4676  0201  30DF               	movlw	223
  4677  0202  00A0               	movwf	??_UpdateLEDsFromValue
  4678  0203  0820               	movf	??_UpdateLEDsFromValue,w
  4679  0204  003E               	movlb	30	; select bank30
  4680  0205  05D0               	andwf	80,f	;volatile
  4681  0206  0008               	return
  4682  0207                     l406:	
  4683  0207  003E               	movlb	30	; select bank30
  4684  0208  16D0               	bsf	80,5	;volatile
  4685                           
  4686                           ;main.c: 243: }else{ LATC &= 0b11011111; ODCONC &= 0b11011111; }
  4687  0209  0008               	return
  4688  020A                     l2150:	
  4689  020A  30DF               	movlw	223
  4690  020B  0020               	movlb	0	; select bank0
  4691  020C  00A0               	movwf	??_UpdateLEDsFromValue
  4692  020D  0820               	movf	??_UpdateLEDsFromValue,w
  4693  020E  0598               	andwf	24,f	;volatile
  4694  020F  30DF               	movlw	223
  4695  0210  00A0               	movwf	??_UpdateLEDsFromValue
  4696  0211  0820               	movf	??_UpdateLEDsFromValue,w
  4697  0212  003E               	movlb	30	; select bank30
  4698  0213  05D0               	andwf	80,f	;volatile
  4699                           
  4700                           ;main.c: 244: break;
  4701  0214  0008               	return
  4702  0215                     l2152:	
  4703                           ;main.c: 245: }
  4704                           ;main.c: 246: case 6 : {
  4705                           
  4706                           
  4707                           ;main.c: 247: if(wkOnFlag) { LATC |= 0b01000000;
  4708  0215  0020               	movlb	0	; select bank0
  4709  0216  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4710  0217  1903               	btfsc	3,2
  4711  0218  2A26               	goto	l2160
  4712  0219  1718               	bsf	24,6	;volatile
  4713                           
  4714                           ;main.c: 248: if(wkBrightFlag) {ODCONC &= 0b10111111;}else{ODCONC |= 0b01000000;}
  4715  021A  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4716  021B  1903               	btfsc	3,2
  4717  021C  2A23               	goto	l411
  4718  021D  30BF               	movlw	191
  4719  021E  00A0               	movwf	??_UpdateLEDsFromValue
  4720  021F  0820               	movf	??_UpdateLEDsFromValue,w
  4721  0220  003E               	movlb	30	; select bank30
  4722  0221  05D0               	andwf	80,f	;volatile
  4723  0222  0008               	return
  4724  0223                     l411:	
  4725  0223  003E               	movlb	30	; select bank30
  4726  0224  1750               	bsf	80,6	;volatile
  4727                           
  4728                           ;main.c: 249: }else{ LATC &= 0b10111111; ODCONC &= 0b10111111; }
  4729  0225  0008               	return
  4730  0226                     l2160:	
  4731  0226  30BF               	movlw	191
  4732  0227  0020               	movlb	0	; select bank0
  4733  0228  00A0               	movwf	??_UpdateLEDsFromValue
  4734  0229  0820               	movf	??_UpdateLEDsFromValue,w
  4735  022A  0598               	andwf	24,f	;volatile
  4736  022B  30BF               	movlw	191
  4737  022C  00A0               	movwf	??_UpdateLEDsFromValue
  4738  022D  0820               	movf	??_UpdateLEDsFromValue,w
  4739  022E  003E               	movlb	30	; select bank30
  4740  022F  05D0               	andwf	80,f	;volatile
  4741                           
  4742                           ;main.c: 250: break;
  4743  0230  0008               	return
  4744  0231                     l2162:	
  4745                           ;main.c: 251: }
  4746                           ;main.c: 252: case 7 : {
  4747                           
  4748                           
  4749                           ;main.c: 253: if(wkOnFlag) { LATC |= 0b10000000;
  4750  0231  0020               	movlb	0	; select bank0
  4751  0232  0822               	movf	UpdateLEDsFromValue@wkOnFlag,w
  4752  0233  1903               	btfsc	3,2
  4753  0234  2A42               	goto	l2170
  4754  0235  1798               	bsf	24,7	;volatile
  4755                           
  4756                           ;main.c: 254: if(wkBrightFlag) {ODCONC &= 0b01111111;}else{ODCONC |= 0b10000000;}
  4757  0236  0823               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  4758  0237  1903               	btfsc	3,2
  4759  0238  2A3F               	goto	l416
  4760  0239  307F               	movlw	127
  4761  023A  00A0               	movwf	??_UpdateLEDsFromValue
  4762  023B  0820               	movf	??_UpdateLEDsFromValue,w
  4763  023C  003E               	movlb	30	; select bank30
  4764  023D  05D0               	andwf	80,f	;volatile
  4765  023E  0008               	return
  4766  023F                     l416:	
  4767  023F  003E               	movlb	30	; select bank30
  4768  0240  17D0               	bsf	80,7	;volatile
  4769                           
  4770                           ;main.c: 255: }else{ LATC &= 0b01111111; ODCONC &= 0b01111111; }
  4771  0241  0008               	return
  4772  0242                     l2170:	
  4773  0242  307F               	movlw	127
  4774  0243  0020               	movlb	0	; select bank0
  4775  0244  00A0               	movwf	??_UpdateLEDsFromValue
  4776  0245  0820               	movf	??_UpdateLEDsFromValue,w
  4777  0246  0598               	andwf	24,f	;volatile
  4778  0247  307F               	movlw	127
  4779  0248  00A0               	movwf	??_UpdateLEDsFromValue
  4780  0249  0820               	movf	??_UpdateLEDsFromValue,w
  4781  024A  003E               	movlb	30	; select bank30
  4782  024B  05D0               	andwf	80,f	;volatile
  4783                           
  4784                           ;main.c: 256: }
  4785                           ;main.c: 257: }
  4786  024C  0008               	return
  4787  024D                     l2172:	
  4788  024D  0020               	movlb	0	; select bank0
  4789  024E  0821               	movf	UpdateLEDsFromValue@inFaderNum,w
  4790                           
  4791                           ; Switch size 1, requested type "space"
  4792                           ; Number of cases is 8, Range of values is 0 to 7
  4793                           ; switch strategies available:
  4794                           ; Name         Instructions Cycles
  4795                           ; direct_byte           22     6 (fixed)
  4796                           ; simple_byte           25    13 (average)
  4797                           ; jumptable            260     6 (fixed)
  4798                           ;	Chosen strategy is direct_byte
  4799  024F  0084               	movwf	4
  4800  0250  3008               	movlw	8
  4801  0251  0204               	subwf	4,w
  4802  0252  1803               	skipnc
  4803  0253  0008               	return
  4804  0254  3185               	movlp	high S2398
  4805  0255  3504               	lslf	4,w
  4806  0256  3E69               	addlw	low S2398
  4807  0257  0082               	movwf	2
  4808  0258  0008               	return
  4809  0259                     __end_of_UpdateLEDsFromValue:	
  4810                           
  4811                           	psect	swtext1
  4812  0569                     __pswtext1:	
  4813  0569                     S2398:	
  4814  0569  3181  296E         	ljmp	l2092
  4815  056B  3181  2989         	ljmp	l2102
  4816  056D  3181  29A5         	ljmp	l2112
  4817  056F  3181  29C1         	ljmp	l2122
  4818  0571  3181  29DD         	ljmp	l2132
  4819  0573  3181  29F9         	ljmp	l2142
  4820  0575  3182  2A15         	ljmp	l2152
  4821  0577  3182  2A31         	ljmp	l2162
  4822                           
  4823                           	psect	text5
  4824  0033                     __ptext5:	
  4825 ;; *************** function _UpdateLEDs *****************
  4826 ;; Defined at:
  4827 ;;		line 259 in file "main.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  inMSByteLED     1    wreg     unsigned char 
  4830 ;;  inLSByteLED     1    5[COMMON] unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  inMSByteLED     1    1[BANK0 ] unsigned char 
  4833 ;;  wkByte          1    2[BANK0 ] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4843 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;Total ram usage:        4 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    3
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _UpdateLEDs
  4859  0033                     _UpdateLEDs:	
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _UpdateLEDs: [wreg+status,2+status,0]
  4863                           ;UpdateLEDs@inMSByteLED stored from wreg
  4864  0033  0020               	movlb	0	; select bank0
  4865  0034  00A1               	movwf	UpdateLEDs@inMSByteLED
  4866                           
  4867                           ;main.c: 260: uint8_t wkByte;
  4868                           ;main.c: 271: wkByte=inLSByteLED;
  4869  0035  0875               	movf	UpdateLEDs@inLSByteLED,w
  4870  0036  00A0               	movwf	??_UpdateLEDs
  4871  0037  0820               	movf	??_UpdateLEDs,w
  4872  0038  00A2               	movwf	UpdateLEDs@wkByte
  4873                           
  4874                           ;main.c: 272: wkByte &= 0b00000010;
  4875  0039  3002               	movlw	2
  4876  003A  00A0               	movwf	??_UpdateLEDs
  4877  003B  0820               	movf	??_UpdateLEDs,w
  4878  003C  05A2               	andwf	UpdateLEDs@wkByte,f
  4879                           
  4880                           ;main.c: 273: if(0<wkByte)
  4881  003D  0822               	movf	UpdateLEDs@wkByte,w
  4882  003E  1903               	btfsc	3,2
  4883  003F  2842               	goto	l2186
  4884                           
  4885                           ;main.c: 274: {
  4886                           ;main.c: 275: LATB |= 0b00000001;
  4887  0040  1417               	bsf	23,0	;volatile
  4888                           
  4889                           ;main.c: 276: }else{
  4890  0041  2846               	goto	l2188
  4891  0042                     l2186:	
  4892                           
  4893                           ;main.c: 277: LATB &= 0b11111110;
  4894  0042  30FE               	movlw	254
  4895  0043  00A0               	movwf	??_UpdateLEDs
  4896  0044  0820               	movf	??_UpdateLEDs,w
  4897  0045  0597               	andwf	23,f	;volatile
  4898  0046                     l2188:	
  4899                           
  4900                           ;main.c: 278: }
  4901                           ;main.c: 279: wkByte=inLSByteLED;
  4902  0046  0875               	movf	UpdateLEDs@inLSByteLED,w
  4903  0047  00A0               	movwf	??_UpdateLEDs
  4904  0048  0820               	movf	??_UpdateLEDs,w
  4905  0049  00A2               	movwf	UpdateLEDs@wkByte
  4906                           
  4907                           ;main.c: 280: wkByte &= 0b00000001;
  4908  004A  3001               	movlw	1
  4909  004B  00A0               	movwf	??_UpdateLEDs
  4910  004C  0820               	movf	??_UpdateLEDs,w
  4911  004D  05A2               	andwf	UpdateLEDs@wkByte,f
  4912                           
  4913                           ;main.c: 281: if(0<wkByte)
  4914  004E  0822               	movf	UpdateLEDs@wkByte,w
  4915  004F  1903               	btfsc	3,2
  4916  0050  2857               	goto	l424
  4917                           
  4918                           ;main.c: 282: {
  4919                           ;main.c: 283: ODCONB &= 0b11111110;
  4920  0051  30FE               	movlw	254
  4921  0052  00A0               	movwf	??_UpdateLEDs
  4922  0053  0820               	movf	??_UpdateLEDs,w
  4923  0054  003E               	movlb	30	; select bank30
  4924  0055  05C5               	andwf	69,f	;volatile
  4925                           
  4926                           ;main.c: 284: }else{
  4927  0056  2859               	goto	l2196
  4928  0057                     l424:	
  4929                           
  4930                           ;main.c: 286: ODCONB |= 0b00000001;
  4931  0057  003E               	movlb	30	; select bank30
  4932  0058  1445               	bsf	69,0	;volatile
  4933  0059                     l2196:	
  4934                           
  4935                           ;main.c: 287: }
  4936                           ;main.c: 289: wkByte=inLSByteLED;
  4937  0059  0875               	movf	UpdateLEDs@inLSByteLED,w
  4938  005A  0020               	movlb	0	; select bank0
  4939  005B  00A0               	movwf	??_UpdateLEDs
  4940  005C  0820               	movf	??_UpdateLEDs,w
  4941  005D  00A2               	movwf	UpdateLEDs@wkByte
  4942                           
  4943                           ;main.c: 290: wkByte &= 0b00001000;
  4944  005E  3008               	movlw	8
  4945  005F  00A0               	movwf	??_UpdateLEDs
  4946  0060  0820               	movf	??_UpdateLEDs,w
  4947  0061  05A2               	andwf	UpdateLEDs@wkByte,f
  4948                           
  4949                           ;main.c: 291: if(0<wkByte)
  4950  0062  0822               	movf	UpdateLEDs@wkByte,w
  4951  0063  1903               	btfsc	3,2
  4952  0064  2867               	goto	l2204
  4953                           
  4954                           ;main.c: 292: {
  4955                           ;main.c: 293: LATB |= 0b00000010;
  4956  0065  1497               	bsf	23,1	;volatile
  4957                           
  4958                           ;main.c: 294: }else{
  4959  0066  286B               	goto	l2206
  4960  0067                     l2204:	
  4961                           
  4962                           ;main.c: 295: LATB &= 0b11111101;
  4963  0067  30FD               	movlw	253
  4964  0068  00A0               	movwf	??_UpdateLEDs
  4965  0069  0820               	movf	??_UpdateLEDs,w
  4966  006A  0597               	andwf	23,f	;volatile
  4967  006B                     l2206:	
  4968                           
  4969                           ;main.c: 296: }
  4970                           ;main.c: 297: wkByte=inLSByteLED;
  4971  006B  0875               	movf	UpdateLEDs@inLSByteLED,w
  4972  006C  00A0               	movwf	??_UpdateLEDs
  4973  006D  0820               	movf	??_UpdateLEDs,w
  4974  006E  00A2               	movwf	UpdateLEDs@wkByte
  4975                           
  4976                           ;main.c: 298: wkByte &= 0b00000100;
  4977  006F  3004               	movlw	4
  4978  0070  00A0               	movwf	??_UpdateLEDs
  4979  0071  0820               	movf	??_UpdateLEDs,w
  4980  0072  05A2               	andwf	UpdateLEDs@wkByte,f
  4981                           
  4982                           ;main.c: 299: if(0<wkByte)
  4983  0073  0822               	movf	UpdateLEDs@wkByte,w
  4984  0074  1903               	btfsc	3,2
  4985  0075  287C               	goto	l428
  4986                           
  4987                           ;main.c: 300: {
  4988                           ;main.c: 301: ODCONB &= 0b11111101;
  4989  0076  30FD               	movlw	253
  4990  0077  00A0               	movwf	??_UpdateLEDs
  4991  0078  0820               	movf	??_UpdateLEDs,w
  4992  0079  003E               	movlb	30	; select bank30
  4993  007A  05C5               	andwf	69,f	;volatile
  4994                           
  4995                           ;main.c: 302: }else{
  4996  007B  287E               	goto	l2214
  4997  007C                     l428:	
  4998                           
  4999                           ;main.c: 304: ODCONB |= 0b00000010;
  5000  007C  003E               	movlb	30	; select bank30
  5001  007D  14C5               	bsf	69,1	;volatile
  5002  007E                     l2214:	
  5003                           
  5004                           ;main.c: 305: }
  5005                           ;main.c: 307: wkByte=inLSByteLED;
  5006  007E  0875               	movf	UpdateLEDs@inLSByteLED,w
  5007  007F  0020               	movlb	0	; select bank0
  5008  0080  00A0               	movwf	??_UpdateLEDs
  5009  0081  0820               	movf	??_UpdateLEDs,w
  5010  0082  00A2               	movwf	UpdateLEDs@wkByte
  5011                           
  5012                           ;main.c: 308: wkByte &= 0b00100000;
  5013  0083  3020               	movlw	32
  5014  0084  00A0               	movwf	??_UpdateLEDs
  5015  0085  0820               	movf	??_UpdateLEDs,w
  5016  0086  05A2               	andwf	UpdateLEDs@wkByte,f
  5017                           
  5018                           ;main.c: 309: if(0<wkByte)
  5019  0087  0822               	movf	UpdateLEDs@wkByte,w
  5020  0088  1903               	btfsc	3,2
  5021  0089  288C               	goto	l2222
  5022                           
  5023                           ;main.c: 310: {
  5024                           ;main.c: 311: LATB |= 0b00000100;
  5025  008A  1517               	bsf	23,2	;volatile
  5026                           
  5027                           ;main.c: 312: }else{
  5028  008B  2890               	goto	l2224
  5029  008C                     l2222:	
  5030                           
  5031                           ;main.c: 313: LATB &= 0b11111011;
  5032  008C  30FB               	movlw	251
  5033  008D  00A0               	movwf	??_UpdateLEDs
  5034  008E  0820               	movf	??_UpdateLEDs,w
  5035  008F  0597               	andwf	23,f	;volatile
  5036  0090                     l2224:	
  5037                           
  5038                           ;main.c: 314: }
  5039                           ;main.c: 315: wkByte=inLSByteLED;
  5040  0090  0875               	movf	UpdateLEDs@inLSByteLED,w
  5041  0091  00A0               	movwf	??_UpdateLEDs
  5042  0092  0820               	movf	??_UpdateLEDs,w
  5043  0093  00A2               	movwf	UpdateLEDs@wkByte
  5044                           
  5045                           ;main.c: 316: wkByte &= 0b00010000;
  5046  0094  3010               	movlw	16
  5047  0095  00A0               	movwf	??_UpdateLEDs
  5048  0096  0820               	movf	??_UpdateLEDs,w
  5049  0097  05A2               	andwf	UpdateLEDs@wkByte,f
  5050                           
  5051                           ;main.c: 317: if(0<wkByte)
  5052  0098  0822               	movf	UpdateLEDs@wkByte,w
  5053  0099  1903               	btfsc	3,2
  5054  009A  28A1               	goto	l432
  5055                           
  5056                           ;main.c: 318: {
  5057                           ;main.c: 319: ODCONB &= 0b11111011;
  5058  009B  30FB               	movlw	251
  5059  009C  00A0               	movwf	??_UpdateLEDs
  5060  009D  0820               	movf	??_UpdateLEDs,w
  5061  009E  003E               	movlb	30	; select bank30
  5062  009F  05C5               	andwf	69,f	;volatile
  5063                           
  5064                           ;main.c: 320: }else{
  5065  00A0  28A3               	goto	l2232
  5066  00A1                     l432:	
  5067                           
  5068                           ;main.c: 322: ODCONB |= 0b00000100;
  5069  00A1  003E               	movlb	30	; select bank30
  5070  00A2  1545               	bsf	69,2	;volatile
  5071  00A3                     l2232:	
  5072                           
  5073                           ;main.c: 323: }
  5074                           ;main.c: 325: wkByte=inLSByteLED;
  5075  00A3  0875               	movf	UpdateLEDs@inLSByteLED,w
  5076  00A4  0020               	movlb	0	; select bank0
  5077  00A5  00A0               	movwf	??_UpdateLEDs
  5078  00A6  0820               	movf	??_UpdateLEDs,w
  5079  00A7  00A2               	movwf	UpdateLEDs@wkByte
  5080                           
  5081                           ;main.c: 326: wkByte &= 0b10000000;
  5082  00A8  3080               	movlw	128
  5083  00A9  00A0               	movwf	??_UpdateLEDs
  5084  00AA  0820               	movf	??_UpdateLEDs,w
  5085  00AB  05A2               	andwf	UpdateLEDs@wkByte,f
  5086                           
  5087                           ;main.c: 327: if(0<wkByte)
  5088  00AC  0822               	movf	UpdateLEDs@wkByte,w
  5089  00AD  1903               	btfsc	3,2
  5090  00AE  28B1               	goto	l2240
  5091                           
  5092                           ;main.c: 328: {
  5093                           ;main.c: 329: LATB |= 0b00001000;
  5094  00AF  1597               	bsf	23,3	;volatile
  5095                           
  5096                           ;main.c: 330: }else{
  5097  00B0  28B5               	goto	l2242
  5098  00B1                     l2240:	
  5099                           
  5100                           ;main.c: 331: LATB &= 0b11110111;
  5101  00B1  30F7               	movlw	247
  5102  00B2  00A0               	movwf	??_UpdateLEDs
  5103  00B3  0820               	movf	??_UpdateLEDs,w
  5104  00B4  0597               	andwf	23,f	;volatile
  5105  00B5                     l2242:	
  5106                           
  5107                           ;main.c: 332: }
  5108                           ;main.c: 333: wkByte=inLSByteLED;
  5109  00B5  0875               	movf	UpdateLEDs@inLSByteLED,w
  5110  00B6  00A0               	movwf	??_UpdateLEDs
  5111  00B7  0820               	movf	??_UpdateLEDs,w
  5112  00B8  00A2               	movwf	UpdateLEDs@wkByte
  5113                           
  5114                           ;main.c: 334: wkByte &= 0b01000000;
  5115  00B9  3040               	movlw	64
  5116  00BA  00A0               	movwf	??_UpdateLEDs
  5117  00BB  0820               	movf	??_UpdateLEDs,w
  5118  00BC  05A2               	andwf	UpdateLEDs@wkByte,f
  5119                           
  5120                           ;main.c: 335: if(0<wkByte)
  5121  00BD  0822               	movf	UpdateLEDs@wkByte,w
  5122  00BE  1903               	btfsc	3,2
  5123  00BF  28C6               	goto	l436
  5124                           
  5125                           ;main.c: 336: {
  5126                           ;main.c: 337: ODCONB &= 0b11110111;
  5127  00C0  30F7               	movlw	247
  5128  00C1  00A0               	movwf	??_UpdateLEDs
  5129  00C2  0820               	movf	??_UpdateLEDs,w
  5130  00C3  003E               	movlb	30	; select bank30
  5131  00C4  05C5               	andwf	69,f	;volatile
  5132                           
  5133                           ;main.c: 338: }else{
  5134  00C5  28C8               	goto	l2250
  5135  00C6                     l436:	
  5136                           
  5137                           ;main.c: 340: ODCONB |= 0b00001000;
  5138  00C6  003E               	movlb	30	; select bank30
  5139  00C7  15C5               	bsf	69,3	;volatile
  5140  00C8                     l2250:	
  5141                           
  5142                           ;main.c: 341: }
  5143                           ;main.c: 343: wkByte=inMSByteLED;
  5144  00C8  0020               	movlb	0	; select bank0
  5145  00C9  0821               	movf	UpdateLEDs@inMSByteLED,w
  5146  00CA  00A0               	movwf	??_UpdateLEDs
  5147  00CB  0820               	movf	??_UpdateLEDs,w
  5148  00CC  00A2               	movwf	UpdateLEDs@wkByte
  5149                           
  5150                           ;main.c: 344: wkByte &= 0b00000010;
  5151  00CD  3002               	movlw	2
  5152  00CE  00A0               	movwf	??_UpdateLEDs
  5153  00CF  0820               	movf	??_UpdateLEDs,w
  5154  00D0  05A2               	andwf	UpdateLEDs@wkByte,f
  5155                           
  5156                           ;main.c: 345: if(0<wkByte)
  5157  00D1  0822               	movf	UpdateLEDs@wkByte,w
  5158  00D2  1903               	btfsc	3,2
  5159  00D3  28D6               	goto	l2258
  5160                           
  5161                           ;main.c: 346: {
  5162                           ;main.c: 347: LATB |= 0b00010000;
  5163  00D4  1617               	bsf	23,4	;volatile
  5164                           
  5165                           ;main.c: 348: }else{
  5166  00D5  28DA               	goto	l2260
  5167  00D6                     l2258:	
  5168                           
  5169                           ;main.c: 349: LATB &= 0b11101111;
  5170  00D6  30EF               	movlw	239
  5171  00D7  00A0               	movwf	??_UpdateLEDs
  5172  00D8  0820               	movf	??_UpdateLEDs,w
  5173  00D9  0597               	andwf	23,f	;volatile
  5174  00DA                     l2260:	
  5175                           
  5176                           ;main.c: 350: }
  5177                           ;main.c: 351: wkByte=inMSByteLED;
  5178  00DA  0821               	movf	UpdateLEDs@inMSByteLED,w
  5179  00DB  00A0               	movwf	??_UpdateLEDs
  5180  00DC  0820               	movf	??_UpdateLEDs,w
  5181  00DD  00A2               	movwf	UpdateLEDs@wkByte
  5182                           
  5183                           ;main.c: 352: wkByte &= 0b00000001;
  5184  00DE  3001               	movlw	1
  5185  00DF  00A0               	movwf	??_UpdateLEDs
  5186  00E0  0820               	movf	??_UpdateLEDs,w
  5187  00E1  05A2               	andwf	UpdateLEDs@wkByte,f
  5188                           
  5189                           ;main.c: 353: if(0<wkByte)
  5190  00E2  0822               	movf	UpdateLEDs@wkByte,w
  5191  00E3  1903               	btfsc	3,2
  5192  00E4  28EB               	goto	l440
  5193                           
  5194                           ;main.c: 354: {
  5195                           ;main.c: 355: ODCONB &= 0b11101111;
  5196  00E5  30EF               	movlw	239
  5197  00E6  00A0               	movwf	??_UpdateLEDs
  5198  00E7  0820               	movf	??_UpdateLEDs,w
  5199  00E8  003E               	movlb	30	; select bank30
  5200  00E9  05C5               	andwf	69,f	;volatile
  5201                           
  5202                           ;main.c: 356: }else{
  5203  00EA  28ED               	goto	l2268
  5204  00EB                     l440:	
  5205                           
  5206                           ;main.c: 358: ODCONB |= 0b00010000;
  5207  00EB  003E               	movlb	30	; select bank30
  5208  00EC  1645               	bsf	69,4	;volatile
  5209  00ED                     l2268:	
  5210                           
  5211                           ;main.c: 359: }
  5212                           ;main.c: 361: wkByte=inMSByteLED;
  5213  00ED  0020               	movlb	0	; select bank0
  5214  00EE  0821               	movf	UpdateLEDs@inMSByteLED,w
  5215  00EF  00A0               	movwf	??_UpdateLEDs
  5216  00F0  0820               	movf	??_UpdateLEDs,w
  5217  00F1  00A2               	movwf	UpdateLEDs@wkByte
  5218                           
  5219                           ;main.c: 362: wkByte &= 0b00001000;
  5220  00F2  3008               	movlw	8
  5221  00F3  00A0               	movwf	??_UpdateLEDs
  5222  00F4  0820               	movf	??_UpdateLEDs,w
  5223  00F5  05A2               	andwf	UpdateLEDs@wkByte,f
  5224                           
  5225                           ;main.c: 363: if(0<wkByte)
  5226  00F6  0822               	movf	UpdateLEDs@wkByte,w
  5227  00F7  1903               	btfsc	3,2
  5228  00F8  28FB               	goto	l2276
  5229                           
  5230                           ;main.c: 364: {
  5231                           ;main.c: 365: LATC |= 0b00100000;
  5232  00F9  1698               	bsf	24,5	;volatile
  5233                           
  5234                           ;main.c: 366: }else{
  5235  00FA  28FF               	goto	l2278
  5236  00FB                     l2276:	
  5237                           
  5238                           ;main.c: 367: LATC &= 0b11011111;
  5239  00FB  30DF               	movlw	223
  5240  00FC  00A0               	movwf	??_UpdateLEDs
  5241  00FD  0820               	movf	??_UpdateLEDs,w
  5242  00FE  0598               	andwf	24,f	;volatile
  5243  00FF                     l2278:	
  5244                           
  5245                           ;main.c: 368: }
  5246                           ;main.c: 369: wkByte=inMSByteLED;
  5247  00FF  0821               	movf	UpdateLEDs@inMSByteLED,w
  5248  0100  00A0               	movwf	??_UpdateLEDs
  5249  0101  0820               	movf	??_UpdateLEDs,w
  5250  0102  00A2               	movwf	UpdateLEDs@wkByte
  5251                           
  5252                           ;main.c: 370: wkByte &= 0b00000100;
  5253  0103  3004               	movlw	4
  5254  0104  00A0               	movwf	??_UpdateLEDs
  5255  0105  0820               	movf	??_UpdateLEDs,w
  5256  0106  05A2               	andwf	UpdateLEDs@wkByte,f
  5257                           
  5258                           ;main.c: 371: if(0<wkByte)
  5259  0107  0822               	movf	UpdateLEDs@wkByte,w
  5260  0108  1903               	btfsc	3,2
  5261  0109  2910               	goto	l444
  5262                           
  5263                           ;main.c: 372: {
  5264                           ;main.c: 373: ODCONC &= 0b11011111;
  5265  010A  30DF               	movlw	223
  5266  010B  00A0               	movwf	??_UpdateLEDs
  5267  010C  0820               	movf	??_UpdateLEDs,w
  5268  010D  003E               	movlb	30	; select bank30
  5269  010E  05D0               	andwf	80,f	;volatile
  5270                           
  5271                           ;main.c: 374: }else{
  5272  010F  2912               	goto	l2286
  5273  0110                     l444:	
  5274                           
  5275                           ;main.c: 376: ODCONC |= 0b00100000;
  5276  0110  003E               	movlb	30	; select bank30
  5277  0111  16D0               	bsf	80,5	;volatile
  5278  0112                     l2286:	
  5279                           
  5280                           ;main.c: 377: }
  5281                           ;main.c: 379: wkByte=inMSByteLED;
  5282  0112  0020               	movlb	0	; select bank0
  5283  0113  0821               	movf	UpdateLEDs@inMSByteLED,w
  5284  0114  00A0               	movwf	??_UpdateLEDs
  5285  0115  0820               	movf	??_UpdateLEDs,w
  5286  0116  00A2               	movwf	UpdateLEDs@wkByte
  5287                           
  5288                           ;main.c: 380: wkByte &= 0b00100000;
  5289  0117  3020               	movlw	32
  5290  0118  00A0               	movwf	??_UpdateLEDs
  5291  0119  0820               	movf	??_UpdateLEDs,w
  5292  011A  05A2               	andwf	UpdateLEDs@wkByte,f
  5293                           
  5294                           ;main.c: 381: if(0<wkByte)
  5295  011B  0822               	movf	UpdateLEDs@wkByte,w
  5296  011C  1903               	btfsc	3,2
  5297  011D  2920               	goto	l2294
  5298                           
  5299                           ;main.c: 382: {
  5300                           ;main.c: 383: LATC |= 0b01000000;
  5301  011E  1718               	bsf	24,6	;volatile
  5302                           
  5303                           ;main.c: 384: }else{
  5304  011F  2924               	goto	l2296
  5305  0120                     l2294:	
  5306                           
  5307                           ;main.c: 385: LATC &= 0b10111111;
  5308  0120  30BF               	movlw	191
  5309  0121  00A0               	movwf	??_UpdateLEDs
  5310  0122  0820               	movf	??_UpdateLEDs,w
  5311  0123  0598               	andwf	24,f	;volatile
  5312  0124                     l2296:	
  5313                           
  5314                           ;main.c: 386: }
  5315                           ;main.c: 387: wkByte=inMSByteLED;
  5316  0124  0821               	movf	UpdateLEDs@inMSByteLED,w
  5317  0125  00A0               	movwf	??_UpdateLEDs
  5318  0126  0820               	movf	??_UpdateLEDs,w
  5319  0127  00A2               	movwf	UpdateLEDs@wkByte
  5320                           
  5321                           ;main.c: 388: wkByte &= 0b00010000;
  5322  0128  3010               	movlw	16
  5323  0129  00A0               	movwf	??_UpdateLEDs
  5324  012A  0820               	movf	??_UpdateLEDs,w
  5325  012B  05A2               	andwf	UpdateLEDs@wkByte,f
  5326                           
  5327                           ;main.c: 389: if(0<wkByte)
  5328  012C  0822               	movf	UpdateLEDs@wkByte,w
  5329  012D  1903               	btfsc	3,2
  5330  012E  2935               	goto	l448
  5331                           
  5332                           ;main.c: 390: {
  5333                           ;main.c: 391: ODCONC &= 0b10111111;
  5334  012F  30BF               	movlw	191
  5335  0130  00A0               	movwf	??_UpdateLEDs
  5336  0131  0820               	movf	??_UpdateLEDs,w
  5337  0132  003E               	movlb	30	; select bank30
  5338  0133  05D0               	andwf	80,f	;volatile
  5339                           
  5340                           ;main.c: 392: }else{
  5341  0134  2937               	goto	l2304
  5342  0135                     l448:	
  5343                           
  5344                           ;main.c: 394: ODCONC |= 0b01000000;
  5345  0135  003E               	movlb	30	; select bank30
  5346  0136  1750               	bsf	80,6	;volatile
  5347  0137                     l2304:	
  5348                           
  5349                           ;main.c: 395: }
  5350                           ;main.c: 397: wkByte=inMSByteLED;
  5351  0137  0020               	movlb	0	; select bank0
  5352  0138  0821               	movf	UpdateLEDs@inMSByteLED,w
  5353  0139  00A0               	movwf	??_UpdateLEDs
  5354  013A  0820               	movf	??_UpdateLEDs,w
  5355  013B  00A2               	movwf	UpdateLEDs@wkByte
  5356                           
  5357                           ;main.c: 398: wkByte &= 0b10000000;
  5358  013C  3080               	movlw	128
  5359  013D  00A0               	movwf	??_UpdateLEDs
  5360  013E  0820               	movf	??_UpdateLEDs,w
  5361  013F  05A2               	andwf	UpdateLEDs@wkByte,f
  5362                           
  5363                           ;main.c: 399: if(0<wkByte)
  5364  0140  0822               	movf	UpdateLEDs@wkByte,w
  5365  0141  1903               	btfsc	3,2
  5366  0142  2945               	goto	l2312
  5367                           
  5368                           ;main.c: 400: {
  5369                           ;main.c: 401: LATC |= 0b10000000;
  5370  0143  1798               	bsf	24,7	;volatile
  5371                           
  5372                           ;main.c: 402: }else{
  5373  0144  2949               	goto	l2314
  5374  0145                     l2312:	
  5375                           
  5376                           ;main.c: 403: LATC &= 0b01111111;
  5377  0145  307F               	movlw	127
  5378  0146  00A0               	movwf	??_UpdateLEDs
  5379  0147  0820               	movf	??_UpdateLEDs,w
  5380  0148  0598               	andwf	24,f	;volatile
  5381  0149                     l2314:	
  5382                           
  5383                           ;main.c: 404: }
  5384                           ;main.c: 405: wkByte=inMSByteLED;
  5385  0149  0821               	movf	UpdateLEDs@inMSByteLED,w
  5386  014A  00A0               	movwf	??_UpdateLEDs
  5387  014B  0820               	movf	??_UpdateLEDs,w
  5388  014C  00A2               	movwf	UpdateLEDs@wkByte
  5389                           
  5390                           ;main.c: 406: wkByte &= 0b01000000;
  5391  014D  3040               	movlw	64
  5392  014E  00A0               	movwf	??_UpdateLEDs
  5393  014F  0820               	movf	??_UpdateLEDs,w
  5394  0150  05A2               	andwf	UpdateLEDs@wkByte,f
  5395                           
  5396                           ;main.c: 407: if(0<wkByte)
  5397  0151  0822               	movf	UpdateLEDs@wkByte,w
  5398  0152  1903               	btfsc	3,2
  5399  0153  295A               	goto	l452
  5400                           
  5401                           ;main.c: 408: {
  5402                           ;main.c: 409: ODCONC &= 0b01111111;
  5403  0154  307F               	movlw	127
  5404  0155  00A0               	movwf	??_UpdateLEDs
  5405  0156  0820               	movf	??_UpdateLEDs,w
  5406  0157  003E               	movlb	30	; select bank30
  5407  0158  05D0               	andwf	80,f	;volatile
  5408                           
  5409                           ;main.c: 410: }else{
  5410  0159  0008               	return
  5411  015A                     l452:	
  5412                           
  5413                           ;main.c: 412: ODCONC |= 0b10000000;
  5414  015A  003E               	movlb	30	; select bank30
  5415  015B  17D0               	bsf	80,7	;volatile
  5416  015C  0008               	return
  5417  015D                     __end_of_UpdateLEDs:	
  5418                           
  5419                           	psect	text6
  5420  0594                     __ptext6:	
  5421 ;; *************** function _SYSTEM_Initialize *****************
  5422 ;; Defined at:
  5423 ;;		line 83 in file "mcc_generated_files/mcc.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    4
  5444 ;; This function calls:
  5445 ;;		_ADCC_Initialize
  5446 ;;		_I2C1_Initialize
  5447 ;;		_OSCILLATOR_Initialize
  5448 ;;		_PIN_MANAGER_Initialize
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function _SYSTEM_Initialize
  5456  0594                     _SYSTEM_Initialize:	
  5457                           
  5458                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5462  0594  3184  24C1  3185   	fcall	_PIN_MANAGER_Initialize
  5463                           
  5464                           ;mcc.c: 87: OSCILLATOR_Initialize();
  5465  0597  3185  25A0  3185   	fcall	_OSCILLATOR_Initialize
  5466                           
  5467                           ;mcc.c: 88: I2C1_Initialize();
  5468  059A  3185  2579  3185   	fcall	_I2C1_Initialize
  5469                           
  5470                           ;mcc.c: 89: ADCC_Initialize();
  5471  059D  3185  253B         	fcall	_ADCC_Initialize
  5472  059F  0008               	return
  5473  05A0                     __end_of_SYSTEM_Initialize:	
  5474                           
  5475                           	psect	text7
  5476  04C1                     __ptext7:	
  5477 ;; *************** function _PIN_MANAGER_Initialize *****************
  5478 ;; Defined at:
  5479 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  state           1    5[COMMON] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;Total ram usage:        1 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    3
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_SYSTEM_Initialize
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function _PIN_MANAGER_Initialize
  5509  04C1                     _PIN_MANAGER_Initialize:	
  5510                           
  5511                           ;pin_manager.c: 57: LATA = 0x00;
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5515  04C1  0020               	movlb	0	; select bank0
  5516  04C2  0196               	clrf	22	;volatile
  5517                           
  5518                           ;pin_manager.c: 58: LATB = 0x00;
  5519  04C3  0197               	clrf	23	;volatile
  5520                           
  5521                           ;pin_manager.c: 59: LATC = 0x00;
  5522  04C4  0198               	clrf	24	;volatile
  5523                           
  5524                           ;pin_manager.c: 64: TRISA = 0xFF;
  5525  04C5  30FF               	movlw	255
  5526  04C6  0091               	movwf	17	;volatile
  5527                           
  5528                           ;pin_manager.c: 65: TRISB = 0xE0;
  5529  04C7  30E0               	movlw	224
  5530  04C8  0092               	movwf	18	;volatile
  5531                           
  5532                           ;pin_manager.c: 66: TRISC = 0x1F;
  5533  04C9  301F               	movlw	31
  5534  04CA  0093               	movwf	19	;volatile
  5535                           
  5536                           ;pin_manager.c: 71: ANSELC = 0xE7;
  5537  04CB  30E7               	movlw	231
  5538  04CC  003E               	movlb	30	; select bank30
  5539  04CD  00CE               	movwf	78	;volatile
  5540                           
  5541                           ;pin_manager.c: 72: ANSELB = 0x1F;
  5542  04CE  301F               	movlw	31
  5543  04CF  00C3               	movwf	67	;volatile
  5544                           
  5545                           ;pin_manager.c: 73: ANSELA = 0xFF;
  5546  04D0  30FF               	movlw	255
  5547  04D1  00B8               	movwf	56	;volatile
  5548                           
  5549                           ;pin_manager.c: 78: WPUE = 0x00;
  5550  04D2  01E5               	clrf	101	;volatile
  5551                           
  5552                           ;pin_manager.c: 79: WPUB = 0x00;
  5553  04D3  01C4               	clrf	68	;volatile
  5554                           
  5555                           ;pin_manager.c: 80: WPUA = 0x00;
  5556  04D4  01B9               	clrf	57	;volatile
  5557                           
  5558                           ;pin_manager.c: 81: WPUC = 0x00;
  5559  04D5  01CF               	clrf	79	;volatile
  5560                           
  5561                           ;pin_manager.c: 86: ODCONA = 0x00;
  5562  04D6  01BA               	clrf	58	;volatile
  5563                           
  5564                           ;pin_manager.c: 87: ODCONB = 0x00;
  5565  04D7  01C5               	clrf	69	;volatile
  5566                           
  5567                           ;pin_manager.c: 88: ODCONC = 0x00;
  5568  04D8  01D0               	clrf	80	;volatile
  5569                           
  5570                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  5571  04D9  3000               	movlw	0
  5572  04DA  1B8B               	btfsc	11,7	;volatile
  5573  04DB  3001               	movlw	1
  5574  04DC  00F5               	movwf	PIN_MANAGER_Initialize@state
  5575                           
  5576                           ;pin_manager.c: 96: GIE = 0;
  5577  04DD  138B               	bcf	11,7	;volatile
  5578                           
  5579                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  5580  04DE  3055               	movlw	85
  5581  04DF  003D               	movlb	29	; select bank29
  5582  04E0  008F               	movwf	15	;volatile
  5583                           
  5584                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  5585  04E1  30AA               	movlw	170
  5586  04E2  008F               	movwf	15	;volatile
  5587                           
  5588                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  5589  04E3  100F               	bcf	15,0	;volatile
  5590                           
  5591                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  5592  04E4  0846               	movf	70,w	;volatile
  5593  04E5  39E0               	andlw	-32
  5594  04E6  3813               	iorlw	19
  5595  04E7  00C6               	movwf	70	;volatile
  5596                           
  5597                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  5598  04E8  0845               	movf	69,w	;volatile
  5599  04E9  39E0               	andlw	-32
  5600  04EA  3814               	iorlw	20
  5601  04EB  00C5               	movwf	69	;volatile
  5602                           
  5603                           ;pin_manager.c: 103: RC3PPS = 0x15;
  5604  04EC  3015               	movlw	21
  5605  04ED  003E               	movlb	30	; select bank30
  5606  04EE  00A3               	movwf	35	;volatile
  5607                           
  5608                           ;pin_manager.c: 104: RC4PPS = 0x14;
  5609  04EF  3014               	movlw	20
  5610  04F0  00A4               	movwf	36	;volatile
  5611                           
  5612                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  5613  04F1  3055               	movlw	85
  5614  04F2  003D               	movlb	29	; select bank29
  5615  04F3  008F               	movwf	15	;volatile
  5616                           
  5617                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  5618  04F4  30AA               	movlw	170
  5619  04F5  008F               	movwf	15	;volatile
  5620                           
  5621                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  5622  04F6  140F               	bsf	15,0	;volatile
  5623                           
  5624                           ;pin_manager.c: 110: GIE = state;
  5625  04F7  1C75               	btfss	PIN_MANAGER_Initialize@state,0
  5626  04F8  2CFB               	goto	u640
  5627  04F9  178B               	bsf	11,7	;volatile
  5628  04FA  0008               	return
  5629  04FB                     u640:	
  5630  04FB  138B               	bcf	11,7	;volatile
  5631  04FC  0008               	return
  5632  04FD                     __end_of_PIN_MANAGER_Initialize:	
  5633                           
  5634                           	psect	text8
  5635  05A0                     __ptext8:	
  5636 ;; *************** function _OSCILLATOR_Initialize *****************
  5637 ;; Defined at:
  5638 ;;		line 92 in file "mcc_generated_files/mcc.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    3
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_SYSTEM_Initialize
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _OSCILLATOR_Initialize
  5668  05A0                     _OSCILLATOR_Initialize:	
  5669                           
  5670                           ;mcc.c: 95: OSCCON1 = 0x60;
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5674  05A0  3060               	movlw	96
  5675  05A1  0031               	movlb	17	; select bank17
  5676  05A2  008D               	movwf	13	;volatile
  5677                           
  5678                           ;mcc.c: 97: OSCCON3 = 0x00;
  5679  05A3  018F               	clrf	15	;volatile
  5680                           
  5681                           ;mcc.c: 99: OSCEN = 0x00;
  5682  05A4  0191               	clrf	17	;volatile
  5683                           
  5684                           ;mcc.c: 101: OSCFRQ = 0x06;
  5685  05A5  3006               	movlw	6
  5686  05A6  0093               	movwf	19	;volatile
  5687                           
  5688                           ;mcc.c: 103: OSCTUNE = 0x00;
  5689  05A7  0192               	clrf	18	;volatile
  5690  05A8  0008               	return
  5691  05A9                     __end_of_OSCILLATOR_Initialize:	
  5692                           
  5693                           	psect	text9
  5694  0579                     __ptext9:	
  5695 ;; *************** function _I2C1_Initialize *****************
  5696 ;; Defined at:
  5697 ;;		line 84 in file "mcc_generated_files/i2c1.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    3
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_SYSTEM_Initialize
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _I2C1_Initialize
  5727  0579                     _I2C1_Initialize:	
  5728                           
  5729                           ;i2c1.c: 88: SSP1STAT = 0x80;
  5730                           
  5731                           ;incstack = 0
  5732                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  5733  0579  3080               	movlw	128
  5734  057A  0023               	movlb	3	; select bank3
  5735  057B  008F               	movwf	15	;volatile
  5736                           
  5737                           ;i2c1.c: 90: SSP1CON1 = 0x26;
  5738  057C  3026               	movlw	38
  5739  057D  0090               	movwf	16	;volatile
  5740                           
  5741                           ;i2c1.c: 92: SSP1CON2 = 0x00;
  5742  057E  0191               	clrf	17	;volatile
  5743                           
  5744                           ;i2c1.c: 94: SSP1CON3 = 0x00;
  5745  057F  0192               	clrf	18	;volatile
  5746                           
  5747                           ;i2c1.c: 96: SSP1MSK = (0x7F << 1);
  5748  0580  30FE               	movlw	254
  5749  0581  008E               	movwf	14	;volatile
  5750                           
  5751                           ;i2c1.c: 98: SSP1ADD = (0x10 << 1);
  5752  0582  3020               	movlw	32
  5753  0583  008D               	movwf	13	;volatile
  5754                           
  5755                           ;i2c1.c: 101: PIR3bits.SSP1IF = 0;
  5756  0584  002E               	movlb	14	; select bank14
  5757  0585  100F               	bcf	15,0	;volatile
  5758                           
  5759                           ;i2c1.c: 103: PIE3bits.SSP1IE = 1;
  5760  0586  1419               	bsf	25,0	;volatile
  5761  0587  0008               	return
  5762  0588                     __end_of_I2C1_Initialize:	
  5763                           
  5764                           	psect	text10
  5765  053B                     __ptext10:	
  5766 ;; *************** function _ADCC_Initialize *****************
  5767 ;; Defined at:
  5768 ;;		line 62 in file "mcc_generated_files/adcc.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    3
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_SYSTEM_Initialize
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           
  5797                           ;psect for function _ADCC_Initialize
  5798  053B                     _ADCC_Initialize:	
  5799                           
  5800                           ;adcc.c: 66: ADCON1 = 0x00;
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  5804  053B  0021               	movlb	1	; select bank1
  5805  053C  0194               	clrf	20	;volatile
  5806                           
  5807                           ;adcc.c: 68: ADCON2 = 0x03;
  5808  053D  3003               	movlw	3
  5809  053E  0095               	movwf	21	;volatile
  5810                           
  5811                           ;adcc.c: 70: ADCON3 = 0x00;
  5812  053F  0196               	clrf	22	;volatile
  5813                           
  5814                           ;adcc.c: 72: ADACT = 0x00;
  5815  0540  0199               	clrf	25	;volatile
  5816                           
  5817                           ;adcc.c: 74: ADSTAT = 0x00;
  5818  0541  0197               	clrf	23	;volatile
  5819                           
  5820                           ;adcc.c: 76: ADCLK = 0x1F;
  5821  0542  301F               	movlw	31
  5822  0543  0098               	movwf	24	;volatile
  5823                           
  5824                           ;adcc.c: 78: ADREF = 0x00;
  5825  0544  019A               	clrf	26	;volatile
  5826                           
  5827                           ;adcc.c: 80: ADCAP = 0x00;
  5828  0545  019B               	clrf	27	;volatile
  5829                           
  5830                           ;adcc.c: 82: ADPRE = 0x00;
  5831  0546  019C               	clrf	28	;volatile
  5832                           
  5833                           ;adcc.c: 84: ADACQ = 0x02;
  5834  0547  3002               	movlw	2
  5835  0548  009D               	movwf	29	;volatile
  5836                           
  5837                           ;adcc.c: 86: ADPCH = 0x00;
  5838  0549  019E               	clrf	30	;volatile
  5839                           
  5840                           ;adcc.c: 88: ADRPT = 0x00;
  5841  054A  0022               	movlb	2	; select bank2
  5842  054B  018D               	clrf	13	;volatile
  5843                           
  5844                           ;adcc.c: 90: ADLTHL = 0x00;
  5845  054C  018E               	clrf	14	;volatile
  5846                           
  5847                           ;adcc.c: 92: ADLTHH = 0x00;
  5848  054D  018F               	clrf	15	;volatile
  5849                           
  5850                           ;adcc.c: 94: ADUTHL = 0x00;
  5851  054E  0190               	clrf	16	;volatile
  5852                           
  5853                           ;adcc.c: 96: ADUTHH = 0x00;
  5854  054F  0191               	clrf	17	;volatile
  5855                           
  5856                           ;adcc.c: 98: ADSTPTL = 0x00;
  5857  0550  0192               	clrf	18	;volatile
  5858                           
  5859                           ;adcc.c: 100: ADSTPTH = 0x00;
  5860  0551  0193               	clrf	19	;volatile
  5861                           
  5862                           ;adcc.c: 103: ADCON0 = 0x84;
  5863  0552  3084               	movlw	132
  5864  0553  0021               	movlb	1	; select bank1
  5865  0554  0093               	movwf	19	;volatile
  5866  0555  0008               	return
  5867  0556                     __end_of_ADCC_Initialize:	
  5868                           
  5869                           	psect	text11
  5870  0556                     __ptext11:	
  5871 ;; *************** function _ADCC_GetSingleConversion *****************
  5872 ;; Defined at:
  5873 ;;		line 132 in file "mcc_generated_files/adcc.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  channel         1    wreg     enum E14254
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  channel         1    5[COMMON] enum E14254
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  2    0[BANK0 ] unsigned int 
  5880 ;; Registers used:
  5881 ;;		wreg
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5887 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;Total ram usage:        4 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    3
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_main
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _ADCC_GetSingleConversion
  5903  0556                     _ADCC_GetSingleConversion:	
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  5907                           ;ADCC_GetSingleConversion@channel stored from wreg
  5908  0556  00F5               	movwf	ADCC_GetSingleConversion@channel
  5909                           
  5910                           ;adcc.c: 135: ADPCH = channel;
  5911  0557  0875               	movf	ADCC_GetSingleConversion@channel,w
  5912  0558  0021               	movlb	1	; select bank1
  5913  0559  009E               	movwf	30	;volatile
  5914                           
  5915                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  5916  055A  1793               	bsf	19,7	;volatile
  5917                           
  5918                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  5919  055B  1313               	bcf	19,6	;volatile
  5920                           
  5921                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  5922  055C  1413               	bsf	19,0	;volatile
  5923                           
  5924                           ;adcc.c: 147: __nop();
  5925  055D  0000               	nop
  5926  055E                     l163:	
  5927                           ;adcc.c: 151: {
  5928                           
  5929                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  5930                           
  5931  055E  0021               	movlb	1	; select bank1
  5932  055F  1813               	btfsc	19,0	;volatile
  5933  0560  2D5E               	goto	l163
  5934                           
  5935                           ;adcc.c: 152: }
  5936                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5937  0561  080D               	movf	13,w	;volatile
  5938  0562  0020               	movlb	0	; select bank0
  5939  0563  00A1               	movwf	?_ADCC_GetSingleConversion+1
  5940  0564  0021               	movlb	1	; select bank1
  5941  0565  080C               	movf	12,w	;volatile
  5942  0566  0020               	movlb	0	; select bank0
  5943  0567  00A0               	movwf	?_ADCC_GetSingleConversion
  5944  0568  0008               	return
  5945  0569                     __end_of_ADCC_GetSingleConversion:	
  5946                           
  5947                           	psect	intentry
  5948  0004                     __pintentry:	
  5949 ;; *************** function _INTERRUPT_InterruptManager *****************
  5950 ;; Defined at:
  5951 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;Total ram usage:        1 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    2
  5972 ;; This function calls:
  5973 ;;		_I2C1_ISR
  5974 ;; This function is called by:
  5975 ;;		Interrupt level 1
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979  0004                     _INTERRUPT_InterruptManager:	
  5980                           
  5981                           ;incstack = 0
  5982  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5983                           
  5984                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5985  0005  3180               	pagesel	$
  5986  0006  0020               	movlb	0	; select bank0
  5987  0007  087F               	movf	127,w
  5988  0008  00F4               	movwf	??_INTERRUPT_InterruptManager
  5989                           
  5990                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bits.SS
      +                          P1IF == 1)
  5991  0009  1F0B               	btfss	11,6	;volatile
  5992  000A  2811               	goto	i1l317
  5993  000B  002E               	movlb	14	; select bank14
  5994  000C  1819               	btfsc	25,0	;volatile
  5995  000D  1C0F               	btfss	15,0	;volatile
  5996  000E  2811               	goto	i1l317
  5997                           
  5998                           ;interrupt_manager.c: 55: {
  5999                           ;interrupt_manager.c: 56: I2C1_ISR();
  6000  000F  3184  24FD         	fcall	_I2C1_ISR
  6001  0011                     i1l317:	
  6002                           ;interrupt_manager.c: 58: else
  6003                           ;interrupt_manager.c: 59: {
  6004                           
  6005                           ;interrupt_manager.c: 57: }
  6006                           
  6007  0011  0874               	movf	??_INTERRUPT_InterruptManager,w
  6008  0012  0020               	movlb	0	; select bank0
  6009  0013  00FF               	movwf	127
  6010  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6011  0015  0009               	retfie
  6012  0016                     __end_of_INTERRUPT_InterruptManager:	
  6013                           
  6014                           	psect	text13
  6015  04FD                     __ptext13:	
  6016 ;; *************** function _I2C1_ISR *****************
  6017 ;; Defined at:
  6018 ;;		line 107 in file "mcc_generated_files/i2c1.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  i2c_data        1    3[COMMON] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;Total ram usage:        2 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    1
  6039 ;; This function calls:
  6040 ;;		_I2C1_StatusCallback
  6041 ;; This function is called by:
  6042 ;;		_INTERRUPT_InterruptManager
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           
  6047                           ;psect for function _I2C1_ISR
  6048  04FD                     _I2C1_ISR:	
  6049                           
  6050                           ;i2c1.c: 109: uint8_t i2c_data = 0x55;
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6054  04FD  3055               	movlw	85
  6055  04FE  00F2               	movwf	??_I2C1_ISR
  6056  04FF  0872               	movf	??_I2C1_ISR,w
  6057  0500  00F3               	movwf	I2C1_ISR@i2c_data
  6058                           
  6059                           ;i2c1.c: 115: PIR3bits.SSP1IF = 0;
  6060  0501  002E               	movlb	14	; select bank14
  6061  0502  100F               	bcf	15,0	;volatile
  6062                           
  6063                           ;i2c1.c: 116: i2c_data = SSP1BUF;
  6064  0503  0023               	movlb	3	; select bank3
  6065  0504  080C               	movf	12,w	;volatile
  6066  0505  00F2               	movwf	??_I2C1_ISR
  6067  0506  0872               	movf	??_I2C1_ISR,w
  6068  0507  00F3               	movwf	I2C1_ISR@i2c_data
  6069                           
  6070                           ;i2c1.c: 117: if(1 == SSP1STATbits.R_nW)
  6071  0508  1D0F               	btfss	15,2	;volatile
  6072  0509  2D11               	goto	i1l272
  6073                           
  6074                           ;i2c1.c: 118: {
  6075                           ;i2c1.c: 119: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
  6076  050A  1A8F               	btfsc	15,5	;volatile
  6077  050B  1F11               	btfss	17,6	;volatile
  6078  050C  2D0F               	goto	i1l1650
  6079                           
  6080                           ;i2c1.c: 120: {
  6081                           ;i2c1.c: 122: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
  6082  050D  3003               	movlw	3
  6083  050E  2D1A               	goto	L1
  6084  050F                     i1l1650:	
  6085                           ;i2c1.c: 123: }
  6086                           
  6087                           
  6088                           ;i2c1.c: 124: else
  6089                           ;i2c1.c: 125: {
  6090                           ;i2c1.c: 127: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
  6091  050F  3001               	movlw	1
  6092  0510  2D1A               	goto	L1
  6093  0511                     i1l272:	
  6094                           ;i2c1.c: 128: }
  6095                           ;i2c1.c: 129: }
  6096                           
  6097                           
  6098                           ;i2c1.c: 130: else if(0 == SSP1STATbits.D_nA)
  6099  0511  1A8F               	btfsc	15,5	;volatile
  6100  0512  2D15               	goto	i1l1654
  6101                           
  6102                           ;i2c1.c: 131: {
  6103                           ;i2c1.c: 135: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
  6104  0513  3000               	movlw	0
  6105  0514  2D1A               	goto	L1
  6106  0515                     i1l1654:	
  6107                           ;i2c1.c: 136: }
  6108                           
  6109                           
  6110                           ;i2c1.c: 137: else
  6111                           ;i2c1.c: 138: {
  6112                           ;i2c1.c: 139: I2C1_slaveWriteData = i2c_data;
  6113  0515  0873               	movf	I2C1_ISR@i2c_data,w
  6114  0516  00F2               	movwf	??_I2C1_ISR
  6115  0517  0872               	movf	??_I2C1_ISR,w
  6116  0518  00F8               	movwf	_I2C1_slaveWriteData	;volatile
  6117                           
  6118                           ;i2c1.c: 142: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
  6119  0519  3002               	movlw	2
  6120  051A                     L1:	
  6121  051A  3184  2475         	fcall	_I2C1_StatusCallback
  6122                           
  6123                           ;i2c1.c: 143: }
  6124                           ;i2c1.c: 145: SSP1CON1bits.CKP = 1;
  6125  051C  0023               	movlb	3	; select bank3
  6126  051D  1610               	bsf	16,4	;volatile
  6127  051E  0008               	return
  6128  051F                     __end_of_I2C1_ISR:	
  6129                           
  6130                           	psect	text14
  6131  0475                     __ptext14:	
  6132 ;; *************** function _I2C1_StatusCallback *****************
  6133 ;; Defined at:
  6134 ;;		line 171 in file "mcc_generated_files/i2c1.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  i2c_bus_stat    1    wreg     enum E14254
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  i2c_bus_stat    1    1[COMMON] enum E14254
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;Total ram usage:        2 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_I2C1_ISR
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function _I2C1_StatusCallback
  6163  0475                     _I2C1_StatusCallback:	
  6164                           
  6165                           ;incstack = 0
  6166                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr1h+status,2+status,0]
  6167                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
  6168  0475  00F1               	movwf	I2C1_StatusCallback@i2c_bus_state
  6169                           
  6170                           ;i2c1.c: 174: static uint8_t EEPROM_Buffer[] =
  6171                           ;i2c1.c: 175: {
  6172                           ;i2c1.c: 176: 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e
      +                          ,0x0f,
  6173                           ;i2c1.c: 177: 0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e
      +                          ,0x1f,
  6174                           ;i2c1.c: 178: 0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e
      +                          ,0x2f,
  6175                           ;i2c1.c: 179: 0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e
      +                          ,0x3f,
  6176                           ;i2c1.c: 180: 0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e
      +                          ,0x4f,
  6177  0476  2CB2               	goto	i1l1610
  6178  0477                     i1l288:	
  6179                           ;i2c1.c: 191: {
  6180                           ;i2c1.c: 192: case I2C1_SLAVE_WRITE_REQUEST:
  6181                           
  6182                           
  6183                           ;i2c1.c: 194: slaveWriteType = SLAVE_DATA_ADDRESS;
  6184  0477  01F6               	clrf	I2C1_StatusCallback@slaveWriteType
  6185  0478  0AF6               	incf	I2C1_StatusCallback@slaveWriteType,f
  6186                           
  6187                           ;i2c1.c: 195: break;
  6188  0479  0008               	return
  6189  047A                     i1l1586:	
  6190                           ;i2c1.c: 201: {
  6191                           ;i2c1.c: 202: case SLAVE_DATA_ADDRESS:
  6192                           
  6193                           ;i2c1.c: 200: switch(slaveWriteType)
  6194                           
  6195                           ;i2c1.c: 198: case I2C1_SLAVE_WRITE_COMPLETED:
  6196                           
  6197                           
  6198                           ;i2c1.c: 203: eepromAddress = I2C1_slaveWriteData;
  6199  047A  0878               	movf	_I2C1_slaveWriteData,w	;volatile
  6200  047B  00F0               	movwf	??_I2C1_StatusCallback
  6201  047C  0870               	movf	??_I2C1_StatusCallback,w
  6202  047D  00F7               	movwf	I2C1_StatusCallback@eepromAddress
  6203                           
  6204                           ;i2c1.c: 204: iLEDBytesChangedCount=0;
  6205  047E  0020               	movlb	0	; select bank0
  6206  047F  01DD               	clrf	_iLEDBytesChangedCount	;volatile
  6207  0480  01DE               	clrf	_iLEDBytesChangedCount+1	;volatile
  6208                           
  6209                           ;i2c1.c: 205: break;
  6210  0481  2C9D               	goto	i1l1600
  6211  0482                     i1l1590:	
  6212                           ;i2c1.c: 209: default:
  6213                           
  6214                           ;i2c1.c: 208: case SLAVE_NORMAL_DATA:
  6215                           
  6216                           
  6217                           ;i2c1.c: 212: if(0 == iLEDBytesChangedCount)
  6218  0482  0020               	movlb	0	; select bank0
  6219  0483  085D               	movf	_iLEDBytesChangedCount,w	;volatile
  6220  0484  045E               	iorwf	_iLEDBytesChangedCount+1,w	;volatile
  6221  0485  1D03               	btfss	3,2
  6222  0486  2C8C               	goto	i1l1594
  6223                           
  6224                           ;i2c1.c: 213: {
  6225                           ;i2c1.c: 214: MSByteLED=I2C1_slaveWriteData;
  6226  0487  0878               	movf	_I2C1_slaveWriteData,w	;volatile
  6227  0488  00F0               	movwf	??_I2C1_StatusCallback
  6228  0489  0870               	movf	??_I2C1_StatusCallback,w
  6229  048A  00E0               	movwf	_MSByteLED	;volatile
  6230  048B  2C90               	goto	L2
  6231  048C                     i1l1594:	
  6232                           ;i2c1.c: 216: }else{
  6233                           
  6234                           ;i2c1.c: 215: iLEDBytesChangedCount++;
  6235                           
  6236                           
  6237                           ;i2c1.c: 217: LSByteLED=I2C1_slaveWriteData;
  6238  048C  0878               	movf	_I2C1_slaveWriteData,w	;volatile
  6239  048D  00F0               	movwf	??_I2C1_StatusCallback
  6240  048E  0870               	movf	??_I2C1_StatusCallback,w
  6241  048F  00DF               	movwf	_LSByteLED	;volatile
  6242  0490                     L2:	
  6243                           
  6244                           ;i2c1.c: 218: iLEDBytesChangedCount++;
  6245  0490  3001               	movlw	1
  6246  0491  07DD               	addwf	_iLEDBytesChangedCount,f	;volatile
  6247  0492  3000               	movlw	0
  6248  0493  3DDE               	addwfc	_iLEDBytesChangedCount+1,f	;volatile
  6249                           
  6250                           ;i2c1.c: 229: }
  6251                           
  6252                           ;i2c1.c: 219: }
  6253                           ;i2c1.c: 227: break;
  6254  0494  2C9D               	goto	i1l1600
  6255  0495                     i1l1598:	
  6256  0495  0876               	movf	I2C1_StatusCallback@slaveWriteType,w
  6257                           
  6258                           ; Switch size 1, requested type "space"
  6259                           ; Number of cases is 2, Range of values is 0 to 1
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            7     4 (average)
  6263                           ; direct_byte           10     6 (fixed)
  6264                           ; jumptable            260     6 (fixed)
  6265                           ;	Chosen strategy is simple_byte
  6266  0496  3A00               	xorlw	0	; case 0
  6267  0497  1903               	skipnz
  6268  0498  2C82               	goto	i1l1590
  6269  0499  3A01               	xorlw	1	; case 1
  6270  049A  1903               	skipnz
  6271  049B  2C7A               	goto	i1l1586
  6272  049C  2C82               	goto	i1l1590
  6273  049D                     i1l1600:	
  6274                           
  6275                           ;i2c1.c: 231: slaveWriteType = SLAVE_NORMAL_DATA;
  6276  049D  01F6               	clrf	I2C1_StatusCallback@slaveWriteType
  6277                           
  6278                           ;i2c1.c: 232: break;
  6279  049E  0008               	return
  6280  049F                     i1l1602:	
  6281                           ;i2c1.c: 234: case I2C1_SLAVE_READ_REQUEST:
  6282                           
  6283                           
  6284                           ;i2c1.c: 235: SSP1BUF = EEPROM_Buffer[eepromAddress++];
  6285  049F  0877               	movf	I2C1_StatusCallback@eepromAddress,w
  6286  04A0  3E70               	addlw	112
  6287  04A1  0086               	movwf	6
  6288  04A2  0187               	clrf	7
  6289  04A3  3023               	movlw	35
  6290  04A4  3D87               	addwfc	7,f
  6291  04A5  0801               	movf	1,w
  6292  04A6  0023               	movlb	3	; select bank3
  6293  04A7  008C               	movwf	12	;volatile
  6294  04A8  3001               	movlw	1
  6295  04A9  00F0               	movwf	??_I2C1_StatusCallback
  6296  04AA  0870               	movf	??_I2C1_StatusCallback,w
  6297  04AB  07F7               	addwf	I2C1_StatusCallback@eepromAddress,f
  6298                           
  6299                           ;i2c1.c: 236: if(sizeof(EEPROM_Buffer) <= eepromAddress)
  6300  04AC  3080               	movlw	128
  6301  04AD  0277               	subwf	I2C1_StatusCallback@eepromAddress,w
  6302  04AE  1C03               	skipc
  6303  04AF  0008               	return
  6304                           
  6305                           ;i2c1.c: 237: {
  6306                           ;i2c1.c: 238: eepromAddress = 0;
  6307  04B0  01F7               	clrf	I2C1_StatusCallback@eepromAddress
  6308                           
  6309                           ;i2c1.c: 245: }
  6310                           
  6311                           ;i2c1.c: 243: default:;
  6312                           
  6313                           ;i2c1.c: 242: case I2C1_SLAVE_READ_COMPLETED:
  6314                           
  6315                           ;i2c1.c: 239: }
  6316                           ;i2c1.c: 240: break;
  6317  04B1  0008               	return
  6318  04B2                     i1l1610:	
  6319  04B2  0871               	movf	I2C1_StatusCallback@i2c_bus_state,w
  6320                           
  6321                           ; Switch size 1, requested type "space"
  6322                           ; Number of cases is 4, Range of values is 0 to 3
  6323                           ; switch strategies available:
  6324                           ; Name         Instructions Cycles
  6325                           ; simple_byte           13     7 (average)
  6326                           ; direct_byte           14     6 (fixed)
  6327                           ; jumptable            260     6 (fixed)
  6328                           ;	Chosen strategy is simple_byte
  6329  04B3  3A00               	xorlw	0	; case 0
  6330  04B4  1903               	skipnz
  6331  04B5  2C77               	goto	i1l288
  6332  04B6  3A01               	xorlw	1	; case 1
  6333  04B7  1903               	skipnz
  6334  04B8  2C9F               	goto	i1l1602
  6335  04B9  3A03               	xorlw	3	; case 2
  6336  04BA  1903               	skipnz
  6337  04BB  2C95               	goto	i1l1598
  6338  04BC  3A01               	xorlw	1	; case 3
  6339  04BD  1903               	skipnz
  6340  04BE  2CC0               	goto	i1l302
  6341  04BF  2CC0               	goto	i1l302
  6342  04C0                     i1l302:	
  6343  04C0  0008               	return
  6344  04C1                     __end_of_I2C1_StatusCallback:	
  6345  007E                     btemp	set	126	;btemp
  6346  007E                     int$flags	set	126
  6347  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        129
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     61      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADCC_GetSingleConversion
    _main->_UpdateLEDs
    _main->_UpdateLEDsFromValue
    _blinkyLoop->_delay
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_StatusCallback

Critical Paths under _main in BANK0

    _main->_blinkyLoop
    _blinkyLoop->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0    4193
                                             23 BANK0     38    38      0
           _ADCC_GetSingleConversion
                  _SYSTEM_Initialize
                         _UpdateLEDs
                _UpdateLEDsFromValue
                         _blinkyLoop
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1352
                                             16 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                               11     9      2     727
                                              5 COMMON     1     1      0
                                              6 BANK0     10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _UpdateLEDsFromValue                                  5     4      1     666
                                              5 COMMON     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UpdateLEDs                                           4     3      1    1153
                                              5 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      46
                                              4 COMMON     1     1      0
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             2     2      0      46
                                              2 COMMON     2     2      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_StatusCallback                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _UpdateLEDs
   _UpdateLEDsFromValue
   _blinkyLoop
     ___wmul
     _delay
       ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_ISR
     _I2C1_StatusCallback

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 09 22:05:11 2017

                                  pc 0002                          __CFG_CP$OFF 0000  
                ___wmul@multiplicand 0022                                  l401 01EB  
                                l163 055E                                  l411 0223  
                                l406 0207                                  l440 00EB  
                                l432 00A1                                  l424 0057  
                                l416 023F                                  l347 0458  
                                l452 015A                                  l444 0110  
                                l436 00C6                                  l428 007C  
                                l380 017B                                  l391 01B3  
                                l448 0135                                  l536 0528  
                                l386 0197                                  l396 01CF  
                                _GIE 005F                         __CFG_CPD$OFF 0000  
                                u640 04FB                         __CFG_BORV$LO 0000  
                                wreg 0009                                 S2398 0569  
                       __CFG_LVP$OFF 0000                         __CFG_ZCD$OFF 0000  
                   __end_of_I2C1_ISR 051F                                 l2100 017E  
                               l2110 019A                                 l2102 0189  
                               l2120 01B6                                 l2112 01A5  
                               l2016 0522                                 l2130 01D2  
                               l2122 01C1                                 l2204 0067  
                               l2140 01EE                                 l2132 01DD  
                               l2222 008C                                 l2214 007E  
                               l2206 006B                                 l2150 020A  
                               l2142 01F9                                 l2312 0145  
                               l2304 0137                                 l2240 00B1  
                               l2232 00A3                                 l2224 0090  
                               l2160 0226                                 l2152 0215  
                               l2314 0149                                 l2250 00C8  
                               l2242 00B5                                 l2170 0242  
                               l2162 0231                                 l2074 03D0  
                               l2260 00DA                                 l2092 016E  
                               l2172 024D                                 l2076 0412  
                               l2088 0167                                 l2352 02B9  
                               l2344 0282                                 l2258 00D6  
                               l2186 0042                                 l2276 00FB  
                               l2268 00ED                                 l2196 0059  
                               l2188 0046                                 l2372 0328  
                               l2294 0120                                 l2286 0112  
                               l2278 00FF                                 l2358 02CC  
                               l2296 0124                                 l2368 0312  
                               u1205 0529                                 u1215 052E  
                               u1243 046A                                 u1235 044D  
                               _LATA 0016                                 _LATB 0017  
                               _LATC 0018                    main@rawFaderValue 0042  
                               u1265 03DA                                 u1615 0280  
                               u1625 02B7                                 u1635 02CA  
                               u1655 0326                                 u1665 0332  
                               _WPUA 0F39                                 _WPUB 0F44  
                               _WPUC 0F4F                                 _WPUE 0F65  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0259                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0016  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                _I2C1_StatusCallback 0475       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 05A9                                _ADACQ 009D  
                              _ADACT 0099                                _ADCAP 009B  
                              ?_main 0070                                _ADCLK 0098  
                              _ADCNT 010C                                _ADPCH 009E  
                              _ADREF 009A                                _ADPRE 009C  
                      __CFG_WDTE$OFF 0000                                _ADRPT 010D  
                      main@iFaderNum 005C                       __CFG_DEBUG$OFF 0000  
                              i1l302 04C0                                i1l317 0011  
                              i1l272 0511                                i1l288 0477  
                              _OSCEN 0891                                _TRISA 0011  
                              _TRISB 0012                                _TRISC 0013  
                  ??_I2C1_Initialize 0075                 ?_I2C1_StatusCallback 0070  
                              _delay 0422                                status 0003  
                              wtemp0 007E          __end_of_UpdateLEDsFromValue 0259  
                    __initialization 0018                         __end_of_main 0340  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0037  
              ??_I2C1_StatusCallback 0070                               ?_delay 0026  
                             _ADACCH 0091                               _ADACCL 0090  
                             _ADCON0 0093                               _ADCON1 0094  
                             _ADCON2 0095                               _ADCON3 0096  
                             _ADERRH 0117                               _ADERRL 0116  
                             _ADLTHH 010F                               _ADLTHL 010E  
                             _ADRESH 008D                               _ADRESL 008C  
                             _ADSTAT 0097                               _ADUTHH 0111  
                             _ADUTHL 0110                               _ANSELA 0F38  
                             _ANSELB 0F43                               _ANSELC 0F4E  
                 __CFG_RSTOSC$HFINT1 0000                               _RC3PPS 0F23  
                             _RC4PPS 0F24                               i1l1600 049D  
                             _ODCONA 0F3A                               i1l1602 049F  
                             i1l1610 04B2                               _ODCONB 0F45  
                             _ODCONC 0F50                               i1l1650 050F  
                             i1l1590 0482                               i1l1654 0515  
                             i1l1594 048C                               i1l1586 047A  
                             i1l1598 0495                       __CFG_WDTCCS$SC 0000  
              _iLEDBytesChangedCount 005D                               _OSCFRQ 0893  
                     __CFG_PWRTE$OFF 0000     I2C1_StatusCallback@EEPROM_Buffer 2370  
                             ___wmul 051F                       __CFG_STVREN$ON 0000  
                          ?_I2C1_ISR 0070                         __pdataBIGRAM 2370  
                    _ADCC_Initialize 053B                           _UpdateLEDs 0033  
                       __pdataCOMMON 0078    __size_of_ADCC_GetSingleConversion 0013  
          ?_ADCC_GetSingleConversion 0020                    _SYSTEM_Initialize 0594  
            __end_of__initialization 002F                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0076  
           main@I2C_ADDRESS_FADELED0 0052                        __end_of_delay 0475  
                         ??_I2C1_ISR 0072                              ??_delay 0075  
          __end_of_SYSTEM_Initialize 05A0                           __pbssBANK0 005D  
      UpdateLEDsFromValue@inFaderNum 0021                       _SSP1DATPPSbits 0EC6  
                         __pmaintext 0259                              ?___wmul 0020  
                    __CFG_PPS1WAY$ON 0000              __end_of_ADCC_Initialize 0556  
                         __pintentry 0004                      _I2C1_Initialize 0579  
                            _ADFLTRH 0115                              _ADFLTRL 0114  
                         _blinkyLoop 03C0                              _ADPREVH 008F  
                            _ADPREVL 008E                              _ADSTPTH 0113  
                            _ADSTPTL 0112                       _SSP1CLKPPSbits 0EC5  
              UpdateLEDs@inLSByteLED 0075                UpdateLEDs@inMSByteLED 0021  
                        ?_UpdateLEDs 0075    I2C1_StatusCallback@slaveWriteType 0076  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _SSP1ADD 018D  
                            _PPSLOCK 0E8F                              _SSP1BUF 018C  
                            _SSP1MSK 018E                 __CFG_SCANE$available 0000  
                    __size_of___wmul 001C                              __ptext1 03C0  
                            __ptext2 0422                              __ptext3 051F  
                            __ptext4 015D                              __ptext5 0033  
                            __ptext6 0594                              __ptext7 04C1  
                            __ptext8 05A0                              __ptext9 0579  
              _OSCILLATOR_Initialize 05A0             ??_PIN_MANAGER_Initialize 0075  
         __size_of_SYSTEM_Initialize 000C                 end_of_initialization 002F  
                            init_ram 0588                              initloop 0589  
   I2C1_StatusCallback@eepromAddress 0077               main@prevbyteFaderValue 003A  
            __end_of_I2C1_Initialize 0588                  __size_of_UpdateLEDs 012A  
                   ?_ADCC_Initialize 0070     __end_of_ADCC_GetSingleConversion 0569  
                        ?_blinkyLoop 0030                __CFG_WDTCPS$WDTCPS_31 0000  
        __end_of_I2C1_StatusCallback 04C1         __size_of_UpdateLEDsFromValue 00FC  
                          _LSByteLED 005F                    __size_of_I2C1_ISR 0022  
                          _MSByteLED 0060                     __CFG_FEXTOSC$OFF 0000  
               __end_of_cMaxFaderCnt 05AB               delay@adjustedDelaytime 0028  
                      __pidataBIGRAM 0340                       __end_of___wmul 053B  
                      __pidataCOMMON 05AD               ?_OSCILLATOR_Initialize 0070  
    UpdateLEDsFromValue@wkBrightFlag 0023                  start_initialization 0018  
    __size_of_PIN_MANAGER_Initialize 003C                     main@wkFaderValue 0053  
                __size_of_blinkyLoop 0062                     ?_I2C1_Initialize 0070  
                   __CFG_LPBOREN$OFF 0000                     I2C1_ISR@i2c_data 0073  
                           ??___wmul 0075                         ??_UpdateLEDs 0020  
           _ADCC_GetSingleConversion 0556                          __pbssCOMMON 0076  
                          ___latbits 0002                        __pcstackBANK0 0020  
   I2C1_StatusCallback@i2c_bus_state 0071                  blinkyLoop@delayTime 0033  
         UpdateLEDsFromValue@inValue 0075               _PIN_MANAGER_Initialize 04C1  
                 __end_of_UpdateLEDs 015D      ADCC_GetSingleConversion@channel 0075  
                           _I2C1_ISR 04FD         ??_INTERRUPT_InterruptManager 0074  
                          __pswtext1 0569                  blinkyLoop@loopCount 0035  
                     __size_of_delay 0053                         delay@counter 002C  
                _UpdateLEDsFromValue 015D                       ___wmul@product 0024  
                 main@byteFaderValue 0054                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR3bits 070F  
                           _SSP1CON1 0190                             _SSP1CON2 0191  
                           _SSP1CON3 0192                             _SSP1STAT 018F  
                       ??_blinkyLoop 0032                  _I2C1_slaveWriteData 0078  
               ?_UpdateLEDsFromValue 0075                           _ADCON0bits 0093  
                         _ADCON1bits 0094                           _ADCON2bits 0095  
                         _ADCON3bits 0096                    ___wmul@multiplier 0020  
                       _cMaxFaderCnt 05A9                   __end_of_blinkyLoop 0422  
                         _ADSTATbits 0097              ??_OSCILLATOR_Initialize 0075  
                     delay@delaytime 0026                ??_UpdateLEDsFromValue 0020  
           __size_of_ADCC_Initialize 001B                     UpdateLEDs@wkByte 0022  
       __size_of_I2C1_StatusCallback 004C                             __ptext10 053B  
                           __ptext11 0556                             __ptext13 04FD  
                           __ptext14 0475                   blinkyLoop@maxLoops 0030  
                       _SSP1CON1bits 0190                         _SSP1CON2bits 0191  
                      __size_of_main 00E7                 __CFG_WDTCWS$WDTCWS_7 0000  
         ??_ADCC_GetSingleConversion 0075                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0016           _INTERRUPT_InterruptManager 0004  
                       _SSP1STATbits 018F          PIN_MANAGER_Initialize@state 0075  
                     _cMstrClkAdjust 05AB                           _INTCONbits 000B  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
        UpdateLEDsFromValue@wkOnFlag 0022                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E8F               __end_of_cMstrClkAdjust 05AD  
           __size_of_I2C1_Initialize 000F                        __pstringtext1 05A9  
                      __pstringtext2 05AB       __end_of_PIN_MANAGER_Initialize 04FD  
                  ??_ADCC_Initialize 0075  
